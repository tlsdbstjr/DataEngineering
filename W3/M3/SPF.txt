
DSP First
Second Edition
Global Edition
James H. McClellan
Georgia Institute of Technology
Ronald W. Schafer
Stanford University
Mark A. Yoder
Rose-Hulman Institute of Technology
Boston • Columbus • Indianapolis • New York • San Francisco
Hoboken •Amsterdam •Cape Town •Dubai •London •Madrid •Milan •Munich
Paris •Montreal •Toronto •Delhi •Mexico City •S˜ao Paulo
Sydney • Hong Kong • Seoul • Singapore • Taipei • Tokyo
Vice President and Editorial Director, ECS: Marcia J. Horton
Aquisitions Editor: Julie Bai
Editorial Assistant: Michelle Bayman
Senior Acquisitions Editor, Global Editions: Sandhya Ghoshal
VP of Marketing: Christy Lesko
Director of Field Marketing: Tim GalliganProduct Marketing Manager: Bram van KempenField Marketing Manager: Demetrius HallMarketing Assistant: Jon BryantSenior Managing Editor: Scott DisannoProgram Manager: Joanne ManningProject Editor, Global Editions: K.K. NeelakantanSenior Manufacturing Controller, Global Editions: Trudy KimberMedia Production Manager, Global Editions: Vikram KumarGlobal HE Director of Vendor Sourcing and Procurement: Diane HynesOperations Specialist: Maura Zaldivar-GarciaCreative Director: Blair BrownSenior Art Director: Janet SlowikCover Designer: Lumina DatamaticsManager, Rights and Permissions: Rachel YoudelmanFull-Service Project Management: Pavithra Jayapaul, Jouve India
Image credits:
Cover photo: fotographic1980/Shutterstock.comImage on page 22: James McClellan, Ronald Schafer, Mark Yoder
Art not otherwise attributed is copyright 2015 by James H. McClellan.
Screenshot from Microsoft ® MATLAB ®. Used by permission of Microsoft Corporation. Pages 140, 249, 292, 497, 471.
MATLAB is a registered trademark of The Mathworks, 3 Apple Hill Drive, Natick, MA 01760-2098.Pearson Education Limited
Edinburgh GateHarlowEssex CM20 2JEEngland
and Associated Companies throughout the world
Visit us on the World Wide Web at:
www.pearsonglobaleditions.com© Pearson Education Limited 2017
The rights of James H. McClellan, Ronald W. Schafer, and Mark A. Yoder to be identiﬁed as the authors of this work have been asserted
by them in accordance with the Copyright, Designs and Patents Act 1988.
Authorized adaptation from the United States edition, entitled DSP First, 2
ndEdition , ISBN 9780136019251, by James H. McClellan,
Ronald W. Schafer, and Mark A. Yoder published by Pearson Education © 2016.
All rights reserved. No part of this publication may be reproduced, stored in a retrieval system, or transmitted in any form or by any
means, electronic, mechanical, photocopying, recording or otherwise, without either the prior written permission of the publisher or a
license permitting restricted copying in the United Kingdom issued by the Copyright Licensing Agency Ltd, Saffron House, 6–10 KirbyStreet, London EC1N 8TS.
All trademarks used herein are the property of their respective owners. The use of any trademark in this text does not vest in the author or
publisher any trademark ownership rights in such trademarks, nor does the use of such trademarks imply any afﬁliation with orendorsement of this book by such owners.
British Library Cataloguing-in-Publication Data
A catalogue record for this book is available from the British Library
1 0987654321
ISBN 10: 1292113863ISBN 13: 9781292113869
Typeset in 10/12 Times LT Std Roman by Jouve India
Printed and bound in Malaysia.
Contents
PREFACE 15
1 Introduction 21
1-1 Mathematical Representation of Signals ............. 22
1-2 Mathematical Representation of Systems ............ 2 5
1-3 Systems as Building Blocks .................... 2 7
1-4 The Next Step ........................... 2 8
2 Sinusoids 29
2-1 Tuning-Fork Experiment ..................... 30
2-2 Review of Sine and Cosine Functions .............. 3 2
2-3 Sinusoidal Signals ........................ 3 4
2-3.1 Relation of Frequency to Period ............. 3 5
3
4 CONTENTS
2-3.2 Phase and Time Shift ................... 3 7
2-4 Sampling and Plotting Sinusoids ................. 3 9
2-5 Complex Exponentials and Phasors ............... 4 1
2-5.1 Review of Complex Numbers ............... 4 2
2-5.2 Complex Exponential Signals ............... 4 3
2-5.3 The Rotating Phasor Interpretation ............ 4 5
2-5.4 Inverse Euler Formulas .................. 4 7
2-6 Phasor Addition .......................... 4 8
2-6.1 Addition of Complex Numbers .............. 4 9
2-6.2 Phasor Addition Rule ................... 4 9
2-6.3 Phasor Addition Rule: Example .............. 5 1
2-6.4 MATLAB Demo of Phasors ............... 5 3
2-6.5 Summary of the Phasor Addition Rule .......... 5 3
2-7 Physics of the Tuning Fork .................... 5 4
2-7.1 Equations from Laws of Physics ............. 5 4
2-7.2 General Solution to the Differential Equation ...... 5 7
2-7.3 Listening to Tones ..................... 5 8
2-8 Time Signals: More Than Formulas ............... 5 8
2-9 Summary and Links ........................ 5 9
2-10 Problems ............................. 6 0
3 Spectrum Representation 69
3-1 The Spectrum of a Sum of Sinusoids ............... 70
3-1.1 Notation Change ..................... 7 2
3-1.2 Graphical Plot of the Spectrum .............. 7 2
3-1.3 Analysis versus Synthesis ................. 7 3
3-2 Sinusoidal Amplitude Modulation ................. 7 4
3-2.1 Multiplication of Sinusoids ................ 7 4
3-2.2 Beat Note Waveform ................... 7 5
3-2.3 Amplitude Modulation .................. 7 8
3-2.4 AM Spectrum ....................... 7 9
3-2.5 The Concept of Bandwidth ................ 8 0
3-3 Operations on the Spectrum .................... 8 1
3-3.1 Scaling or Adding a Constant ............... 8 1
3-3.2 Adding Signals ...................... 8 2
3-3.3 Time-Shifting x(t) Multiplies akby a
Complex Exponential ................... 8 4
3-3.4 Differentiating x(t) Multiplies akby(j2πfk)...... 8 4
3-3.5 Frequency Shifting .................... 8 5
3-4 Periodic Waveforms ........................ 8 7
3-4.1 Synthetic V owel ...................... 8 8
3-4.2 Sine-Cubed Signal .................... 9 1
CONTENTS 5
3-4.3 Example of a Non-Periodic Signal ............ 9 2
3-5 Fourier Series ........................... 9 4
3-5.1 Fourier Series: Analysis .................. 9 5
3-5.2 Analysis of a Full-Wave Rectiﬁed Sine Wave ...... 9 5
3-5.3 Spectrum of the FWRS Fourier Series .......... 9 8
3-5.3.1 DC Value of Fourier Series .......... 9 8
3-5.3.2 Finite Synthesis of a Full-Wave
Rectiﬁed Sine ................. 9 9
3-6 Time–Frequency Spectrum .................... 1 0 1
3-6.1 Stepped Frequency .................... 1 0 3
3-6.2 Spectrogram Analysis ................... 1 0 3
3-7 Frequency Modulation: Chirp Signals .............. 1 0 5
3-7.1 Chirp or Linearly Swept Frequency ........... 1 0 5
3-7.2 A Closer Look at Instantaneous Frequency ........ 1 0 7
3-8 Summary and Links ........................ 1 0 9
3-9 Problems ............................. 1 1 0
4 Sampling and Aliasing 122
4-1 Sampling .............................. 123
4-1.1 Sampling Sinusoidal Signals ............... 1 2 5
4-1.2 The Concept of Aliases .................. 1 2 7
4-1.3 Sampling and Aliasing .................. 1 2 9
4-1.4 Spectrum of a Discrete-Time Signal ........... 1 2 9
4-1.5 The Sampling Theorem .................. 1 3 0
4-1.6 Ideal Reconstruction ................... 1 3 1
4-2 Spectrum View of Sampling and Reconstruction ......... 1 3 3
4-2.1 Spectrum of a Discrete-Time Signal
Obtained by Sampling .................. 1 3 3
4-2.2 Over-Sampling ...................... 1 3 4
4-2.3 Aliasing Due to Under-Sampling ............. 1 3 5
4-2.4 Folding Due to Under-Sampling ............. 1 3 6
4-2.5 Maximum Reconstructed Frequency ........... 1 3 8
4-2.6 Sampling and Reconstruction GUI ............ 1 4 0
4-3 Discrete-to-Continuous Conversion ............... 1 4 1
4-3.1 Interpolation with Pulses ................. 1 4 1
4-3.2 Zero-Order Hold Interpolation .............. 1 4 2
4-3.3 Linear Interpolation .................... 1 4 3
4-3.4 Cubic-Spline Interpolation ................ 1 4 4
4-3.5 Over-Sampling Aids Interpolation ............ 1 4 5
4-3.6 Ideal Bandlimited Interpolation .............. 1 4 7
6 CONTENTS
4-4 The Sampling Theorem ...................... 1 4 8
4-5 Strobe Demonstration ....................... 1 4 9
4-5.1 Spectrum Interpretation .................. 1 5 3
4-6 Summary and Links ........................ 1 5 5
4-7 Problems ............................. 1 5 5
5 FIR Filters 167
5-1 Discrete-Time Systems ...................... 168
5-2 The Running-Average Filter ................... 1 6 9
5-3 The General FIR Filter ...................... 1 7 3
5-3.1 An Illustration of FIR Filtering .............. 1 7 6
5-4 The Unit Impulse Response and Convolution ........... 1 7 8
5-4.1 Unit Impulse Sequence .................. 1 7 8
5-4.2 Unit Impulse Response Sequence ............. 1 7 9
5-4.2.1 The Unit-Delay System ............ 1 8 1
5-4.3 FIR Filters and Convolution ............... 1 8 1
5-4.3.1 Computing the Output of a Convolution .... 1 8 2
5-4.3.2 The Length of a Convolution ......... 1 8 3
5-4.3.3 Convolution in MATLAB ........... 1 8 4
5-4.3.4 Polynomial Multiplication in MATLAB .... 1 8 4
5-4.3.5 Filtering the Unit-Step Signal ......... 1 8 5
5-4.3.6 Commutative Property of Convolution .... 1 8 6
5-4.3.7 MATLAB GUI for Convolution ........ 1 8 7
5-5 Implementation of FIR Filters ................... 1 8 9
5-5.1 Building Blocks ...................... 1 8 9
5-5.1.1 Multiplier ................... 1 8 9
5-5.1.2 Adder ...................... 1 9 0
5-5.1.3 Unit Delay ................... 1 9 0
5-5.2 Block Diagrams ...................... 1 9 0
5-5.2.1 Other Block Diagrams ............. 1 9 2
5-5.2.2 Internal Hardware Details ........... 1 9 4
5-6 Linear Time-Invariant (LTI) Systems ............... 1 9 4
5-6.1 Time Invariance ...................... 1 9 5
5-6.2 Linearity .......................... 1 9 6
5-6.3 The FIR Case ....................... 1 9 7
5-7 Convolution and LTI Systems .................. 1 9 8
5-7.1 Derivation of the Convolution Sum ............ 1 9 9
5-7.2 Some Properties of LTI Systems ............. 2 0 0
5-8 Cascaded LTI Systems ....................... 2 0 2
5-9 Example of FIR Filtering ..................... 2 0 4
5-10 Summary and Links ........................ 2 0 7
5-11 Problems ............................. 2 0 7
CONTENTS 7
6 Frequency Response of FIR Filters 214
6-1 Sinusoidal Response of FIR Systems ............... 215
6-2 Superposition and the Frequency Response ........... 2 1 8
6-3 Steady-State and Transient Response ............... 2 2 1
6-4 Properties of the Frequency Response .............. 2 2 3
6-4.1 Relation to Impulse Response and Difference
Equation .......................... 2 2 3
6-4.2 Periodicity of H(ejˆω)................... 2 2 5
6-4.3 Conjugate Symmetry ................... 2 2 5
6-5 Graphical Representation of the Frequency Response ...... 2 2 6
6-5.1 Delay System ....................... 2 2 6
6-5.2 First-Difference System .................. 2 2 7
6-5.3 A Simple Lowpass Filter ................. 2 2 9
6-6 Cascaded LTI Systems ....................... 2 3 2
6-7 Running-Sum Filtering ...................... 2 3 4
6-7.1 Plotting the Frequency Response ............. 2 3 5
6-7.2 Cascade of Magnitude and Phase ............. 2 3 9
6-7.3 Frequency Response of Running Averager ........ 2 4 0
6-7.4 Experiment: Smoothing an Image ............ 2 4 0
6-8 Filtering Sampled Continuous-Time Signals ........... 2 4 4
6-8.1 Example: A Lowpass Averager for
Continuous-Time Signals ................. 2 4 5
6-8.2 Interpretation of Delay .................. 2 4 6
6-9 Summary and Links ........................ 2 4 9
6-10 Problems ............................. 2 5 0
7 Discrete-Time Fourier Transform 259
7-1 DTFT: Fourier Transform for Discrete-Time Signals ....... 260
7-1.1 Forward DTFT ...................... 2 6 1
7-1.2 DTFT of a Shifted Impulse Sequence .......... 2 6 1
7-1.3 Linearity of the DTFT .................. 2 6 2
7-1.4 Uniqueness of the DTFT ................. 2 6 3
7-1.5 DTFT of a Pulse ...................... 2 6 3
7-1.6 DTFT of a Right-Sided Exponential Sequence ...... 2 6 4
7-1.7 Existence of the DTFT .................. 2 6 5
7-1.8 The Inverse DTFT ..................... 2 6 6
7-1.9 Bandlimited DTFT .................... 2 6 7
7-1.10 Inverse DTFT for the Right-Sided Exponential ...... 2 7 0
7-1.11 The DTFT Spectrum ................... 2 7 0
8 CONTENTS
7-2 Properties of the DTFT ...................... 2 7 1
7-2.1 Linearity Property ..................... 2 7 2
7-2.2 Time-Delay Property ................... 2 7 2
7-2.3 Frequency-Shift Property ................. 2 7 3
7-2.3.1 DTFT of a Finite-Length
Complex Exponential ............. 2 7 3
7-2.3.2 DTFT of a Finite-Length Real
Cosine Signal ................. 2 7 5
7-2.4 Convolution and the DTFT ................ 2 7 5
7-2.4.1 Filtering is Convolution ............ 2 7 7
7-2.5 Energy Spectrum and the Autocorrelation Function . . . 277
7-2.5.1 Autocorrelation Function ........... 2 7 8
7-3 Ideal Filters ............................ 2 7 9
7-3.1 Ideal Lowpass Filter .................... 2 8 0
7-3.2 Ideal Highpass Filter ................... 2 8 2
7-3.3 Ideal Bandpass Filter ................... 2 8 3
7-4 Practical FIR Filters ........................ 2 8 4
7-4.1 Windowing ........................ 2 8 4
7-4.2 Filter Design ....................... 2 8 5
7-4.2.1 Window the Ideal Impulse Response ..... 2 8 6
7-4.2.2 Frequency Response of Practical
Filters ..................... 2 8 6
7-4.2.3 Passband Deﬁned for the Frequency
Response .................... 2 8 8
7-4.2.4 Stopband Deﬁned for the Frequency
Response .................... 2 8 9
7-4.2.5 Transition Zone of the LPF .......... 2 9 0
7-4.2.6 Summary of Filter Speciﬁcations ....... 2 9 1
7-4.3 GUI for Filter Design ................... 2 9 1
7-5 Table of Fourier Transform Properties and Pairs ......... 2 9 2
7-6 Summary and Links ........................ 2 9 3
7-7 Problems ............................. 2 9 4
8 Discrete Fourier Transform 301
8-1 Discrete Fourier Transform (DFT) ................ 302
8-1.1 The Inverse DFT ..................... 3 0 4
8-1.2 DFT Pairs from the DTFT ................ 3 0 6
8-1.2.1 DFT of Shifted Impulse ............ 3 0 6
8-1.2.2 DFT of Complex Exponential ......... 3 0 7
8-1.3 Computing the DFT .................... 3 0 8
8-1.4 Matrix Form of the DFT and IDFT ............ 3 0 9
8-2 Properties of the DFT ....................... 3 1 0
CONTENTS 9
8-2.1 DFT Periodicity for X[k]................. 3 1 1
8-2.2 Negative Frequencies and the DFT ............ 3 1 1
8-2.3 Conjugate Symmetry of the DFT ............. 3 1 2
8-2.3.1 Ambiguity at X[N/2]............. 3 1 3
8-2.4 Frequency-Domain Sampling and Interpolation ..... 3 1 4
8-2.5 DFT of a Real Cosine Signal ............... 3 1 6
8-3 Inherent Time-Domain Periodicity of x[n]i n t h e D F T...... 3 1 8
8-3.1 DFT Periodicity for x[n] ................. 3 1 9
8-3.2 The Time Delay Property for the DFT .......... 3 2 1
8-3.2.1 Zero Padding .................. 3 2 3
8-3.3 The Convolution Property for the DFT .......... 3 2 4
8-4 Table of Discrete Fourier Transform Properties and Pairs .... 3 2 6
8-5 Spectrum Analysis of Discrete Periodic Signals ......... 3 2 7
8-5.1 Periodic Discrete-Time Signal: Discrete
Fourier Series ....................... 3 2 8
8-5.2 Sampling Bandlimited Periodic Signals ......... 3 3 1
8-5.3 Spectrum Analysis of Periodic Signals .......... 3 3 4
8-6 Windows .............................. 3 3 7
8-6.1 DTFT of Windows .................... 3 3 9
8-7 The Spectrogram .......................... 3 4 2
8-7.1 An Illustrative Example .................. 3 4 3
8-7.2 Time-Dependent DFT ................... 3 4 5
8-7.3 The Spectrogram Display ................. 3 4 8
8-7.4 Interpretation of the Spectrogram ............. 3 4 8
8-7.4.1 Frequency Resolution ............. 3 5 0
8-7.5 Spectrograms in MATLAB ................ 3 5 3
8-8 The Fast Fourier Transform (FFT) ................ 3 5 4
8-8.1 Derivation of the FFT .................. 3 5 4
8-8.1.1 FFT Operation Count ............. 3 5 7
8-9 Summary and Links ........................ 3 5 8
8-10 Problems ............................. 3 5 8
9z-Transforms 367
9-1 Deﬁnition of the z-Transform ................... 368
9-2 Basic z-Transform Properties ................... 3 7 1
9-2.1 Linearity Property of the z-Transform .......... 3 7 1
9-2.2 Time-Delay Property of the z-Transform ......... 3 7 1
9-2.3 A General z-Transform Formula ............. 3 7 2
9-3 The z-Transform and Linear Systems ............... 3 7 3
9-3.1 Unit-Delay System .................... 3 7 4
9-3.2 z−1Notation in Block Diagrams ............. 3 7 4
9-3.3 The z-Transform of an FIR Filter ............. 3 7 5
10 CONTENTS
9-3.4 z-Transform of the Impulse Response .......... 3 7 5
9-3.5 Roots of a z-Transform Polynomial ............ 3 7 6
9-4 Convolution and the z-Transform ................. 3 7 8
9-4.1 Cascading Systems .................... 3 8 1
9-4.2 Factoring z-Polynomials ................. 3 8 3
9-4.3 Deconvolution ....................... 3 8 4
9-5 Relationship Between the z-Domain and the ˆω-Domain ..... 3 8 4
9-5.1 The z-Plane and the Unit Circle .............. 3 8 6
9-5.2 The z-Transform and the DFT .............. 3 8 7
9-6 The Zeros and Poles of H(z) ................... 3 8 9
9-6.1 Pole-Zero Plot ....................... 3 9 0
9-6.2 Signiﬁcance of the Zeros of H(z) ............ 3 9 1
9-6.3 Nulling Filters ....................... 3 9 2
9-6.4 Graphical Relation Between zandˆω........... 3 9 3
9-6.5 Three-Domain Movies .................. 3 9 6
9-7 Simple Filters ........................... 3 9 7
9-7.1 Generalize the L-Point Running-Sum Filter ....... 3 9 7
9-7.2 A Complex Bandpass Filter ................ 3 9 9
9-7.3 A Bandpass Filter with Real Coefﬁcients ......... 3 9 9
9-8 Practical Bandpass Filter Design ................. 4 0 1
9-9 Properties of Linear-Phase Filters ................. 4 0 4
9-9.1 The Linear-Phase Condition ............... 4 0 4
9-9.2 Locations of the Zeros of FIR Linear-
Phase Systems ....................... 4 0 5
9-10 Summary and Links ........................ 4 0 6
9-11 Problems ............................. 4 0 7
10 IIR Filters 414
10-1 The General IIR Difference Equation ............... 415
10-2 Time-Domain Response ...................... 4 1 6
10-2.1 Linearity and Time Invariance of IIR Filters ...... 4 1 8
10-2.2 Impulse Response of a First-Order IIR System ..... 4 1 9
10-2.3 Response to Finite-Length Inputs ............ 4 2 1
10-2.4 Step Response of a First-Order Recursive System . . . 422
10-3 System Function of an IIR Filter ................. 4 2 5
10-3.1 The General First-Order Case .............. 4 2 5
10-3.2 H(z) from the Impulse Response ............ 4 2 7
10-4 The System Function and Block Diagram Structures ....... 4 2 8
10-4.1 Direct Form I Structure ................. 4 2 8
10-4.2 Direct Form II Structure ................. 4 2 9
10-4.3 The Transposed Form Structure ............. 4 3 1
10-5 Poles and Zeros .......................... 4 3 2
CONTENTS 11
10-5.1 Roots in MATLAB ................... 4 3 4
10-5.2 Poles or Zeros at z=0o r∞.............. 4 3 4
10-5.3 Output Response from Pole Location .......... 4 3 5
10-6 Stability of IIR Systems ...................... 4 3 6
10-6.1 The Region of Convergence and Stability ........ 4 3 8
10-7 Frequency Response of an IIR Filter ............... 4 4 0
10-7.1 Frequency Response Using MATLAB ......... 4 4 1
10-7.2 Three-Dimensional Plot of a System Function ..... 4 4 3
10-8 Three Domains .......................... 4 4 4
10-9 The Inverse z-Transform and Applications ............ 4 4 6
10-9.1 Revisiting the Step Response of a
First-Order System .................... 4 4 6
10-9.2 A General Procedure for Inverse z-Transformation . . . 449
10-10 Steady-State Response and Stability ............... 4 5 1
10-11 Second-Order Filters ....................... 4 5 5
10-11.1 z-Transform of Second-Order Filters .......... 4 5 5
10-11.2 Structures for Second-Order IIR Systems ........ 4 5 6
10-11.3 Poles and Zeros ..................... 4 5 8
10-11.4 Impulse Response of a Second-Order IIR System . . . 460
10-11.4.1 Distinct Real Poles .............. 4 6 1
10-11.5 Complex Poles ...................... 4 6 2
10-12 Frequency Response of Second-Order IIR Filter ......... 4 6 6
10-12.1 Frequency Response via MATLAB ........... 4 6 7
10-12.2 3-dB Bandwidth ..................... 4 6 8
10-12.3 Three-Dimensional Plot of a System Function ..... 4 7 0
10-12.4 Pole-Zero Placing with the PeZ G U I.......... 4 7 2
10-13 Example of an IIR Lowpass Filter ................ 4 7 4
10-14 Summary and Links ........................ 4 7 6
10-15 Problems ............................. 4 7 7
A Complex Numbers 489
A-1 Introduction ............................ 490
A-2 Notation for Complex Numbers .................. 4 9 1
A-2.1 Rectangular Form ..................... 4 9 1
A-2.2 Polar Form ........................ 4 9 2
A-2.3 Conversion: Rectangular and Polar ............ 4 9 2
A-2.4 Difﬁculty in Second or Third Quadrant .......... 4 9 4
A-3 Euler’s Formula .......................... 4 9 5
A-3.1 Inverse Euler Formulas .................. 4 9 6
A-4 Algebraic Rules for Complex Numbers ............. 4 9 6
A-4.1 Complex Number Exercises ............... 4 9 8
A-5 Geometric Views of Complex Operations ............ 5 0 0
12 CONTENTS
A-5.1 Geometric View of Addition ............... 5 0 0
A-5.2 Geometric View of Subtraction .............. 5 0 1
A-5.3 Geometric View of Multiplication ............ 5 0 2
A-5.4 Geometric View of Division ............... 5 0 2
A-5.5 Geometric View of the Inverse, z−1............ 5 0 3
A-5.6 Geometric View of the Conjugate, z∗........... 5 0 3
A-6 Powers and Roots ......................... 5 0 4
A-6.1 Roots of Unity ....................... 5 0 5
A-6.1.1 Procedure for Finding Multiple Roots ..... 5 0 6
A-7 Summary and Links ........................ 5 0 8
A-8 Problems ............................. 5 0 8
B Programming in MATLAB 511
B-1 MATLAB Help .......................... 512
B-2 Matrix Operations and Variables ................. 5 1 2
B-2.1 The Colon Operator .................... 5 1 3
B-2.2 Matrix and Array Operations ............... 5 1 4
B-2.2.1 A Review of Matrix Multiplication ...... 5 1 4
B-2.2.2 Pointwise Array Operations .......... 5 1 5
B-3 Plots and Graphics ......................... 5 1 6
B-3.1 Figure Windows ...................... 5 1 6
B-3.2 Multiple Plots ....................... 5 1 7
B-3.3 Printing and Saving Graphics ............... 5 1 7
B-4 Programming Constructs ..................... 5 1 7
B-4.1 MATLAB Built-In Functions ............... 5 1 8
B-4.2 Program Flow ....................... 5 1 8
B-5 MATLAB Scripts ......................... 5 1 8
B-6 Writing a MATLAB Function ................... 5 1 9
B-6.1 Creating a Clip Function ................. 5 1 9
B-6.2 Debugging a MATLAB M-ﬁle .............. 5 2 1
B-7 Programming Tips ........................ 5 2 2
B-7.1 Avoiding Loops ...................... 5 2 2
B-7.2 Repeating Rows or Columns ............... 5 2 3
B-7.3 Vectorizing Logical Operations .............. 5 2 4
B-7.4 Creating an Impulse .................... 5 2 5
B-7.5 The Find Function ..................... 5 2 5
B-7.6 Seek to Vectorize ..................... 5 2 6
B-7.7 Programming Style .................... 5 2 6
CONTENTS 13
C Fourier Series 527
C-1 Fourier Series Derivation ..................... 528
C-1.1 Fourier Integral Derivation ................ 5 2 8
C-2 Examples of Fourier Analysis ................... 5 3 1
C-2.1 The Pulse Wave ...................... 5 3 4
C-2.1.1 Spectrum of a Pulse Wave ........... 5 3 6
C-2.1.2 Finite Synthesis of a Pulse Wave ....... 5 3 7
C-2.2 Triangular Wave ...................... 5 3 8
C-2.2.1 Spectrum of a Triangular Wave ........ 5 4 0
C-2.2.2 Finite Synthesis of a Triangular Wave ..... 5 4 0
C-2.3 Half-Wave Rectiﬁed Sine ................. 5 4 1
C-2.3.1 Finite Synthesis of a Half-Wave
Rectiﬁed Sine ................. 5 4 3
C-3 Operations on Fourier Series ................... 5 4 4
C-3.1 Scaling or Adding a Constant ............... 5 4 4
C-3.2 Adding Signals ...................... 5 4 5
C-3.3 Time-Scaling Property .................. 5 4 6
C-3.4 Time-Shifting Property .................. 5 4 7
C-3.5 Differentiation Property .................. 5 4 8
C-3.6 Frequency-Shifting Property and Multiplying
by a Sinusoid ....................... 5 4 9
C-4 Average Power, Convergence, and Optimality .......... 5 5 1
C-4.1 Derivation of Parseval’s Theorem ............. 5 5 4
C-4.2 Convergence of Fourier Synthesis ............ 5 5 4
C-4.3 Minimum Mean-Square Approximation ......... 5 5 6
C-5 The Spectrum in Pulsed-Doppler Radar Waveform Design .... 5 5 8
C-5.1 Measuring Range ..................... 5 5 8
C-5.2 Measuring Velocity from Doppler Shift ......... 5 5 9
C-5.3 Pulsed-Doppler Radar Waveform ............. 5 6 1
C-5.4 Measuring the Doppler Shift ............... 5 6 2
C-6 Problems ............................. 5 6 3
D Laboratory Projects 571
Index 574
This page intentionally left blank 
Preface
This book, entitled simply DSP First, is the second edition of the text DSP First: A
Multimedia Approach (1998) which was packaged with a CD-ROM that provided many
resources to extend the boundaries of a traditional textbook. In 2003, a second book
entitled Signal Processing First was produced with a broader set of topics that included
four new chapters on continuous-time signal processing and the Fourier transform, as wellas updated versions of the ﬁrst eight chapters of DSP First. New material was produced
for the CD-ROM bundled with the 2003 textbook, and all the supporting resources havenow moved to a website for easier access.
These three books and the Companion Website are the result of more than 20 years
of work grounded on the premise that digital signal processing (DSP) is an ideal startingpoint for the study of both electrical engineering and computer engineering. In the summerof 1993, two of us (JHMc and RWS) began to develop a one-quarter course that was tobecome the required introductory course for Georgia Tech computer engineering (CmpE)students. We argued that the subject of digital signal processing had everything wewanted in a ﬁrst course for computer engineers: it introduced the students to the useof mathematics as a language for thinking about and solving engineering problems; itlaid useful groundwork for subsequent courses; it made a strong connection to digitalcomputation as a means for implementing systems; and it provided the tools to discussinteresting applications that would motivate beginning engineers to do the hard work ofconnecting mathematics and computation to problem solving. Nothing has happened in
15
16 PREFACE
the past 22 years to change our minds on this point. Indeed, our teaching experience
with more than 6,000 students at Georgia Tech has only strengthened our conviction thatdigital signal processing, distilled to its essence, is an ideal introductory subject for both
electrical and computer engineering students.
1In fact, we have become ﬁrmly convinced
that a course on DSP at the level of this text should be required of every engineering andcomputer science student.
From the beginning, we believed that “hands-on” experience with real signals was
crucial, so we expended considerable effort on developing additional material for labora-tory exercises and projects based on MATLAB. In the laboratory assignments, studentscan experience the effects of signal processing operations that they have implemented onsound and image signals. For example, they can synthesize music from sinusoids, but theycan also see that those same sinusoids are the basis for the wireless systems that they useroutinely to access the Internet. These experiences, available on the Companion Website,will augment and reinforce the mathematical concepts that form the basis of DSP.
In addition to the 25 detailed lab assignments, the Companion Website includes many
resources that extend the printed textbook with material such as demonstrations and ani-mations used in classes, and hundreds of solved homework problems. The impetus for hav-ing this website came from MarkYoder who, in 1995, while on sabbatical leave at Georgia
Tech from Rose-Hulman, had the idea to put all of this material into a form that other teach-
ers (and students) could access easily. Interactive MATLAB demonstrations have beencreated for demonstrating speciﬁc topics such as convolution and frequency response, andmost of these are now used as the basis for some of the laboratory exercises. As teachers,all this material has changed the way we present ideas, because it expands the ways to visu-alize a concept “beyond the equations.” Over the years, the collection of resources on ourwebsite has continued to grow. In the future, we will explore new ideas for presenting theconcepts of DSP, and hope to move beyond the printed page to an e-Text version that wouldtruly integrate the narrative of the book with the visualizations of the companion website.
The distinguishing feature of this text (and its progenitors) is that it presents signal
processing at a level consistent with an introductory ECE course, i.e., the sophomorelevel (second year) in a typical U.S. university. The list of topics in the book is notsurprising given its emphasis on discrete-time signal processing, but since we want acourse that is broadly accessible to sophomores, we feel that we must combine signalprocessing concepts with some introductory ideas. Part of the reason for this is that inmany electrical engineering curriculums, signals and systems and DSP typically havebeen treated as junior- and senior-level courses, for which a traditional background oflinear circuits and linear systems is assumed. Our approach, on the other hand, makesthe subject much more accessible to students in other majors such as computer science
1In our development of these ideas, two books by Professor Ken Steiglitz of Princeton University had a
major impact on our thinking: An Introduction to Discrete Systems, John Wiley & Sons, 1972, and A Digital
Signal Processing Primer: With Applications to Computer Music, Addison-Wesley Publishing Company,
1996. Steiglitz’s 1972 book was well ahead of its time, since DSP had few practical applications, and evensimple simulations on then-available batch processing computers required signiﬁcant programming effort.However, by 1993 when we began our work, easy-to-use software environments such as MATLAB werewidely available for implementing DSP computations on powerful personal computers.
PREFACE 17
and other engineering ﬁelds. This point is increasingly important because non-specialists
need to use DSP techniques routinely in many areas of science and technology.
Content of the New Edition. This new edition has an organization similar to the ﬁrst
edition of DSP First. A look at the table of contents shows that the book begins very
simply (Chapter 2) with a detailed discussion of continuous-time sinusoidal signals and
their representation by complex exponentials. This is a topic traditionally introduced ina linear circuits course, but including it here makes it immediately accessible for the restof this book, especially for students who come from other backgrounds. If students havealready studied linear circuits, this chapter can be skipped, or rapidly covered. We thenproceed to introduce the spectrum concept (Chapter 3) by considering sums of sinusoidalsignals, culminating with a brief introduction to Fourier series. Although Chapter 3 ofthe ﬁrst edition covered the same basic ideas, this chapter has some new material.
2
Next we make the transition to discrete-time signals by considering sampled
sinusoidal signals (Chapter 4). We have found that it is not necessary to invoke thecontinuous-time Fourier transform to make the important issues in sampling clear. Allthat is needed is the simple trigonometric identity cos (θ+2π)=cos(θ). In fact, in
Chapters 2–4 (with the exception of Fourier Series), we have only needed to rely on thesimple mathematics of sine and cosine functions. The basic linear system concepts arethen introduced with running average systems and other simple FIR ﬁlters (Chapter 5).Impulse sequences are introduced which leads to the impulse response characterizing aﬁlter. Convolution is treated as a numerical operation in the ﬁrst pass at this idea. Thekey concept of frequency response is derived and interpreted for FIR ﬁlters (Chapter 6).Sinusoids are the primary signals of interest, and we emphasize the magnitude and phasechange experienced by a sinusoid when ﬁltered by a linear time-invariant system.
At this point we depart signiﬁcantly from the ﬁrst edition by introducing (Chapter 7)
the concept of discrete-time Fourier transform (DTFT), which arises naturally from thefrequency response of a discrete-time system. The concept of the inverse DTFT completesthe description of an invertible transform and also enables us to describe ideal ﬁlters. Itis then natural to move from the DTFT to the discrete Fourier transform (DFT), whichis simply a sampled version of the DTFT and thus computable through fast algorithmsthat are readily available (Chapter 8). Chapters 7 and 8 are completely new. They area response to frequent requests from teachers who want to expose their students to thepowerful concept of the Fourier transform, and we have found that sophomores are fullycapable of understanding these concepts and putting them to use. These two chapters bringmany of the ideas of practical spectrum analysis into focus with the goal of providing theknowledge to successfully employ the powerful spectrum analysis tools readily availablein software environments such as MATLAB.
Finally, the last two chapters return to the ﬂow of the ﬁrst edition. We introduce
z-transforms (Chapter 9) and IIR systems (Chapter 10). At this stage, a student who
has faithfully read the text, worked homework problems, and done the laboratoryassignments will be rewarded with the ability to understand applications involving the
2Furthermore, for instructors who prefer to dive deeper into Fourier analysis of periodic signals,Appendix
C on Fourier series is essentially another entire chapter on that topic.
18 PREFACE
sampling theorem, discrete-time ﬁltering, and spectrum analysis. Furthermore, they are
well prepared to move on to courses in linear analog circuits, continuous-time signals andsystems, and control systems. All of these courses can build on the foundation establishedthrough the study of this text.
Summary of What’s New in This Edition
•New material on the Discrete-Time Fourier Transform (DTFT) has been developed
and is presented in Chapter 7. The presentation makes an easy transition from thefrequency response concept to begin the study of the general idea of a Fouriertransform.
•New material on ideal ﬁlters and digital ﬁlter design is presented in Chapter 7 as avery useful application of the DTFT. The window method for FIR ﬁlter design ispresented in detail.
•New material on the Discrete Fourier Transform (DFT) has been developed and ispresented in Chapter 8. The presentation adopts the point of view that the DFT isa sampled version of the DTFT, and also develops the relationship of the DFT tothe discrete Fourier series (DFS).
•New material on spectrum analysis and the spectrogram has been developed forthe last sections of Chapter 8. This provides a solid foundation for understandingtime-frequency analysis of signals as is commonly done with the FFT algorithm,as well as the role of windowing in frequency resolution.
•Chapters 7 and 8 are derived from Chapter 9 in the ﬁrst edition and Chapter 13inSignal Processing First. The new chapters are a signiﬁcant rewrite to make this
material accessible at the introductory level. The beneﬁt is that students can learnthe ideas of practical spectrum analysis which can then be reinforced with a labexperience where actual signals are processed with the tools available in MATLAB.
•The presentation of the spectrum in Chapter 3 has been expanded to include a formal
discussion of properties of the spectrum (e.g., time-delay, frequency shifting). Thissets the stage for later discussions of the DTFT and DFT.
•The material on Fourier Series which was part of Chapter 3 has been expanded, but
most of it is now placed in Appendix C. Chapter 3 contains a sufﬁcient descriptionof the Fourier series to present the spectrum of one periodic signal, the full waverectiﬁed sine. Appendix C provides an in-depth presentation for instructors whochoose to emphasize the topic. Details of other periodic signals (square wave,triangular wave, and half-wave rectiﬁed sine) are given along with a derivationof Parseval’s theorem and a heuristic discussion of convergence. Properties of theFourier Series are also developed.
•Extensive changes have been made to the end-of-chapter problems. There are atotal of 241 problems in the book: 83 are new, 86 are different from the ﬁrst editionby virtue of changing the details, and 72 are the same as in the ﬁrst edition.
PREFACE 19
•The Companion Website contains new material for labs, MATLAB visualizations,
and solved homework problems. The Companion Website may be found at
www.pearsonglobaleditions.com/McClellan.
At Georgia Tech, our sophomore-level, 3 credit course covers most of the content of
Chapters 2–10 in a format involving two one-hour lectures, one 1.5 hour recitation, andone 1.5 hour laboratory period per week. As mentioned previously, we place considerableemphasis on the lab because we believe that it is essential for motivating our studentsto learn the mathematics of signal processing, and because it introduces our students tothe use of powerful software in engineering analysis and design. At Rose-Hulman, weuseDSP First in a freshman-level, 10-week course that covers Chapters 1–6, 9, and 10.
The Rose format is 3 one-hour lectures per week and one three-hour lab. The students
use MATLAB throughout the course. The entire content of the present text was used byRWS for a 10-week, four credit course at Stanford University. Since this course followedquarter-long courses in continuous-time signals and systems and linear circuits, it waspossible to skip Chapters 2 and 3 and move immediately into a focus on discrete-timesignals and systems using the remaining chapters. One credit was devoted to a weeklylab assignment which was done individually without a regularly scheduled laboratoryperiod.
These examples from our own teaching experience show that the text and its associated
supporting materials can be used in many different ways depending on instructorpreference and number of course hours. As can be seen from the previous discussion,the second edition of DSP First is not a conventional signals and systems book. One
difference is the inclusion of a signiﬁcant amount of material on sinusoids and complexphasor representations. In a traditional electrical engineering curriculum, these basicnotions are covered under the umbrella of linear circuits taken before studying signalsand systems. Indeed, our choice of title for this book and the ﬁrst edition is designedto emphasize this departure from tradition. An important point is that teaching signalprocessing ﬁrst also opens up new approaches to teaching linear circuits, since there ismuch to build upon that will allow redirected emphasis in the circuits course.
A second difference from conventional signals and systems texts is that DSP First
emphasizes topics that rely on “frequency domain” concepts. This means that, inan electrical engineering curriculum, topics like Laplace transforms, state space, andfeedback control, would have to be covered in later courses such as linear circuits or anupper-level course on control systems. Although our text has clearly been shaped by aspeciﬁc point of view, this does not mean that it and the associated website can be used inonly one way. Indeed, as our own experience shows, by appropriate selection of topics,our text can be used for either a one-quarter or one-semester signals and systems coursethat emphasizes communications and signal processing applications from the frequencydomain point of view. For most electrical engineering curricula, the control-orientedtopics would be covered in another course.
In other disciplines such as computer science and computer engineering, DSP First
emphasizes those topics that are most relevant to computing for signal analysis. This is
20 PREFACE
also likely to be true in other engineering ﬁelds where data acquisition and frequency
domain analysis play an important role in modern engineering analysis and design.
This text and its Companion Website represents an untold amount of work by the
three authors, numerous colleagues, and many students. Fortunately, we have been ableto motivate a number of extremely talented students to contribute MATLAB demos to thisproject. There are so many that to name them all would be impractical. We simply thankthem all for their valuable contributions to our project. Greg Krudysz who authoredseveral of the demos has now taken over the primary role of developing new demosand visualizations with GUIs and updating the existing ones. Since the beginning in1993, many professors have participated in the sophomore course ECE-2025 (and nowECE-2026) at Georgia Tech as lecturers and recitation instructors. Once again, namingall the recitation instructors would be impractical, but their comments and feedback havegiven life to the course as it evolved during the past 12 years. For example, PamelaBhatti developed a laboratory on simulating the ﬁlter bank of a Cochlear Implant hearingsystem. Recently, the lecturing and administration of the course has been shared byRuss Mersereau, Fred Juang, Chin Lee, Elliot Moore, Mark Clements, Chris Rozell,G. K. Chang, David Taylor, David Anderson, John Barry, Doug Williams, and AaronLanterman. We are indebted to them for their many suggestions that have made a positiveimpact on this second edition, especially the new material on the DFT and DTFT. Weare also indebted to Wayne Padgett and Bruce Black, who have taught ECE-380 atRose-Hulman and have contributed many good ideas, and we appreciate the work ofEd Doering who created a whole new set of labs for ECE-180, the new freshman-levelDSP First. These labs start with traditional audio processing and end with video objecttracking. A new ﬁrst for freshman.
We also want to acknowledge the contributions of Tom Robbins (formerly at Pearson
Prentice-Hall) who was an early supporter of our efforts to bring DSP to the fore inECE education. Tom bought into our concept of DSP First from the beginning, and he
encouraged us during the initial project, as well as the 2003 book. More recently, AndrewGilﬁllan and Julie Bai have been the editors who helped make this second edition a reality.
Finally, we want to recognize the understanding and support of our wives (Carolyn
McClellan, Dorothy Schafer, and Sarah Yoder). Carolyn’s photo of the cat Kilby appearsin Chapter 1. They have patiently supported us as this multi-year project continued toconsume energy and time that might have been spent with them.
JHMc
RWS
MAY
Pearson would like to thank and acknowledge Ankita Pramanik, Indian Institute of
Engineering Science and Technology, Shibpur, and Sanjay H.S., M.S. Ramaiah Instituteof Technology, for contributing to the Global Edition, and Chih-Wei Liu, National Chiao
Tung University, Siddhartha Bhattacharya, RCC Institute of Information Technology, and
NeerajVarshney, Indian Institute of Technology Kanpur, for reviewing the Global Edition.
CHAPTER
1
Introduction
This is a book about signals and systems. In this age of multimedia gaming computers,
audio and video entertainment systems, and smartphones, it is almost certain that you,
the reader of this text, have formed some impression of the meaning of the terms signal
andsystem, and you probably use the terms often in daily conversation.
It is likely that your usage and understanding of the terms are correct within some
rather broad deﬁnitions. For example, you may think of a signal as “something” thatcarries information. Usually, that something is a pattern of variations of a physical quantitythat can be manipulated, stored, or transmitted by physical processes. Examples includespeech signals, audio signals, video or image signals, biomedical signals, radar signals,and seismic signals, to name just a few. An important point is that signals can take manyequivalent forms or representations. For example, a speech signal is produced as an
acoustic signal, but it can be converted to an electrical signal by a microphone, and thento a string of numbers as in digital audio recording.
The term system may be somewhat more ambiguous and subject to interpretation.
For example, we often use “system” to refer to a large organization that administersor implements some process, such as the “Social Security system” or the “airlinetransportation system.” However, we are interested in a much narrower deﬁnition that isvery closely linked to signals. More speciﬁcally, a system, for our purposes, is somethingthat can manipulate, change, record, or transmit signals. For example, a DVD recording
21
22 CHAPTER 1 INTRODUCTION
stores or represents a movie or a music signal as a sequence of numbers. A DVD player is
a system for converting the numbers stored on the disc (i.e., the numerical representationof the signal) to a video and/or acoustic signal. In general, systems operate on signals to
produce new signals or new signal representations.
Our goal in this text is to develop a framework wherein it is possible to make
precise statements about both signals and systems. Speciﬁcally, we want to show thatmathematics is an appropriate language for describing and understanding signals andsystems. We also want to show that the representation of signals and systems bymathematical equations allows us to understand how signals and systems interact andhow we can design and implement systems that achieve a prescribed purpose.
1-1 Mathematical Representation of Signals
Signals are patterns of variations that represent or encode information. Many signalsare naturally thought of as a pattern of variations in time. A familiar example is a speechsignal, which initially arises as a pattern of changing air pressure in the vocal tract.
This pattern, of course, evolves with time, creating what we often call a time waveform.
Figure 1-1 shows a plot of a recorded speech waveform. In this plot, the vertical axisrepresents microphone voltage (proportional to air pressure), and the horizontal axisrepresents time. Notice that there are four plots in the ﬁgure corresponding to fourcontiguous time segments of the speech waveform. The second plot is a continuation of theﬁrst, and so on, with each graph corresponding to a time interval of 50 milliseconds (ms).
0 5 10 15 20 25 30 35 40 45 50150100 50  0Starting Time of Each Strip (ms)
Offset Time t(ms)Figure 1-1 Strip plot of a speech signal
where each row is a continuation of the row
above. This signal s(t)can be represented as
a function of a single (time) variable. Theshaded region is shown in more detail inFig. 1-2.
1-1 MATHEMATICAL REPRESENTATION OF SIGNALS 23
The speech signal in Fig. 1-1 is an example of a one-dimensional continuous-
time signal . Such signals can be represented mathematically as a function of a single
independent variable, which is normally called time and denoted t. Although in this
particular case we cannot write a simple equation that describes the graph of Fig. 1-1 in
terms of familiar mathematical functions, we can nevertheless associate a function s(t)
with the graph. Indeed, the graph itself can be taken as a deﬁnition of the function thatassigns a number s(t)to each instant of time (each value of t).
Many, if not most, signals originate as continuous-time signals. However, for reasons
that will become increasingly obvious as we progress through this text, it is often desirableto obtain a discrete-time representation of a signal. This can be done by sampling a
continuous-time signal at isolated, equally spaced points in time. The result is a sequenceof numbers that can be represented as a function of an index variable that takes on onlyinteger values. This can be represented mathematically as s[n]=s(nT
s), where nis an
integer (i.e., {...,−2 ,−1,0,1,2,...}), and Tsis the sampling period . Note that our
convention is to use parentheses ()to enclose the independent variable of a continuous-
variable function such as s(t), and square brackets []to enclose the independent variable
of a discrete-variable function, e.g., the sequence s[n]. Sampling is, of course, exactly
what we do when we plot values of a function on graph paper or on a computer screen.
We cannot evaluate the function at every possible value of a continuous variable, but
only at a set of discrete points. Intuitively, we know that the closer the spacing in timeof the points, the more the sequence retains the shape of the original continuous-variablefunction. Figure 1-2 shows an example of a short segment of a discrete-time signal thatwas derived by sampling the speech waveform of Fig. 1-1 with a sampling period ofT
s=1/8 ms. In this case, the dots show the sample values for the sequence s[n].
While many signals can be thought of as evolving patterns in time, many other signals
are not time-varying patterns. For example, an image formed by focusing light through alens is a spatial pattern, and thus is appropriately represented mathematically as a functionof two spatial variables. Such a signal would be considered, in general, as a function oftwo independent variables [i.e., a picture might be denoted p(x,y) ]. A photograph is
another example, such as the gray-scale image shown in Fig. 1-3. In this case, the valuep(x
0,y0)represents the shade of gray at position (x0,y0)in the image.
Images such as that in Fig. 1-3 are generally considered to be two-dimensional
continuous-variable signals, since we normally consider space to be a continuum.
0 20 40 60 80 100 120 140 160 180 20001Sample sofaSpeech Waveform:sŒn/c141Ds.nT s/
Sample Index .n//NUL1Figure 1-2 Discrete-time signal represented as
a one-dimensional sequence which is a
function of a discrete variable n. Signal
samples are taken from the shaded region ofFig. 1-1. The continuous-time speech signals(t)is shown in gray.
24 CHAPTER 1 INTRODUCTION
Figure 1-3 Example of a signal that can be
represented by a function of two spatial variables.
However, sampling can likewise be used to obtain a discrete-variable two-dimensional
signal from a continuous-variable two-dimensional signal. In a digital camera, thissampling is done by recording light values which have been focused on a sensor arraycomposed of millions of points, or mega-pixels. In a color camera, there would be threeseparate arrays for RGB: red, green, and blue. A two-dimensional gray-scale image likeFig. 1-3 would be represented by a two-dimensional discrete-variable sequence or anarray of numbers, and would be denoted p[m, n]=p(m/Delta1
x,n /Delta1 y), where both mandn
would take on only integer values, and /Delta1xand/Delta1yare the horizontal and vertical sampling
periods, respectively.
Two-dimensional functions are appropriate mathematical representations of still
images that do not change with time; on the other hand, videos are time-varying imagesthat would require a third independent variable for time, so a video signal would bedenoted v(x,y,t) . In analog television, time is discrete (30 frames/s), each horizontal
line(x)is continuous, but there are a ﬁnite number of horizontal lines, so yis discrete.
In present day digital video, all three variables of the video signal v(x,y,t) are discrete
since the signal is a sequence of discrete images.
Our purpose in this section has been to introduce the idea that signals can be
represented by mathematical functions. Although we will soon see that many familiarfunctions are quite valuable in the study of signals and systems, we have not evenattempted to demonstrate that fact. Our sole concern is to make the connection betweenfunctions and signals, and, at this point, functions simply serve as abstract symbols forsignals. Thus, for example, now we can refer to “the speech signal s(t)” or “the sampled
image p[m, n].” Although this may not seem highly signiﬁcant, we will see in the next
1-2 MATHEMATICAL REPRESENTATION OF SYSTEMS 25
section that it is indeed a very important step toward our goal of using mathematics to
describe signals and systems in a systematic way.
1-2 Mathematical Representation of Systems
As we have already suggested, a system is something that transforms signals into new
signals or different signal representations. This is a rather vague deﬁnition, but it is usefulas a starting point. To be more speciﬁc, we say that a one-dimensional continuous-timesystem takes an input signal x(t) and produces a corresponding output signal y(t). This
can be represented mathematically by
y(t)=T{x(t)} (1.1)
which means that the input signal (waveform, image, etc.) is operated on by the system(symbolized by the operator T) to produce the output y(t).While this sounds very abstract
at ﬁrst, a simple example shows that this need not be mysterious. Consider a system suchthat the output signal is the square of the input signal. The mathematical description ofthis system is simply
y(t)=[x(t)]
2(1.2)
which says that at each time instant the value of the output is equal to the square of theinput signal value at that same time. Such a system would logically be termed a “squarersystem.” Figure 1-4 shows the output signal of the squarer for the input of Fig. 1-1. Aswould be expected from the properties of the squaring operation, we see that the outputsignal is always nonnegative and the larger signal values are emphasized relative to thesmaller signal values.
The squarer system deﬁned by (1.2) is a simple example of a continuous-time system
(i.e., a system whose input and output are continuous-time signals). Can we build aphysical system that acts like the squarer system? The answer is yes; the system of (1.2)can be approximated through appropriate connections of electronic circuits. On the otherhand, if the input and output of the system are both discrete-time signals (sequences ofnumbers) related by
y[n]=(x [n])
2(1.3)
then the system would be a discrete-time system. The implementation of the discrete-
time squarer system would be trivial given a digital computer; one simply multiplies eachdiscrete signal value by itself.
In thinking and writing about systems, it is often useful to have a visual representation
of the system. For this purpose, engineers use block diagrams to represent operations
performed in an implementation of a system and to show the interrelations among themany signals that may exist in an implementation of a complex system. An example ofthe general form of a block diagram is shown in Fig. 1-5. What this diagram shows issimply that the signal y(t) is obtained from the signal x(t) by the operation T{}.
26 CHAPTER 1 INTRODUCTION
0 5 10 15 20 25 30 35 40 45 50150100 50  0Starting Time of Each Strip (ms)
Offset Time t(ms)Figure 1-4 Output of a squarer system for
the speech signal input of Fig. 1-1. The
squarer system is deﬁned by the equationy(t)=[x(t)]
2.
A speciﬁc example of a system was suggested earlier when we discussed the sampling
relationship between continuous-time signals and discrete-time signals. A sampler is
deﬁned as a system whose input is a continuous-time signal x(t) and whose output is the
corresponding sequence of samples, deﬁned by the equation
x[n]=x(nT s) (1.4)
which simply states that the sampler “takes an instantaneous snapshot” of the continuous-
time input signal once every Tss.1Thus, the operation of sampling ﬁts our deﬁnition of
a system, and it can be represented by the block diagram in Fig. 1-6. Often we will referto the sampler system as an “ideal continuous-to-discrete converter” or ideal C-to-D
converter. In this case, as in the case of the squarer, the name that we give to the systemis really just a description of what the system does.
Tf/SOHgx.t/ y.t/DTfx.t/ g
Figure 1-5 Block diagram representation
of a continuous-time system.Ideal
C-to-D
Converterx.t/ xŒn/c141 Dx.nT s/
Ts
Figure 1-6 Block diagram representation of a
sampler.
1The units of time in seconds are abbreviated as s.
1-3 SYSTEMS AS BUILDING BLOCKS 27
1-3 Systems as Building Blocks
Block diagrams are useful for representing complex systems in terms of simpler systems,
which are more easily understood. For example, Fig. 1-7 shows a block diagramrepresentation of the process of recording and playback of music using MP3 compression.
This block diagram breaks the operation down into four subsystems, each of which could
be broken down further into smaller subsystems. The ﬁrst operation is A-to-D (analog-to-digital) conversion to acquire the music waveform in digital form. The A-to-D systemis a physical approximation to the ideal C-to-D converter deﬁned in (1.4). An A-to-Dconverter produces ﬁnite-precision numbers as samples of the input signal (quantized toa limited number of bits), while the ideal C-to-D converter produces samples with inﬁniteprecision. For the high-accuracy A-to-D converters used in precision audio systems, thedifference between an A-to-D converter and our idealized C-to-D converter is slight, butthe distinction is very important—only ﬁnite-precision quantized sample values can bestored in digital memory of ﬁnite size.
Figure 1-7 shows that the output of the A-to-D converter is the input to a system that
compresses the numbers x[n]into a much smaller bit stream using the MP3 method. This
is a complex process, but for our purposes it is sufﬁcient to show it as a single operation.
The output is a compressed digital representation that may be efﬁciently stored as data
on a server or transmitted to a user. Once another user has the compressed data ﬁle,the MP3 compression must be reversed in order to listen to the audio signal. SinceMP3 is a “lossy” compression scheme, the signal synthesized by the MP3 decoder isonly an approximation to the original. The value of MP3 is that this approximation isaudibly indistinguishable from the original because the MP3 encoding method exploitsaspects of human hearing that render certain coding errors inaudible. Once the musicwaveform is reconstituted in digital form as ˆx[n], the last block does the conversion of the
signal from discrete-time form to continuous-time (acoustic) form using a system called aD-to-A (digital-to-analog) converter. This system takes ﬁnite-precision binary numbersin sequence and ﬁlls in a continuous-time function between the samples. The resultingcontinuous-time electrical signal could then be fed to other systems, such as ampliﬁers,loudspeakers, and headphones, for conversion to sound. In Chapter 4, we will discuss theideal D-to-C converter, which is an idealization of the physical device called an D-to-Aconverter.
Systems like MP3 audio are all around us. For example, digital cameras use JPEG
encoding to reduce digital image ﬁle sizes prior to storage, and JPEG decoding to viewpictures. Most of the time we do not need to think about how such systems work, but thisexample illustrates the value of thinking about a complex system in a hierarchical form.
A-to-D
ConverterMP3
Audio
EncoderMP3
Audio
DecoderD-to-A
ConverterCompressed
Audio File x.t/ xŒn/c141 Ox.t/ OxŒn/c141
Figure 1-7 Simpliﬁed block diagram for MP3 audio compression and playback system.
28 CHAPTER 1 INTRODUCTION
In this way, we can ﬁrst understand the individual parts, then the relationship among the
parts, and ﬁnally the whole system. By looking at the MP3 audio system in this manner,we can discuss two things. First of all, the conversion from continuous-time to discrete-time and back to continuous-time can be considered separately from the other parts ofthe system. The effect of connecting these blocks to the system is then relatively easyto understand because they provide the input and output interface to real audio signals.Secondly, details of some parts can be hidden and left to experts who, for example, candevelop more detailed breakdowns of the MP3 encoder and decoder subsystems. In fact,those systems involve many signal processing operations, and it is possible to specifytheir operations by connecting several canonical DSP blocks that we will study in thistext.
1-4 The Next Step
The MP3 audio coding system is a good example of a relatively complicated discrete-
time system. Buried inside the blocks of Fig. 1-7 are many discrete-time subsystemsand signals. While we do not promise to explain all the details of MP3 coders or anyother complex system, we do hope to establish the foundations for the understanding ofdiscrete- and continuous-time signals and systems so that this knowledge can be appliedto understanding components of more complicated systems. In Chapter 2, we will startat a basic mathematical level and show how the well-known sine and cosine functionsfrom trigonometry play a fundamental role in signal and system theory. Next, we showhow complex numbers can simplify the algebra of trigonometric functions. Subsequentchapters introduce the concept of the frequency spectrum of a signal and the concept ofﬁltering with a linear time-invariant system. By the end of the book, if you have diligentlyworked the problems, experienced the demonstrations, and done the laboratory exerciseson the Companion Website (which are marked with icons), you will be rewarded witha solid understanding of many of the key concepts underlying much of modern signalprocessing technology.
NOTE
Companion Website
has many labs,demonstrations andhomework problemswith solutions
CHAPTER
2
Sinusoids
We begin our discussion by introducing a general class of signals that are commonly
called cosine signals or, equivalently, sine signals , which are also commonly referred to
as cosine or sine waves , particularly when speaking about acoustic or electrical signals.
Collectively, such signals are called sinusoidal signals or, more concisely, sinusoids.
Sinusoidal signals are the basic building blocks in the theory of signals and systems, and
it is important to become familiar with their properties. The most general mathematicalformula for a sinusoid is
x(t)=Acos(ω
0t+ϕ) (2.1)
where cos(·) denotes the cosine function that is familiar from the study of trigonometry.
When deﬁning a continuous-time signal, we typically use a function whose independent
variable is t, a continuous real variable that represents time. From (2.1) it follows that
x(t) is a mathematical function in which the angle (or argument) of the cosine function
is, in turn, a function of the variable t. Since we normally think of time as increasing
uniformly, the angle of the cosine function likewise increases in proportion to time. Theparameters A,ω
0, andϕare ﬁxed numbers for a particular cosine signal. Speciﬁcally,
Ais called the amplitude, ω0theradian frequency, and ϕthephase of the cosine
signal.
29
30 CHAPTER 2 SINUSOIDS
0 2 4 6 8 10 12 14 16 18 200510
Time t(ms)x.t/
5
10Figure 2-1 Sinusoidal signal generated from
the formula: x(t)=10 cos(2 π(440)t−0.4π).
Figure 2-1 shows a plot of the continuous-time sinusoid
x(t)=10 cos(2 π(440)t−0.4π)
where A=10,ω0=2π(440), andϕ=−0.4πin (2.1). Note that x(t)oscillates between
Aand−A, and repeats the same pattern of oscillations every 1/440 =0.00227 s
(approximately). This time interval is called the period of the sinusoid. We will show
later in this chapter that most features of the sinusoidal waveform are directly dependent
on the choice of the parameters A,ω0, andϕ.
2-1 Tuning-Fork Experiment
One of the reasons that cosine waves are so important is that many physical systemsgenerate signals that can be modeled (i.e., represented mathematically) as sine or cosinefunctions versus time. Among the most prominent of these are signals that are audible tohumans. The tones or notes produced by musical instruments are perceived as differentpitches. Although it is an oversimpliﬁcation to equate notes to sinusoids and pitchto frequency, the mathematics of sinusoids is an essential ﬁrst step to understandingcomplicated sound signals and their perception by humans.
To provide some motivation for our study of sinusoids, we will begin by considering
a very simple and familiar system for generating a sinusoidal signal. This systemis a tuning fork , an example of which is shown in Fig. 2-2. When struck sharply,
the tines of the tuning fork vibrate and emit a “pure” tone. This tone has a singlefrequency, which is usually stamped on the tuning fork. It is common to ﬁnd“A–440” tuning forks, because 440 hertz (Hz) is the frequency of A above middle Con a musical scale, and is often used as the reference note for tuning a piano andother musical instruments. If you can obtain a tuning fork, perform the followingexperiment which is shown in a movie on the Companion Website.
DEMO
Tuning Fork
Strike the tuning fork against your knee, and then hold it close to your ear.
You should hear a distinct “hum” at the frequency designated for the tuning
fork. The sound will persist for a rather long time if you have struck thetuning fork properly; however, it is easy to do this experiment incorrectly.If you hit the tuning fork sharply on a hard surface such as a table, you willhear a high pitched metallic “ting” sound. This is notthe characteristic sound
2-1 TUNING-FORK EXPERIMENT 31
Figure 2-2 Picture of a tuning fork for 440 Hz.
that you are seeking. If you hold the tuning fork close to your ear, you will
hear two tones: The higher-frequency “ting” will die away rapidly, and thenthe desired lower-frequency “hum” will be heard.
With a microphone and a computer equipped with an A-to-D converter, we can make
a digital recording of the signal produced by the tuning fork. The microphone convertsthe sound into an electrical signal, which in turn is converted to a sequence of numbersstored in the computer. Then these numbers can be plotted as a waveform in MATLAB.
A typical plot of a short section of the signal taken well after the initial strike of the
tuning fork is shown in Fig. 2-3(a) for an A–440 tuning fork. In this case, the A-to-Dconverter sampled the output of the microphone at a rate of 10,000 samples/s. The signal
0 0.5 1 1.5 2 2.5 300.50 5 10 15 20 2500.5
Time t(ms)
Time t(ms)0:5
0:5(a) A−440 T uning-Fork Signal
(b) Sample Values at 10,000 HzFigure 2-3 (a) Recording of an A–440
tuning-fork signal sampled at a sampling rate
of 10,000 samples/s. (b) Zoom in to the ﬁrst3 ms taken from the top plot (shaded region),showing the individual sample values(connected by a thin gray line).
32 CHAPTER 2 SINUSOIDS
samples for the initial 3 ms of the signal are shown on a ﬁner scale in Fig. 2-3(b). The
“continuous looking” plot in Fig. 2-3(a) was constructed by connecting the sample valuesby straight lines. It appears that the signal generated by the tuning fork is very much likethe cosine signal of Fig. 2-1. It oscillates between symmetric limits of amplitude and italso repeats periodically with a period of about 2.27 ms (0.00227 s). As we will see inSection 2-3.1, this period is proportional to the reciprocal of ω
0(i.e., 2 π/(2π(440))≈
0.00227).
This experiment shows that common physical systems produce signals whose
graphical representations look very much like cosine signals, as in the graphical plots ofthe mathematical functions deﬁned in (2.1). Later, in Section 2-7, we will add furthercredence to the sinusoidal model for the tuning-fork sound by showing that cosinefunctions arise as solutions to the differential equation that (through the laws of physics)describes the motion of the tuning fork’s tines. Before looking at the physics of the tuningfork, however, we should become more familiar with sinusoids and sinusoidal signals.
2-2 Review of Sine and Cosine Functions
Sinusoidal signals are deﬁned in terms of the familiar sine and cosine functions oftrigonometry. A brief review of the properties of these basic trigonometric functionsis useful for understanding the properties of sinusoidal signals.
The sine and cosine functions are often introduced and deﬁned through a triangle
diagram like Fig. 2-4. The trigonometric functions sine and cosine take an angle as theirargument. We often think of angles in degrees, but where sine and cosine functions areconcerned, angles must be dimensionless. Angles are therefore speciﬁed in radians. Ifthe angle θis in the ﬁrst quadrant (0 ≤θ<π / 2 rad), then the sine of θis the length y
of the side of the triangle opposite the angle θdivided by the length rof the hypotenuse
of the right triangle. Similarly, the cosine of θis the ratio of the length of the adjacent
sidexto the length of the hypotenuse.
Note that as θincreases from 0 to π/2, cosθdecreases from 1 to 0 and sin θincreases
from 0 to 1. When the angle is greater than π/2 radians, the algebraic signs of xandy
come into play, xbeing negative in the second and third quadrants and ybeing negative
in the third and fourth quadrants. This is most easily shown by plotting the values of sin θ
xy
r
θ y
r
x
r
Figure 2-4 Deﬁnition of sine and cosine
of an angle θwithin a right triangle.
2-2 REVIEW OF SINE AND COSINE FUNCTIONS 33
000.51000.51
1
10:5
0:5sin / cos /(a)
Angle (rads)
(b)Figure 2-5 (a) Sine function and (b) cosine
function plotted versus angle θ. Both functions
have a period of 2 π.
and cos θas a function of θ, as in Fig. 2-5. Several features of these plots1are worthy
of comment. The two functions have exactly the same shape. Indeed, the sine function is
just a cosine function that is shifted to the right by π/2 (i.e., sin θ=cos(θ−π/2)). Both
functions oscillate between +1 and −1, and they repeat the same pattern periodically
with period 2 π. Furthermore, the sine function is an odd function of its argument, and
the cosine is an even function. A summary of these and other properties is presented in
Table 2-1.
Table 2-2 shows that the sine and cosine functions are very closely related. This often
leads to opportunities for simpliﬁcation of expressions involving both sine and cosinefunctions. In calculus, we have the interesting property that the sine and cosine functionsare derivatives of each other:
dsinθ
dθ=cosθanddcosθ
dθ=− sinθ
Table 2-1 Basic properties of the sine and cosine functions.
Property Equation
Equivalence sinθ=cos(θ−π/2)or cos(θ) =sin(θ+π/2)
Periodicity cos(θ+2πk)=cosθ, when kis an integer
Evenness of cosine cos(−θ) =cosθ
Oddness of sine sin(−θ)=− sinθ
Zeros of sine sin(πk)=0, when kis an integer
Ones of cosine cos(2πk)=1, when kis an integer
Minus ones of cosine cos[2π(k+1
2)]=− 1, when kis an integer
1It is a good idea to memorize the form of these plots and be able to sketch them accurately.
34 CHAPTER 2 SINUSOIDS
Table 2-2 Some basic trigonometric identities.
Number Equation
1 sin2θ+cos2θ=1
2 cos 2θ=cos2θ−sin2θ
3 sin 2θ=2 sinθcosθ
4 sin(α±β)=sinαcosβ±cosαsinβ
5 cos(α ±β)=cosαcosβ∓sinαsinβ
In trigonometry, there are many identities that can be used in simplifying expressions
involving combinations of sinusoidal signals. Table 2-2 gives a brief list of trigonometric
identities that will be useful. Recall from your study of trigonometry that these identities
are not independent: e.g., identity #3 can be obtained from identity #4 by substitutingα=β=θ.Also, these identities can be combined to derive other identities. For example,
adding identity #5 with plus sign to identity #5 with minus sign leads to the identity
cosαcosβ=
1
2cos(α +β)+1
2cos(α −β)
A more extensive table of trigonometric identities may be found online, or in any bookNOTE
Exercise solutions
are available onCompanion Websiteof mathematical tables. However, once we introduce the complex phasor notation for
sinusoids, there will be little or no need for these identities.
EXERCISE 2.1 Use trigonometric identity #5 to derive an expression for cos 8θ in terms of cos 9θ ,
cos 7θ , and cos θ.
2-3 Sinusoidal Signals
The most general mathematical formula for a sinusoidal time signal is obtained by making
the argument (i.e., the angle) of the cosine function be a function of t. The following
equation gives two equivalent forms:
x(t)=Acos(ω 0t+ϕ)=Acos(2πf0t+ϕ) (2.2)
which are related by deﬁning ω0=2πf0. In either form, there are three independent
parameters. The names and interpretations of these parameters are as follows:
(a)Ais called the amplitude. The amplitude is a scaling factor that determines how
large the cosine signal will be. Since the function cos θoscillates between +1 and
−1, the signal x(t) in (2.2) oscillates between +Aand−A.
(b)ϕis called the phase. The units of phase must be radians, since the argument
of the cosine must be in radians. We generally prefer to use the cosine functionwhen deﬁning the phase. If we happen to have a formula containing sine, e.g.,x(t)=Asin(ω
0t+ϕ/prime), then we can rewrite x(t) in terms of cosine if we use the
equivalence property in Table 2-1. The result is:
x(t)=Asin(ω0t+ϕ/prime)=Acos(ω 0t+ϕ/prime−π/2)
2-3 SINUSOIDAL SIGNALS 35
so we deﬁne the phase to be ϕ=ϕ/prime−π/2 in (2.2). For simplicity and to prevent
confusion, we often avoid using the sine function.
(c)ω0is called the radian frequency. Since the argument of the cosine function must
be in radians, which is dimensionless, the quantity ω0tmust likewise be
dimensionless. Thus, ω0must have units of rad/s if thas units of seconds. Similarly,
f0=ω0/2πis called the cyclic frequency, and f0must have units of s−1, or hertz.
DEMO
SinusoidsEXAMPLE 2-1 Plotting Sinusoids
Figure 2-6 shows a plot of the signal
x(t)=20 cos(2 π(40)t−0.4π) (2.3)
In terms of our deﬁnitions, the signal parameters are A=20,ω0=2π(40)rad/s,
f0=40 Hz, and ϕ=−0.4πrad. The signal size depends on the amplitude parameter
A; its maximum and minimum values are +20 and −20, respectively. In Fig. 2-6 the
maxima occur at
t=...,−0 .02,0.005, 0.03,...
and the minima at
...,−0 .0325, −0.0075, 0.0175,...
The time interval between successive maxima in Fig. 2-6 is 0 .025 s, which is equal
to 1/f 0. To understand why the signal has these properties, we will need to do more
analysis.
2-3.1 Relation of Frequency to Period
The sinusoid plotted in Fig. 2-6 is a periodic signal. The period of the sinusoid, denoted
byT0, is the time duration of one cycle of the sinusoid. In general, the frequency of
the sinusoid determines its period, and the relationship can be found by applying the
deﬁnition of periodicity x(t+T0)=x(t) as follows:
Acos(ω 0(t+T0)+ϕ)=Acos(ω 0t+ϕ)
cos(ω 0t+ω0T0/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
=2π?+ϕ)=cos(ω 0t+ϕ)
0 0.01 0.02 0.03 0.0401020
Time t(s)x.t/
0:01 0:02 0:0310
20Figure 2-6 Sinusoidal signal with parameters
A=20,ω0=2π(40),f0=40 Hz, and
ϕ=−0.4πrad.
36 CHAPTER 2 SINUSOIDS
Since the cosine function has a period of 2 π, the smallest positive value for ω0T0is 2π,
which gives a simple relationship between T0and the frequency f0in hertz,
T0=2π
ω0=2π
2πf0=1
f0(2.4)
SinceT0is the duration of one period of the signal, f0=1/T 0is the number of periods
(cycles) per second. Therefore, cycles per second is an appropriate unit for f0, and it
was in general use until the 1960s when the unit hertz (abbreviated Hz) was adopted
worldwide.2Forω0, the radian frequency, the units are rad/s. The units of hertz, or cycles
per second, for f0are often more convenient when describing the plot of a sinusoid,
because the factor of 2 πis not involved.
It is relatively easy to understand the effect of the frequency parameter because a
higher value is more cycles per unit time. Figure 2-7 shows this effect for three choices off
0in the signal x(t)=5 cos(2 πf0t). The sinusoid in Fig. 2-7(a) has a higher frequency
than the one in Fig. 2-7(b). As we expect, the waveform shape is similar for both, but thehigher frequency signal varies more rapidly with time (i.e., the cycle length (period) isa shorter time interval). We have already seen in (2.4) that this is true because the period of
−10 −5 0 5 10 15 20−505−10 −5 0 5 10 15 20−505−10 −5 0 5 10 15 20−505
Time t (ms)(a) Cosine Signal: f0 = 200 Hz
(b) Cosine Signal: f0 = 100 Hz
(c) Cosine Signal: f0 = 0 HzFigure 2-7 Cosine signals
x(t)=5 cos(2 πf0t)for several
values of f0: (a)f0=200 Hz;
(b)f0=100 Hz; (c) f0=0.
2The unit hertz was proposed in 1933 by the Electrotechnical Commission in honor of Heinrich Hertz,
who ﬁrst demonstrated the existence of radio waves.
2-3 SINUSOIDAL SIGNALS 37
a cosine signal is the reciprocal of the frequency. Note that when the frequency doubles
(100 Hz →200 Hz), the period is halved. This is an illustration of the general principle
that the higher the frequency, the more rapid the signal waveform changes with time.
Throughout this book, we will see more examples of this inverse relationship between
time and frequency.
Finally, notice that f0=0 is a perfectly acceptable frequency value, and when
this value is used, the resulting signal is constant (Fig. 2-7(c)), since 5 cos(2 π(0)t)=
5 cos(0 )=5 for all values of t. Thus, the constant signal, often called DC,3is, in fact, a
sinusoid of zero frequency.
2-3.2 Phase and Time Shift
The phase parameter ϕ(together with the frequency) determines the time locations of
the maxima and minima of a cosine wave, as well as the zero crossings in-between. Tobe speciﬁc, notice that the sinusoid (2.2) with ϕ=0 has a positive peak at t=0. When
ϕ/negationslash=0, the phase determines how much the maximum of the cosine signal is shifted away
fromt=0.
Before we examine this point in detail for sinusoids, it is useful to become familiar
with the general concept of time-shifting a signal. Suppose that a signal s(t)is deﬁned
by a known formula or graph. A simple example is the following triangularly shapedfunction:
s(t)=⎧
⎪⎪⎨
⎪⎪⎩2t 0≤t≤
1
2
−2
3(t−2)1
2≤t≤2
0 elsewhere(2.5)
This simple function, shown in Fig. 2-8(a), has a slope of 2 for 0 ≤t<1
2and a negative
slope of −2
3for1
2<t≤2. Now consider the function x1(t)=s(t−2). From the deﬁnition
ofs(t), it follows that x1(t)is nonzero for
0≤(t−2)≤2 =⇒ 2≤t≤4
Within this time interval, the formula for the shifted signal is:
x1(t)=⎧
⎪⎪⎨
⎪⎪⎩2(t−2) 2≤t≤21
2
−2
3(t−4)21
2≤t≤4
0 elsewhere(2.6)
In other words, x1(t)is simply the s(t)function with its origin (and peak) shifted to the
right by 2 s; see Fig. 2-8(b). Similarly, x2(t)=s(t+1)is thes(t)function shifted to the
leftby 1 s in Fig. 2-8(c); its nonzero portion is located in the interval −1≤t≤1.
3Electrical engineers use the abbreviation DC standing for direct current, which is a constant current.
38 CHAPTER 2 SINUSOIDS
01234  t1
(b)01234  t1
(a)01234  t1
(c)s.t/
1 1 1x2.t/Ds.tC1/ x1.t/Ds.t 2/
Figure 2-8 Illustration of time-shifting: (a) the triangular signal s(t); (b) shifted to the right
by 2 s, x1(t)=s(t−2); (c) shifted to the left by 1 s, x2(t)=s(t+1).
EXERCISE 2.2 Derive the equations for the shifted signal x2(t)=s(t+1).
We will have many occasions to consider time-shifted signals. Whenever a signal can
be expressed in the form x1(t)=s(t−t1), we say that x1(t)is a time-shifted version of
s(t).I ft 1is a positive number, then the shift is to the right, and we say that the signal s(t)
has been delayed in time. When t1is a negative number, then the shift is to the left, and
we say that the signal s(t)wasadvanced in time. In summary, time shifting is essentially
a redeﬁnition of the time origin of the signal. In general, any function of the form s(t−t1)
has its time origin moved to the location t=t1.
For a sinusoid, the time shift is deﬁned with respect to a zero-phase cosine that has
a positive peak at t=0. Since a sinusoid has many positive peaks, we must pick one to
deﬁne the time shift, so we pick the positive peak of the sinusoid that is closest to t=0.
In the plot of Fig. 2-6, the time where this positive peak occurs is t1=0.005 s. Since the
peak in this case occurs at a positive time (to the right of t=0), we say that the time shift
is a delay of the zero-phase cosine signal. Now we can relate the time delay to phase.
Letx0(t)=Acos(ω 0t)denote a cosine signal with zero phase. A delay of x0(t)can be
converted to a phase ϕby making the following comparison:
x0(t−t1)=Acos(ω0(t−t1))=Acos(ω 0t+ϕ)
⇒cos(ω 0t−ω0t1)=cos(ω 0t+ϕ)
Since the second equation must hold for all t, we conclude that ϕ=−ω0t1. Notice that
the phase is negative when the time shift t1is positive (a delay). We can also express the
phase in terms of the period (T0=1/f 0)where we get the more intuitive formula
ϕ=−ω0t1=−2π/parenleftbiggt1
T0/parenrightbigg
(2.7a)
which states that the phase is 2 πtimes the fraction of a period given by the ratio of the
time shift to the period. If we need to get the time shift from the phase, we solve for t1
DEMO
Sine Drill t1=−ϕ
ω0=−ϕ
2πf0=−ϕT0
2π(2.7b)
Since the positive peak nearest to t=0 must always lie within the interval
[−1
2T0,1
2T0], the phase calculated in (2.7a) will always satisfy −π<ϕ ≤π. However,
2-4 SAMPLING AND PLOTTING SINUSOIDS 39
the phase is also ambiguous because adding a multiple of 2 πto the argument of a cosine
function does not change the value of the cosine. This is a direct consequence of the fact
that the cosine is periodic with period 2 π. Each different multiple of 2 πcorresponds to
picking a different peak of the periodic waveform. Thus, another way to compute thephase is to ﬁnd any positive peak of the sinusoid and measure its corresponding timelocation. After the time location is converted to phase using (2.7a), an integer multiple of2πcan be added to or subtracted from the phase to produce a ﬁnal result between −πand
+π. This gives a ﬁnal result identical to locating the peak that is within half a period of
t=0. The operation of adding or subtracting multiples of 2 πis referred to as reducing
modulo 2π, because it is similar to modulo reduction in mathematics, which amounts to
dividing by 2 πand taking the remainder. The value of phase that falls between −πand
+πis called the principal value of the phase.
EXERCISE 2.3 In Fig. 2-6, it is possible to measure both a positive and a negative value of t1and then
calculate the corresponding phases. Which phase is within the range −π<ϕ ≤π?
Verify that the two phases differ by 2 π.
EXERCISE 2.4 Starting with the plot in Fig. 2-6, sketch a plot of x(t−t1)whent1=0.0075. Repeat
fort1=−0.01. Make sure that you shift in the correct direction. For each case,
compute the phase of the resulting time-shifted sinusoid.
EXERCISE 2.5 For the signal in Fig. 2-6, x(t)=20 cos(2 π(40)t−0.4π), ﬁndGandt1so that the
signal y(t)=Gx(t−t1)is equal to 5 cos(2 π(40)t).
2-4 Sampling and Plotting Sinusoids
All of the plots of sinusoids in this chapter were created using MATLAB. This had to be
done with care, because MATLAB deals only with discrete signals represented by rowor column vectors, but we actually want to plot a continuous function x(t). For example,
if we wish to plot a function such as
x(t)=20 cos(2 π(40)t−0.4π) (2.8a)
which is shown in Fig. 2-6, we must evaluate x(t) at a discrete set of times. Usually we
pick a uniform sett
n=nTs, where nis an integer. Then from x(t)we obtain the sequence
of samples
x(nT s)=20 cos(80 πnT s−0.4π) (2.8b)
where Tsis called the sample spacing orsampling period . When plotting the function
x(nT s)using theplot function in MATLAB, we must provide a pair of row or column
40 CHAPTER 2 SINUSOIDS
vectors, one containing the time values and the other the computed function values to be
plotted. For example, the MATLAB statements
n = -6:9;
Ts = 0.005;tn = n*Ts;xn = 20*cos(80*pi*tn - 0.4*pi);plot(tn,xn)
would create a row vector tnof 16 numbers between −0.03 and 0 .045 spaced by the
sampling period 0.005, and a row vector xnof samples of x(t). Then the MATLAB
functionplot draws the corresponding points, connecting them with straight line
segments. Constructing the curve between sample points in this way is called linear
interpolation . The solid gray curve in Fig. 2-9(a) shows the result of linear interpolation
when the sample spacing is Ts=0.005. Intuitively, we realize that if the points are very
close together, we will see a smooth curve. The important question is, “How small must
we make the sample spacing, so that the cosine signal can be accurately reconstructedbetween samples by linear interpolation?”A qualitative answer to this question is providedby Fig. 2-9, which shows plots produced by three different sampling periods.
0 0.01 0.02 0.03 0.040200 0.01 0.02 0.03 0.040200 0.01 0.02 0.03 0.04020
Time t(s)0:01
0:01
0:010:02
0:02
0:020:03
0:03
0:0320
20
20(a) Samples of Sinusoid: TsD0:005 s
(b)TsD0:0025 s
(c)TsD0:0005 sFigure 2-9 Plotting the 40-Hz sampled cosine
2.8(b) for (a) Ts=0.005 s; (b) Ts=0.0025 s;
(c)Ts=0.0005 s.
2-5 COMPLEX EXPONENTIALS AND PHASORS 41
Obviously, the sample spacing of Ts=0.005 in Fig. 2-9(a) is not sufﬁciently close
to create an accurate plot when the sample points are connected by straight lines.4With a
spacing of Ts=0.0025 in Fig. 2-9(b), the plot starts to look more like a cosine, but it is
still possible to see places where the points are connected by straight lines rather than the
smooth cosine function. Only in the plot of Fig. 2-9(c), where the spacing is Ts=0.0005,
does the sampling spacing become so dense that our eye can easily visualize a curve thatis a faithful representation of the cosine function. A precise answer to the question posedabove would require a mathematical deﬁnition of accuracy; our subjective judgmentwould be too prone to variability among different observers. However, we learn from thisexample that as the sampling period decreases, more samples are taken during one periodof the sinusoid. When T
s=0.005, there are 5 samples per period; when Ts=0.0025
there are 10 samples per period; and when Ts=0.0005, there are 50 samples per period.
It seems that 10 samples per period is not quite enough, and 50 samples per period isprobably more than necessary, but, in general, the more samples per period, the smootherand more accurate is the linearly interpolated curve.
The choice of T
salso depends on the frequency of the cosine signal, because it is
the number of samples per period that matters in plotting. For example, if the frequencyof the cosine signal were 400 Hz instead of 40 Hz, then the period is ten times shorterand a sample spacing of T
s=0.0005 would yield only 5 samples per period. The key to
accurate reconstruction is to sample frequently enough so that the cosine signal does notchange very much between sample points.
The problem of plotting a cosine signal from a set of discrete samples also depends
on the interpolation method used. With MATLAB’s built-in plotting function, linearinterpolation is used to connect points by straight-line segments. This raises the question“If a more sophisticated interpolation method can be used, how large can the sample
spacing be such that the cosine signal can be reconstructed accurately from the samples?”Surprisingly, the theoretical answer to this question is that the cosine signal can bereconstructed exactly from its samples if the sample spacing is less than half the period
(i.e., the average number of samples per period need be only slightly more than two)!Linear interpolation certainly cannot achieve this result, but, in Chapter 4, where weexamine the sampling process in more detail, we will explain how this remarkable resultcan be achieved. For now, our observation that smooth and accurate sinusoidal curves canbe reconstructed from samples if the sampling period is “small enough” will be adequatefor our purposes.
2-5 Complex Exponentials and Phasors
We have shown that cosine signals are useful mathematical representations for signals that
arise in a practical setting, and that they are simple to deﬁne and interpret. However, it turnsout that the analysis and manipulation of sinusoidal signals is often greatly simpliﬁed by
4The sample points are shown as dots in these three plots. This was achieved by adding a second plot
using MATLAB’s hold andstem functions.
42 CHAPTER 2 SINUSOIDS
(a) (b)x x
y yr
.x;y/´DxCjy
´Dre<f´g <f´g=f´g =f´g
Figure 2-10 Representations of
complex numbers in the complex
plane. (a) Cartesian or rectangularform. (b) Polar form.
dealing with related signals called complex exponential signals .Although the introduction
of the unfamiliar and seemingly artiﬁcial concept of complex exponential signals may
at ﬁrst seem to be making the problem more difﬁcult, we will soon see the value in thisnew representation because we will avoid many tedious trigonometric manipulations thatarise when using sinusoidal signals. Before introducing the complex exponential signal,we will ﬁrst review some basic concepts concerning complex numbers.
5
2-5.1 Review of Complex Numbers
A complex number zis an ordered pair of real numbers. Complex numbers may be
represented by the notation z=(x, y), where x=/Rfractur {z}is the real part andy=/Ifractur {z}is
theimaginary part ofz. Electrical engineers use the symbol jfor√−1 instead of i,s ow e
can also represent a complex number as z=x+jy. These two representations are called
theCartesian form of the complex number. Complex numbers are often represented as
points in a complex plane, where the real and imaginary parts are the horizontal and
vertical coordinates, respectively, as shown in Fig. 2-10(a). With the Cartesian notationand the understanding that any number multiplied by jis included in the imaginary part,
the operations of complex addition, complex subtraction, complex multiplication, andcomplex division can be deﬁned in terms of real operations on the real and imaginaryparts. For example, the sum of two complex numbers is deﬁned as the complex numberwhose real part is the sum of the real parts and whose imaginary part is the sum of theimaginary parts.
Since complex numbers can be represented as points in a plane, it follows that complex
numbers are analogous to vectors in a two-dimensional space. This leads to a usefulgeometric interpretation of a complex number as a vector, shown in Fig. 2-10(b). Vectorshave length and direction, so another way to represent a complex number is the polar
form in which the complex number is represented by r, its vector length, together with θ,
its angle with respect to the positive real axis. The length of the vector is also called themagnitude ofz(denoted |z|), and the angle is called the argument ofz(denoted arg z).
This is indicated by the descriptive notation z↔r∠θ, which is interpreted to mean that
the vector representing zhas length rand makes an angle θwith the positive real axis.
5Appendix A provides a more detailed review of the fundamentals of complex numbers. Readers who
know the basics of complex numbers and how to manipulate them can skim Appendix A for review and skip
to Section 2-5.2.
2-5 COMPLEX EXPONENTIALS AND PHASORS 43
It is important to be able to convert between the Cartesian and polar forms of complex
numbers. Figure 2-10(b) shows a complex number zand the quantities involved in
both the Cartesian and polar representations. Using this ﬁgure, as well as some simple
trigonometry and the Pythagorean theorem, we can derive a method for computing theCartesian coordinates (x, y) from the polar variables r∠θ:
x=rcosθ and y=rsinθ (2.9)
and, likewise, for going from Cartesian to polar form
r=/radicalbig
x2+y2 and θ=arctan/parenleftBigy
x/parenrightBig
(2.10)
where the arctangent used must return angles in all four quadrants. Many calculatorsand computer programs have these two sets of equations built in, making the conversionbetween polar and Cartesian forms simple and convenient.
Ther∠θnotation is clumsy, and does not lend itself to ordinary algebraic rules.
A much better polar form is given by using Euler’s famous formula for the complex
exponential
e
jθ=cosθ+jsinθ (2.11)
The Cartesian pair (cosθ,sinθ)can represent any point on a circle of radius 1, so a slight
generalization of (2.11) gives a representation valid for any complex number z
z=rejθ=rcosθ+jrsinθ (2.12)
The complex exponential polar form of a complex number is most convenient when
calculating a complex multiplication or division (see Appendix A for more details). Italso serves as the basis for the complex exponential signal, which is introduced in thenext section. A MATLAB GUI called zdrill is available (from the Companion Website)
for building skills with basic complex number operations.
DEMO
zdrill
2-5.2 Complex Exponential Signals
Thecomplex exponential signal is deﬁned as
z(t)=Aej(ω 0t+ϕ)(2.13)
Observe that the signal z(t)is a complex-valued function of t, but its magnitude is always
constant (i.e., |z(t)|=A), and its angle is arg z(t)=(ω0t+ϕ). Using Euler’s formula
(2.11), the complex exponential signal can be expressed in Cartesian form as
Aej(ω 0t+ϕ)=Acos(ω 0t+ϕ)+jAsin(ω0t+ϕ) (2.14)
As with the real sinusoid, Ais the amplitude, and should be a positive real number; ϕ
is the phase; and ω0is the frequency in rad/s. In (2.14) it is clear that the real part of
44 CHAPTER 2 SINUSOIDS
the complex exponential signal is a real cosine signal as deﬁned in (2.2), and that its
imaginary part is a real sine signal. Figure 2-11 shows a plot of the following complexexponential signal:
z(t)=20e
j(2π(40)t−0.4π)
=20ej(80πt−0.4π)
=20 cos(80 πt−0.4π)+j20 sin(80πt−0.4π)
=20 cos(80 πt−0.4π)+j20 cos(80 πt−0.9π)
Plotting a complex signal as a function of time requires two graphs, one for the real partand another for the imaginary part. Observe that the real and the imaginary parts of thecomplex exponential signal are both real sinusoidal signals, and only their phases differby a phase shift of 0 .5πrad.
The main reason that we are interested in the complex exponential signal is that it is an
alternative representation for the real cosine signal. This is because we can always write
x(t)=/Rfractur/braceleftbig
Ae
j(ω 0t+ϕ)/bracerightbig
=Acos(ω 0t+ϕ) (2.15)
In fact, the real part of the complex exponential signal shown in Fig. 2-11 is identicalto the cosine signal plotted in Fig. 2-6. Although it may seem that we have complicatedthings by ﬁrst introducing the imaginary part to obtain the complex exponential signal andthen throwing it away by taking only the real part, we will see that many calculations aresimpliﬁed by using properties of the complex exponential representation. It is possible,for example, to replace most trigonometric manipulations with algebraic operations onthe exponents.
EXERCISE 2.6 Demonstrate that equating the real parts of both sides of the equation ej(α+β)=ejαejβ
will lead to identity #5 in Table 2-2. Also, show that identity #4 is obtained fromequating the imaginary parts.
−0.02 −0.01 0 0.01 0.02 0.03 0.04−20−1001020(b) Imaginary Part−0.02 −0.01 0 0.01 0.02 0.03 0.04−20−1001020(a) Real Part
Time t (s)Figure 2-11 Real and imaginary parts of the complex
exponential signal z(t)=20ej(2π(40)t−0.4π). The phase
difference between the two sinusoids is 90◦orπ/2 rad.
2-5 COMPLEX EXPONENTIALS AND PHASORS 45
2-5.3 The Rotating Phasor Interpretation
When two complex numbers are multiplied, it is best to use polar form for both numbers
because we just multiply the magnitudes and add the angles. To justify this statement,
consider z3=z1z2, where z1=r1ejθ1andz2=r2ejθ2. Then the product is
z3=r1ejθ1r2ejθ2=r1r2ejθ1ejθ2=r3/bracehtipdownleft/bracehtipupright/bracehtipupleft/bracehtipdownrightr1r2ej(θ3/bracehtipdownleft/bracehtipupright/bracehtipupleft/bracehtipdownright
θ1+θ2)
where we have used the law of exponents to combine the two complex exponentials. Thevectors illustrated in Fig. 2-12 show that complex multiplication involves rotation andscaling.
This geometric view of complex multiplication leads to a useful interpretation of the
complex exponential signal as a complex vector that rotates as time increases. If we useAandϕto deﬁne a complex number:
X=Ae
jϕ(2.16)
then the complex exponential (2.13) can be expressed as
z(t)=Xejω0t(2.17)
(i.e.,z(t)is the product of the complex constant Xand the complex-valued time function
ejω0t). The complex number X, which is aptly called the complex amplitude, has a polar
representation created from the amplitude and the phase of the complex exponentialsignal. Taken together, the complex amplitude X=Ae
jϕand the frequency ω0are
sufﬁcient to represent z(t), as well as the real cosine signal, x(t)=Acos(ω 0t+ϕ),
using (2.15). The complex amplitude is also called a phasor . The phasor terminology
is common in electrical circuit theory, where complex exponential signals are used togreatly simplify the analysis and design of circuits. Since it is a complex number, Xcan
be represented graphically as a vector in the complex plane, where the vector’s magnitude(|X|=A) is the amplitude, and its angle (∠X =ϕ) is the phase of a complex exponential
signal deﬁned by (2.17). In the remainder of the text, the term complex amplitude will
be used more often than phasor, but the two terms can be used interchangeably because
they refer to the same quantity deﬁned in (2.16).
z1 z1
z2z3z2
θ2 θ3 
θ1 
(a) (b)Figure 2-12 Geometric view of complex
multiplication z3=z1z2. The vector z3is a rotated
and scaled version of z2because ∠z3=∠z2+θ1,
and the length of z3isr1times the length of z2.
Here,r1=1.72,r2=0.77, and r3=1.32.
46 CHAPTER 2 SINUSOIDS
The complex exponential signal deﬁned in (2.17) can also be written as
z(t)=Xejω0t=Aejϕejω0t=Aejθ(t)
where θ(t) is a time-varying angle function
θ(t)=ω0t+ϕ (radians)
At a given instant in time, t, the value of the complex exponential signal, z(t), is a complex
number whose magnitude is Aand whose angle is θ(t). Like any complex number, z(t)
can be represented as a vector in the complex plane. In this case, the tip of the vector
always lies on the perimeter of a circle of radius A.N o w ,i ft increases, the complex
vector z(t)will simply rotate at a constant rate, determined by the radian frequency ω0.
In other words, multiplying the phasor Xbyejω0tas in (2.17) causes the phasor Xto
rotate by an angular amount of ω0t. Since |ejω0t|=1, no scaling occurs. Thus, another
name for the complex exponential signal is rotating phasor .
If the frequency ω0is positive, the direction of rotation is counterclockwise, because
θ(t) will increase with increasing time. Similarly, when ω0is negative, the angle θ(t)
changes in the negative direction as time increases, so the complex phasor rotatesclockwise. Thus, rotating phasors are said to have positive frequency if they rotate
counterclockwise, and negative frequency if they rotate clockwise.
A rotating phasor makes one complete revolution every time the angle θ(t) changes
by 2πradians. The time it takes to make one revolution is also equal to the period, T
0,o f
the complex exponential signal, so
ω0T0=(2πf0)T0=2π =⇒ T0=1
f0
Notice that the phase ϕdeﬁnes where the phasor is pointing when t=0. For example,
ifϕ=π/2, then the phasor is pointing straight up when t=0, whereas if ϕ=0, the
phasor is pointing to the right when t=0.
The plots in Fig. 2-13(a) illustrate the relationship between a single complex rotating
phasor and the cosine signal waveform. The upper left plot shows the complex plane withtwo vectors. The vector at an angle in the third quadrant represents the signal
z(t)=e
j(t−π/ 4)
at the speciﬁc time t=1.5π . The horizontal vector pointing to the left is equal to the real
part of the vector z(t)at the particular time t=1.5π which is
x(1.5π) =/Rfractur {z(1.5π)}=cos(1.5π −π/4)=−√
2
2
Astincreases, the rotating phasor z(t)rotates in the counterclockwise direction, and its
real part x(t) oscillates left and right along the real axis. This is shown in the lower left
plot, which shows how the real part of the rotating phasor has varied over one period (i.e.,0≤t≤2π). We will return to discuss Fig. 2-13(b) in Sect. 2-5.4.
2-5 COMPLEX EXPONENTIALS AND PHASORS 47
Real Part Phasor SumComplex Plane Complex Plane
−1 −0.5 0 0.5 10
1
2
3
4
5
6
(a)−1 −0.5 0 0.5 1
(b)Time t (s)0
123456Time t (s)
Figure 2-13 Rotating phasors:
(a) single phasor rotating
counterclockwise; (b) complexconjugate rotating phasors.
2-5.4 Inverse Euler Formulas
The inverse Euler formulas allow us to write the cosine function in terms of complex
exponentials as
cosθ=ejθ+e−jθ
2(2.18)
and also the sine function can be expressed as
sinθ=ejθ−e−jθ
2j(2.19)
(See Appendix A for more details.)DEMO
Rotating Phasors
Equation (2.18) can be used to express cos(ω 0t+ϕ)in terms of two complex
exponentials as follows:
Acos(ω 0t+ϕ)=A/parenleftbiggej(ω 0t+ϕ)+e−j(ω 0t+ϕ)
2/parenrightbigg
=1
2Xejω0t+1
2X∗e−jω 0t
=1
2z(t)+1
2z∗(t)
=/Rfractur {z(t)}
48 CHAPTER 2 SINUSOIDS
where∗denotes complex conjugation. This formula has an interesting interpretation. The
real cosine signal with frequency ω0is actually composed of a positive frequency (ω0)
complex exponential and a negative frequency (−ω 0)complex exponential. The complex
amplitude of the positive frequency complex exponential signal is1
2X=1
2Aejϕ, and the
complex amplitude of the negative frequency complex exponential is1
2X∗=1
2Ae−jϕ.I n
other words, the real cosine signal can be represented as the sum of two complex rotating
phasors that are rotating in opposite directions starting from phasors that are complex DEMO
Rotating Phasors conjugates of each other.
Figure 2-13(b) illustrates how the sum of the two half-amplitude complex conjugate
rotating phasors becomes the real cosine signal. In this case, the vector at an angle in thethird quadrant (heavy-orange line) is the complex rotating phasor
1
2z(t)at time t=1.5π .
Astincreases after that time, the angle would increase in the counterclockwise direction.
Similarly, the vector in the second quadrant (plotted with a light-orange line)i st h e
complex rotating phasor1
2z∗(t)at time t=1.5π .A stincreases after that time, the angle
of1
2z∗(t)will increase in the clockwise direction. The horizontal vector pointing to the
left is the sum of these two complex conjugate rotating phasors. The result is the sameas the real vector in the plot on the left, and therefore the real cosine wave traced out asa function of time is the same in both cases. The lower right shows the variation of thereal values of cos(t −π/4)for 0≤t≤2π.
This representation of real sinusoidal signals in terms of their positive- and negative-
frequency components is a remarkably useful concept. The negative frequencies,which arise due to the complex exponential representation, turn out to lead to manysimpliﬁcations in the analysis of signals and systems problems. We will develop thisrepresentation further in Chapter 3, where we introduce the idea of the spectrum of asignal.
EXERCISE 2.7 Show that the following representation can be derived for the real sine signal:
Asin(ω0t+ϕ)=1
2Xe−jπ/ 2ejω0t+1
2X∗ejπ/2e−jω 0t
where X=Aejϕ. In other words, the sine signal is composed of two complex
exponentials with the same positive and negative frequencies, but the complexcoefﬁcients multiplying the terms are different from those of the cosine signal.Speciﬁcally, the sine signal requires additional phases of ∓π/ 2 applied to the complex
amplitude XandX
∗, respectively.
2-6 Phasor Addition
There are many situations in which it is necessary to add two or more sinusoidal signals.
When all signals have the same frequency, the addition simpliﬁes. This addition problem
arises in electrical circuit analysis, and it will arise again in Chapters 5 and 6, where weintroduce the concepts of discrete-time ﬁltering and frequency response. Thus it is useful
2-6 PHASOR ADDITION 49
to develop a short cut for adding several sinusoids having the same frequency, but with
different amplitudes and phases. Our goal is to prove that the following statement is true:
N/summationdisplay
k=1Akcos(ω 0t+ϕk)=Acos(ω 0t+ϕ) (2.20)
by showing how to get Aandϕfrom the sum. Equation (2.20) states that a sum of
Ncosine signals of differing amplitudes and phases, but with the same frequency, can
always be reduced to a single cosine signal of the same frequency. A proof of (2.20) could
be accomplished by using trigonometric identities such as
Akcos(ω 0t+ϕk)=Akcosϕkcos(ω 0t)−Aksinϕksin(ω0t) (2.21)
but this approach is exceedingly tedious to carry out. As we will see, a much simplerapproach can be based on the complex exponential representation of the cosinesignals.
2-6.1 Addition of Complex Numbers
When two complex numbers are added, it is necessary to use the Cartesian form. If
z1=x1+jy1andz2=x2+jy2, thenz3=z1+z2=(x1+x2)+j(y 1+y2)(i.e., the real
and imaginary parts of the sum are the sums of the real and imaginary parts, respectively).Using the vector interpretation of complex numbers, where both z
1andz2are viewed
as vectors with their tails at the origin, the sum z3is the result of vector addition, and is
constructed as follows:
(a) Draw a copy of z1with its tail at the head of z2. Call this displaced vector ˆz1.
(b) Draw the vector from the origin to the head of ˆz1. This is the sum z3.
This process is depicted in Fig. 2-14 for the case z1=4−j3 andz2=2+j5.
2-6.2 Phasor Addition Rule
The phasor representation of cosine signals can be used to show that the following sum
of sinusoids:
x(t)=N/summationdisplay
k=1Akcos(ω 0t+ϕk)=Acos(ω 0t+ϕ) (2.22)
can be carried out by adding complex amplitudes to get Aandϕ:
N/summationdisplay
k=1Akejϕk=Aejϕ(2.23)
50 CHAPTER 2 SINUSOIDS
Real AxisImaginary AxisDisplaced
Version of z1 
zz3 =6 +j2z2 = 2 + j5 
z1 = 4 − j3 Figure 2-14 Graphical construction of
complex number addition, z3=z1+z2, shows
that the process is the same as vector addition.
That is, the sum of two or more cosine signals each having the same frequency (2.22), but
having different amplitudes and phases, can be expressed as a single equivalent cosine
signal. The resulting amplitude (A)and phase (ϕ)of the term on the right-hand side
of (2.22) can be computed from the individual amplitudes (Ak)and phases (ϕk)on the
left-hand side by doing the complex addition in (2.23). This method is called the phasor
addition rule. Proof of the phasor addition rule requires the following two pieces ofinformation:
(a) Any sinusoid can be written in the form:
Acos(ω
0t+ϕ)=/Rfractur {Aej(ω 0t+ϕ)}=/Rfractur { Aejϕejω0t}
(b) For any set of complex numbers {Xk}, the sum of the real parts is equal to the real
part of the sum, so we have
/Rfractur/braceleftBiggN/summationdisplay
k=1Xk/bracerightBigg
=N/summationdisplay
k=1/Rfractur{X k}
Proof of the phasor addition rule involves the following algebraic manipulations:
N/summationdisplay
k=1Akcos(ω 0t+ϕk)=N/summationdisplay
k=1/Rfractur/braceleftbig
Akej(ω 0t+ϕk)/bracerightbig
=/Rfractur/braceleftBiggN/summationdisplay
k=1Akejϕkejω0t/bracerightBigg
=/Rfractur/braceleftBigg/parenleftBiggN/summationdisplay
k=1Akejϕk/parenrightBigg
ejω0t/bracerightBigg
=/Rfractur/braceleftbig/parenleftbig
Aejϕ/parenrightbig
ejω0t/bracerightbig
=/Rfractur/braceleftbig
Aej(ω 0t+ϕ)/bracerightbig
=Acos(ω 0t+ϕ)
2-6 PHASOR ADDITION 51
Two steps (shown in color) are important in this proof. In the third line, the complex
exponential ejω0tis factored out of the summation because all the sinusoids have the
same frequency. In going from the third line to the fourth, the crucial step is replacing
the summation term in parentheses with a single complex number, Aejϕ, as deﬁned in
(2.23), because we are adding Ncomplex constants.
2-6.3 Phasor Addition Rule: Example
We now consider an example of adding two sinusoids, where
x1(t)=1.7 cos(20 πt+70π/180)
x2(t)=1.9 cos(20 πt+200π/180)
The frequency of both sinusoids is 10 Hz, so the period is T0=0.1 s. The sum x1(t)+x2(t)
is done via phasor addition (2.23) of the complex amplitudes which requires foursteps:
1. Represent x
1(t)andx2(t)by the phasors:
X1=A1ejϕ1=1.7ej70π/180
X2=A2ejϕ2=1.9ej200π/180
2. Convert both phasors to rectangular form:
X1=0.5814 +j1.5975
X2=−1.7854 −j0.6498
3. Add the real parts and the imaginary parts:
X3=X1+X2
=(0.5814 +j1.5975) +(−1.7854 −j0.6498)
=−1.204 +j0.9477
4. Convert back to polar form, obtaining6
X3=1.5322 ej141.79π/ 180
6With a modern scientiﬁc calculator, step 1 is data entry, and then a single button would be pushed to do
steps 2–4.
52 CHAPTER 2 SINUSOIDS
The resultant phasor X3is converted back to a 10-Hz sinusoid, so the ﬁnal formula
forx3(t)is
x3(t)=1.5322 cos(20 πt+141.79π/ 180)
orx3(t)=1.5322 cos(20 π(t+0.0394))
The waveforms of the three signals are shown Fig. 2-15(b) and the phasors used to
solve the problem are shown on the left in Fig. 2-15(a). Notice that the times where the
maximum of each cosine signal occurs can be derived from the phase through the formula
tm=−ϕT0
2π
which gives
tm1=−0.0194,tm2=−0.0556,t m3=−0.0394 s
These times are marked with vertical dashed lines in the corresponding waveform plots
in Fig. 2-15(b).
Phasor Vectors
Phasor Addition0 0.04 0.08 0.12 0.16 0.2012
0 0.04 0.08 0.12 0.16 0.2012
0 0.04 0.08 0.12 0.16 0.2012
(a) (b)Time t(s)0:040:040:04
0:080:080:08
222
111
Period = 0.1 s
Period = 0.1 sPeriod = 0.1 s
tm1
tm2
tm3X1X1
X2
X3X3x1.t/
x2.t/
x3.t/
Figure 2-15 (a) Adding sinusoids by doing a phasor addition, which is actually a graphical vector sum. (b) The time of
the signal maximum is marked on each xi(t)plot.
2-6 PHASOR ADDITION 53
Table 2-3 Phasor addition example.
Z = X + jY Magnitude Phase Ph/pi Ph(deg)
Z1 0.5814 1.5975 1.7 1.222 0.389 70.00
Z2 -1.7854 -0.6498 1.9 -2.793 -0.889 -160.00
Z3 -1.204 0.9477 1.5322 2.475 0.788 141.79
2-6.4 MATLAB Demo of Phasors
The process of phasor addition can be accomplished easily using MATLAB. The answer
generated by MATLAB and printed with the special function zprint (provided on the
website) for this particular phasor addition is given in Table 2-3. Help on zprint gives
ZPRINT print out complex # in rect and polar form
usage: zprint(z)
z = vector of complex numbers; each one will be printed
in a format showing real, imag, mag and phaseDEMO
ZDrill
LAB
DSP-First ToolboxThe MATLAB code that generates the plots in Fig. 2-15 uses the special MATLAB
functions (provided on the Companion Website) zprint ,zvect ,zcat ,ucplot , and
zcoords to make the vector plots.
2-6.5 Summary of the Phasor Addition Rule
In this section, we have shown how a real cosine signal can be represented as the real
part of a complex exponential signal (complex rotating phasor), and we have applied thisrepresentation to show how to simplify the process of adding several cosine signals ofthe same frequency.
x(t)=
N/summationdisplay
k=1Akcos(ω 0t+ϕk)=Acos(ω 0t+ϕ)
In summary, all we have to do to get the cosine signal representation of the sum is:
(a) Obtain the phasor representation Xk=Akejϕkof each of the individual signals.
(b) Add the phasors of the individual signals to get X=X1+X2+···= Aejϕ. This
requires polar-to-Cartesian-to-polar format conversions.
(c) Multiply Xbyejω0tto get z(t)=Aejϕejω0t.
(d) Take the real part to get x(t)=/Rfractur {Aejϕejω0t}=A cos(ω 0t+ϕ)=x1(t)+
x2(t)+··· .
In other words, Aandϕmust be calculated by doing a vector sum of all the Xk
phasors.
54 CHAPTER 2 SINUSOIDS
0 5 10 15 200246Period = 10 ms
Time t(ms)x3.t/
2
4
56Figure 2-16 Two sinusoids and their sum,
x3(t)=x1(t)+x2(t).
EXERCISE 2.8 Consider the two sinusoids,
x1(t)=5 cos(2 π(100)t+π/3)
x2(t)=4 cos(2 π(100)t−π/4)
Obtain the phasor representations of these two signals, add the phasors, plot the two
phasors and their sum in the complex plane, and show that the sum of the two signals is
x3(t)=5.536 cos(2 π(100)t+0.2747)
In degrees the phase should be 15.74◦. Examine the plots in Fig. 2-16 to see whether
you can identify the cosine waves x1(t),x2(t), and x3(t)=x1(t)+x2(t).
2-7 Physics of the Tuning Fork
In Section 2-1, we described a simple experiment in which a tuning fork was seen togenerate a signal whose waveform looked very much like that of a sinusoidal signal.Now that we know a lot more about sinusoidal signals, it is worthwhile to take upthis issue again. Is it a coincidence that the tuning-fork signal looks like a sinusoid,or is there a deeper connection between vibrations and sinusoids? In this section, wepresent a simple analysis of the tuning-fork system that shows that the tuning fork doesindeed vibrate sinusoidally when given a displacement from its equilibrium position. Thesinusoidal motion of the tuning-fork tines is transferred to the surrounding air particles,thereby producing the acoustic signal that we hear. This simple example illustrates howmathematical models of physical systems that are derived from fundamental physicalprinciples can lead to concise mathematical descriptions of physical phenomena and ofsignals that result.
2-7.1 Equations from Laws of Physics
A simpliﬁed drawing of the tuning fork and its motion is shown in Fig. 2-17. As we have
seen experimentally, when struck against a ﬁrm surface, the tines of the tuning fork vibrate
2-7 PHYSICS OF THE TUNING FORK 55
(a) (b)xy
Deformation
of Tine
Figure 2-17 (a) Tuning fork. (b) The coordinate
system needed to write equations for the vibrationof the tine.
and produce a “pure” tone. We are interested in deriving the equations that describe the
physical behavior of the tuning fork so that we can understand the basic mechanism bywhich the sound is produced.
7Newton’s second law, F=ma, will lead to a differential
equation whose solution is a sine or cosine function, or a complex exponential.
When the tuning fork is struck, one of the tines is deformed slightly from its rest
position, as depicted in Fig. 2-17(b).We know from experience that unless the deformationwas so large as to break or bend the metal, there would be a tendency for the tine to returnto its original rest position. The physical law that governs this movement is Hooke’slaw. Although the tuning fork is made of a very stiff metal, we can think of it as anelastic material when the deformation is tiny. Hooke’s law states that the restoring forceis directly proportional to the amount of deformation. If we set up a coordinate systemas in Fig. 2-17(b), the deformation is along the x-axis, and we can write
F=−kx
where the parameter kis the elastic constant of the material (i.e., its stiffness). The minus
sign indicates that this restoring force acts in the negative direction when the displacementof the tine is in the positive xdirection (i.e., it acts to pull the tine back toward the neutral
position).
Now this restoring force due to stiffness produces an acceleration as dictated by
Newton’s second law, which states
F=ma=md
2x
dt2
where mis the mass of the tine, and the second derivative with respect to time of position
xis the acceleration of the mass along the x-axis. Since these two forces must balance
7The generation and propagation of sound are treated in any general college physics text.
56 CHAPTER 2 SINUSOIDS
each other (i.e., the sum of the forces is zero), we get a second-order differential equation
that describes the motion x(t) of the tine for all values of time t
md2x(t)
dt2=−k x(t) (2.24)
This particular differential equation is rather easy to solve, because we can, in fact,
guess the solution. From the derivative properties of sine and cosine functions, we aremotivated to try as a solution the function
x(t)=Acosω
0t
where the parameter ω0is a constant that must be determined. The second derivative of
x(t) is
d2x(t)
dt2=d2
dt2(Acosω0t)
=d
dt(−ω 0Asinω0t)
=−ω2
0Acosω0t
Notice that the second derivative of the cosine function is the same cosine functionmultiplied by a constant (−ω
2
0). Therefore, when we substitute x(t) into (2.24), we get
md2x(t)
dt2=−k x(t)
−mω2
0Acosω0t=−kAcosω0t
Since this equation must be satisﬁed for all t, it follows that the coefﬁcients of cos ω0ton
both sides of the equation must be equal, which leads to the following algebraic equation
−mω2
0=−k
This equation can be solved for ω0, obtaining
ω0=±/radicalbigg
k
m(2.25)
Therefore, we conclude that one solution of the differential equation is
x(t)=Acos/parenleftBigg/radicalbigg
k
mt/parenrightBigg
From our model, x(t) describes the motion of the tuning-fork tine. Therefore, we
conclude that the tines oscillate sinusoidally. This motion is, in turn, transferred to theparticles of air in the locality of the tines, thereby producing the tiny sinusoidal variationsin air pressure that make up an acoustic wave. The formula for the frequency lets us drawtwo conclusions:
2-7 PHYSICS OF THE TUNING FORK 57
(a) Of two tuning forks having the same mass, the stiffer one will produce a higher
frequency. This is because the frequency is proportional to√
k, which is in the
numerator of (2.25).
(b) Of two tuning forks having the same stiffness, the heavier one will produce a lower
frequency. This is because the frequency is inversely proportional to the square
root of the mass,√m, which is in the denominator of (2.25).DEMO
Tuning Fork
2-7.2 General Solution to the Differential Equation
There are many possible solutions to the tuning-fork differential equation (2.24). We can
prove that the following function
x(t)=Acos(ω 0t+ϕ)
will satisfy the differential equation (2.24) by substituting back into (2.24), and takingderivatives. Once again the frequency must be ω
0=√k/m. Only the frequency ω0is
constrained by our simple model; the speciﬁc values of the parameters Aandϕare not
important. From this we can conclude that any scaled or time-shifted sinusoid with thecorrect frequency will satisfy the differential equation that describes the motion of thetuning fork’s tine. This implies that an inﬁnite number of different sinusoidal waveformscan be produced in the tuning-fork experiment. For any particular experiment, Aandϕ
would be determined by the exact strength and timing of the sharp force that gave the tineits initial displacement. However, the frequency of all these sinusoids will be determinedonly by the mass and stiffness of the tuning-fork metal.
EXERCISE 2.9 Demonstrate that a complex exponential signal can also be a solution to the tuning-
fork differential equation:
d2x
dt2=−k
mx(t)
By substituting z(t)andz∗(t)into both sides of the differential equation, show that
the equation is satisﬁed for all tby both of the signals
z(t)=Xejω0tand z∗(t)=X∗e−jω 0t
Determine the value of ω0for which the differential equation is satisﬁed.
The tuning fork and its oscillatory behavior is just one example of simple harmonic
motion where a sinusoid is an excellent description of motion in a physical system. The
same mathematics comes up in the description of a mass on a spring, a simple pendulum,and even molecular vibration and many other physical phenomena.
58 CHAPTER 2 SINUSOIDS
2-7.3 Listening to Tones
The observer is an important part of any physical experiment.This is particularly true when
the experiment involves listening to the sound produced. In the tuning-fork experiment,
we perceive a tone with a certain pitch (related to the frequency) and loudness (relatedto the amplitude). The human ear and neural processing system respond to the frequencyand amplitude of a sustained sound like that produced by the tuning fork, but the phaseis not perceptible. This is because phase depends on an arbitrary deﬁnition of the startingtime of the sinusoid, for example, a sustained tone sounds the same now as it did 5 minutesago. On the other hand, we could pick up the sound with a microphone and sample ordisplay the signal on an oscilloscope. In this case, it would be possible to make precisemeasurements of frequency and amplitude, but phase would be measured accurately onlywith respect to the time base of the sampler or the oscilloscope.
2-8 Time Signals: More Than Formulas
The purpose of this chapter has been to introduce the concept of a sinusoid and to illustrate
how sinusoidal signals can arise in real situations. Signals, as we have deﬁned them, arevarying patterns that convey or represent information, usually about the state or behaviorof a physical system. We have seen by both theory and observation that a tuning forkgenerates a signal that can be represented mathematically as a sinusoid. In the context ofthe tuning fork, the sinusoidal wave conveys and represents information about the state ofthe tuning fork. Encoded in the sinusoidal waveform is information such as whether thetuning fork is vibrating or at rest, and, if it is vibrating, the frequency and the amplitudeof its vibrations. This information can be extracted from the signal by human listeners,or it can be recorded for later processing by either humans or computers. Another simplephysical system that also generates nearly sinusoidal waveforms is shown in the Clay
Whistle demo on the web site.
DEMO
Clay Whistle
Although the solution to the differential equation of the tuning fork (2.24) is a
sinusoidal function, the resulting mathematical formula is simply a model that resultsfrom an idealization of the tuning fork. It is important to recall that the sound signalis a separate entity from the formula. The actual waveform produced by a tuningfork is probably not exactly sinusoidal. The signal is represented by the mathematical
formula x(t)=Acos(ω
0t+ϕ), which can be derived from an idealized model based on
physical principles. This model is a good approximation of reality, but an approximationnevertheless. Even so, this model is extremely useful since it leads directly to a usefulmathematical representation of the signal produced by the tuning fork.
In the case of complicated signals generated by several musical instruments, the
signal cannot be so easily reduced to a mathematical formula. Figure 2-18 shows ashort segment of a recording of orchestra music. Just the appearance of the waveformsuggests a much more complex situation. Although it oscillates like a sinusoid, it clearlyis not periodic (at least, as far as we can see from the given segment). Orchestra musicconsists of many instruments sounding different notes in unison. If each instrument
2-9 SUMMARY AND LINKS 59
0 10 20 30 40 50 60 70 80 90 10000.20.4
Time t(ms)Amplitude
0:2
0:4
Figure 2-18 A short segment of an orchestra
music signal.
produced a pure sinusoidal tone at the frequency of the note that is assigned to it, then the
composite orchestra signal would be simply a sum of sinusoids with different frequencies,amplitudes, and phases. While this is far from being a correct model for most instruments,it is actually a highly appropriate way to think about the orchestra signal. In fact, we willsee very soon that sums of sinusoids of different frequencies, amplitudes, and phases canresult in an inﬁnite variety of waveforms. Indeed, it is true that almost any signal canbe represented as a sum of sinusoidal signals. When this concept was ﬁrst introducedby Jean-Baptiste Joseph Fourier in 1807, it was received with great skepticism by thefamous mathematicians of the world. Nowadays, this notion is commonplace (althoughno less remarkable). The mathematical and computational techniques of Fourier analysisunderlie the frequency-domain analysis tools used extensively in electrical engineeringand other areas of science and engineering.
2-9 Summary and Links
We have introduced sinusoidal signals in this chapter. We have attempted to show
that they arise naturally as a result of simple physical processes and that they canbe represented by familiar mathematical functions, and also by complex exponentials.
The value of the mathematical representation of a signal is twofold. First, the
mathematical representation provides a convenient formula to consistently describe thesignal. For example, the cosine signal is completely described in terms of just threeparameters. Second, by representing both signals and systems through mathematicalexpressions, we can make precise statements about the interaction between signals andsystems.
LAB
Introduction to
MATLAB
In connection with this chapter, two laboratories are found on the CompanionWebsite.
The ﬁrst lab involves some introductory exercises on the basic elements of the MATLAB
programming environment, and its use for manipulating complex numbers and plotting
sinusoids. Appendix B is also available for a quick overview of essential ideas aboutMATLAB. Labs on Complex Exponentials deal with sinusoids and phasor addition. In
LAB
Complex Exponentials these labs, students must re-create a phasor addition demonstration similar to Fig. 2-15.Copies of the lab write-ups are also found on the website.
60 CHAPTER 2 SINUSOIDS
On the Companion Website one can also ﬁnd the following resources:
DEMO
Tuning Fork and Clay
Whistle(a) A tuning-fork movie that shows the experiment of striking the tuning fork and
recording its sound. Several recorded sounds from different tuning forks are
available, as well as sounds from clay whistles.
(b) The drill program called sindrill in MATLAB can be used to practice with the
amplitude, phase, and frequency of sinusoidal plots.
(c) A set of movies showing rotating phasor(s) and how they generate sinusoids through
the real part operator. DEMO
Sine Drill
2-10 Problems
The problems in this section address the major concepts of this chapter. On the Companion
Website there are many related homework problems which can be used to review and
practice. Most of them have detailed solutions.
NOTE
Problems with SolutionsP-2.1 Deﬁne x(t) as
x(t)=3 cos(0 .2πt−0.25π)
Make a plot of x(t) over the range −10≤t≤20.
P-2.2 Figure P-2.2 is a plot of a sinusoidal wave. From the plot, determine values for
the amplitude (A), phase (φ), and frequency (ω0)needed in the representation:
x(t)=Acos(ω 0t+φ)
Give the answer as numerical values, including the units where applicable.
–20 –10 0 10 20 30 40–20–1001020
Time t(msec)x(t)
Figure P-2.2
P-2.3 Make a carefully labeled sketch for each of the following functions:
(a) Sketch cos θfor values of θin the range 0 ≤θ≤6π.
(b) Sketch cos(0 .2πt)for values of tsuch that three periods of the function are shown.
(c) Sketch cos (2πt/T 0+π/2)for values of tsuch that three periods of the function
are shown. Label the horizontal axis in terms of the parameter T0.
2-10 PROBLEMS 61
P-2.4 Use the series expansions for ex, cos(θ), and sin (θ)given here to verify Euler’s
formula.
ex=1+x+x2
2!+x3
3!+···
cos(θ) =1−θ2
2!+θ4
4!+···
sin(θ)=θ−θ3
3!+θ5
5!+···
P-2.5 Use complex exponentials (i.e., phasors) to show the following trigonometric
identities:
(a) cos(θ 1+θ2)=cos(θ 1)cos(θ 2)−sin(θ1)sin(θ2)
(b) cos(θ 1−θ2)=cos(θ 1)cos(θ 2)+sin(θ1)sin(θ2)
Hint: Write the left-hand side of each equation as the real part of a complex
exponential.
P-2.6 Use Euler’s formula for the complex exponential to prove DeMoivre’s formula
(cosθ+jsinθ)n=cosnθ+jsinnθ
Use it to evaluate/parenleftbig3
5+j4
5/parenrightbig100.
P-2.7 Simplify the following expressions:
(a) 3ejπ/3+4e−jπ/ 6
(b)/parenleftBig√
3−j3/parenrightBig10
(c)/parenleftBig√
3−j3/parenrightBig−1
(d)/parenleftBig√
3−j3/parenrightBig1/3
(e)/Rfractur/braceleftbig
je−jπ/ 3/bracerightbig
Give the answers in both Cartesian form (x+jy)and polar form (rejθ).
P-2.8 Suppose that MATLAB is used to plot a sinusoidal signal. The following
MATLAB code generates the signal and makes the plot. Derive a formula for the signal;
then draw a sketch of the plot that will be done by MATLAB.
dt = 1/100;
t t=- 1:d t:1 ;F o=2 ;zz = 300*exp(j*(2*pi*Fo*(tt - 0.75)));xx = real( zz );%plot( tt, xx ), grid ontitle( ’SECTION of a SINUSOID’ )xlabel(’TIME (sec)’)
62 CHAPTER 2 SINUSOIDS
P-2.9 For the sinusoidal waveform shown in Fig. P-2.9, determine the complex phasor
representation
X=Aejϕ
by ﬁnding values of the parameters ω0,ϕ, andAsuch that the waveform is represented by
x(t)=/Rfractur {Xejω0t}
0 2 4 6 80369
Time t(ms)x.t/
3
6
9
2 4 6 8
Figure P-2.9
P-2.10 Deﬁne x(t) as
x(t)=2 sin(ω0t+π/4)+cos(ω 0t)
(a) Express x(t) in the form x(t)=Acos(ω 0t+φ).
(b) Find a complex-valued signal z(t)such that x(t)=/Rfracture{z(t)}.
P-2.11 Deﬁne x(t) as
x(t)=5 cos(ωt) +5 cos(ωt +120◦)+5 cos(ωt −120◦)
Simplify x(t) into the standard sinusoidal form: x(t)=Acos(ωt +φ). Use phasors to
do the algebra, but also provide a plot of the vectors representing each of the three
phasors.
P-2.12 Solve the following equation for θ:
/Rfracture{(1+j)ejθ}=− 1
Give the answers in radians. Make sure that you ﬁnd allpossible answers.
P-2.13 Deﬁne the following complex exponential signal:
(t)=5ejπ/3ej10πt
2-10 PROBLEMS 63
(a) Make a plot of r(t)=/Rfractur {js(t)}. Pick a range of values for tthat will include
exactly three periods of the signal.
(b) Make a plot of q(t)=/Rfractur {d
dts(t)}, showing plot three cycles of the signal. DEMO
Rotating Phasors
P-2.14 Two sinusoidal signals are deﬁned as
x1(t)=√
5 cos(7t −π/3)x 2(t)=√
5 cos(7t +π)
and their sum is denoted by x(t)=x1(t)+x2(t).
(a) Find a complex-valued signal z1(t)such that x1(t)=/Rfractur {z1(t)}.
(b) Find a complex-valued signal z2(t)such that x2(t)=/Rfractur {z2(t)}.
(c) Find a complex-valued signal z(t)such that x(t)=/Rfractur {z(t)}.
P-2.15 Deﬁne x(t) as
x(t)=5 cos(ωt +3)+7 cos(ωt −5)+3 cos(ωt)
where the phases have units of radians. Express x(t) in the form x(t)=Acos(ωt +φ).
Use complex phasor manipulations to obtain the answer. Explain your answer by giving
a phasor diagram.
P-2.16 The phase of a sinusoid can be related to time shift as follows:
x(t)=Acos(2πf0t+ϕ)=Acos(2πf0(t−t1))
In the following parts, assume that the period of the sinusoidal wave is T0=8s .
(a) “When t1=−2 s, the value of the phase is ϕ=π/2.” Explain whether this is True
or False.
(b) “When t1=3 s, the value of the phase is ϕ=3π/4.” Explain whether this is True
or False.
(c) “When t1=7 s, the value of the phase is ϕ=π/4.” Explain whether this is True
or False.
P-2.17 Deﬁne a signal as x(t)=4/summationdisplay
k=0cos(ωt +2
5πk)
(a) Convert the sum to its phasor representation and then plot the phasors as vectors
in the complex plane. Notice that vectors are distributed in a fashion similar to the
roots of unity (see Appendix A), but one is missing.
(b) Express x(t) in the form x(t)=Acos(ωt +ϕ)by ﬁnding the numerical values of
Aandϕ.
64 CHAPTER 2 SINUSOIDS
P-2.18 Determine the values of the parameters {ω,ϕ,A }in the equations below.
(a) 9 cos(ωt +ϕ)=Ae(j8t+jϕ)+Ae(−j8t+j2π/3)
(b) 10 cos(9t −π/3)=Acos(ωt −π/2)+5 cos(ωt +ϕ)
P-2.19 Sinusoidal equations can be solved as algebraic equations if the sinusoids are
converted to phasors. For example, given the equation
9 cos(2 t+1
2)=3Acos(2(t−1)+ϕ)+4 cos(2 t)
solve for Aandϕ. Here are the steps:
(a) Determine the phasor representation for each term in the above equation.
(b) Let z=Aejϕ, and rewrite the phasor equation in part (a) as
9ej0.5=(3e−j2)z+4
(c) Use algebra to solve for z, which will be complex.
(d) Finally, express the answer zinpolar form in order to determine the values for A
andϕ.
P-2.20 Simultaneous sinusoidal equations can be solved as simultaneous algebraic
equations once the sinusoids are converted to phasors. Consider the following two
equations with unknowns A1,ϕ1,A2, andϕ2:
cos(7t) =A1cos(7t +ϕ1)+A2cos(7t +ϕ2)
sin(7t)=2A1cos(7t +ϕ1)+A2cos(7t +ϕ2)
(a) Determine the phasor representation for each term in the above equations.
(b) Let z1=A1ejϕ1andz2=A2ejϕ2, and then rewrite the two phasor equations in part
(a) as
1=z1+z2
−j=2z1+z2
(c) Use algebra to solve for z1andz2, which will be complex numbers.
(d) Finally, express the answers z1andz2inpolar form in order to determine the values
forA1,ϕ1,A2, andϕ2.
P-2.21 Solve the following two simultaneous sinusoidal equations with unknowns A1,
ϕ1,A2, andϕ2:
cos(3(t −1))=4A1sin(3t+ϕ1)+A2cos(3t +ϕ2)
sin(3t+2)=3A1sin(3t+ϕ1)+A2cos(3t +ϕ2)
2-10 PROBLEMS 65
(a) Convert to phasors, z1andz2, and determine the answers for A1,ϕ1,A2, andϕ2
from the polar forms for the phasors z1andz2.
(b) Provide two geometrical diagrams to explain the answer by plotting the vectors
4z1,z2, and 4 z1+z2, as well as the vectors 3z 1,z2,a s3z1+z2.
P-2.22 Solve the following equation for Mandψ. Obtain allpossible answers. Use the
phasor method, and provide a geometrical diagram to explain the answer.
5 cos(ω 0t)=Mcos(ω 0t−π/6)+5 cos(ω 0t+ψ)
Hint: Describe the ﬁgure in the z-plane given by the set {z:z=5ejψ−5}where 0 ≤
ψ≤2π.
P-2.23 Complex exponentials obey a simple rule for the operation of time shifting:
the complex amplitude experiences a phase change. Consider the complex signal z(t)=
Zej10πtwhere Z=7ej0.3π.
(a) The time-shifted version of z(t)can be represented as a new complex exponential
with complex amplitude W. Thus, z(t−td)=w(t)=Wej10πt. Determine the
complex amplitude Wwhentd=0.24 s.
(b) Suppose that y(t) is a different time-shifted version of z(t), and its complex
amplitude is Y=7e−j0.1π. Determine the smallest positive value for the time shift
tdsuch that y(t)=z(t−td).
P-2.24 Letx[n]be a sequence of complex numbers deﬁned as
x[n]=7ej(0.22πn−0.25π)
for integers nsuch that −∞<n<∞. If we deﬁne a new sequence y[n]as follows
y[n]=x [n+1]−2 x[n]+x [n−1]for all n
it is possible to express y[n]in the form y[n]=Aejϕejˆω0n.
(a) Determine the frequency ˆω0in the expression for y[n].
(b) Determine the values of Aandϕ.
P-2.25 Complex exponentials obey the expected rules of calculus and algebra when
doing operations such as integrals and derivatives. Consider the complex signal z(t)=
Zej2πtwhere Z=ejπ/4.
(a) Show that the ﬁrst derivative of z(t)with respect to time can be represented as a
new complex exponential Qej2πt, such thatd
dtz(t)=Qej2πt. Determine the value
for the complex amplitude Q.
66 CHAPTER 2 SINUSOIDS
(b) Plot both ZandQin the complex plane. How much greater (or smaller) is the
angle of Qthan the angle of Z?
(c) Compare /Rfractur{d
dtz(t)}tod
dt/Rfractur{z(t) }for the given signal z(t). Do you think that this
would be true for any complex exponential signal?
(d) Evaluate the deﬁnite integral of z(t)over the range −0.5≤t≤0.5:
0.5/integraldisplay
−0.5z(t)dt =?
Express your answer in polar form. Note that integrating a complex quantity follows
the expected rules of algebra: You could integrate the real and imaginary partsseparately, but it is much easier to use the integration formula for an exponential
directly on z(t).
P-2.26 Determine two different frequencies for the complex-valued solutions x(t)=
Xe
jωtof the following differential equation:
d2x(t)
dt2=−289x(t)
P-2.27 As noted in Section 2-7, the tuning fork is one example of simple harmonic
motion, because the vibration is governed by a second-order differential equation (2.24).
There are many other physical phenomena that can be modeled by simple harmonic
motion, and one important case is the electric circuit comprised of an inductor and acapacitor as shown in Fig. P-2.27. To derive the differential equation, it will be necessary toapply a bit of electric circuit theory. Observe that the inductor and capacitor are connectedin what is called a parallel connection with the same voltage v(t) across both elements.
Also, note that the current i(t)is (arbitrarily) deﬁned to ﬂow in the clockwise direction
around the loop going through the terminals of the two elements. Thus, for the deﬁnitionsofv(t) andi(t)in Fig. P-2.27, the capacitor (C)and inductor (L)are characterized by
the following relations:
i(t)=Cdv
dtandv(t)=−Ldi
dt
C Li(t)
v(t)+
Figure P-2.27
2-10 PROBLEMS 67
The minus sign is needed for the inductor equation because the direction of the assumed
current ﬂow is from negative to positive voltage through L.
(a) Use the fact that the voltage v(t) is the same across both elements as shown in
Fig. P-2.27 to combine the two equations above and show that the voltage satisﬁes
the differential equation
d2v(t)
dt2=−1
LCv(t) (2.26)
(b) Compare (2.26) to the differential equation (2.24) for the tuning fork. Since the
form is the same, we should expect the voltage in the circuit of Fig. P-2.27 to displaysimple harmonic motion behavior. After comparing terms with (2.25), determinethe frequency of the harmonic oscillation of the voltage v(t).
(c) By substitution, show that v(t)=Acos(ω
0t+ϕ)is a solution to (2.26), and
in the process, determine ω0in terms of the element values LandC.I n
general, the coefﬁcients Aandϕcan be chosen to match initial conditions in the
circuit.
(d) Suppose that A=5 andϕ=π/3 for the voltage v(t)in the previous part. Use the
capacitor relation above to obtain the current i(t)fromv(t), and then determine
the phase difference between v(t) andi(t).
(e) For the current obtained in the previous part, show that i(t)satisﬁes the same
harmonic differential equation as v(t), that is,
d2i(t)
dt2=−1
LCi(t) (2.27)
P-2.28 In a mobile radio system (e.g., cell phones), there is one type of degradation
that can be modeled easily with sinusoids. This is the case of multipath fading caused by
reﬂections of the radio waves interfering destructively at some locations. Suppose that atransmitting tower sends a sinusoidal signal, and a mobile user receives not one but twocopies of the transmitted signal: a direct-path transmission and a reﬂected-path signal(e.g., from a large building) as depicted in Fig. P-2.28.
The received signal is the sum of the two copies, and since they travel different
distances they have different time delays. If the transmitted signal is s(t), then the received
signal
8is
r(t)=s(t−t1)+s(t−t2)
8For simplicity we are ignoring propagation losses: When a radio signal propagates over a distance R,
its amplitude will be reduced by an amount that is proportional to 1/R2.
68 CHAPTER 2 SINUSOIDS
0REFLECTOR TRANS-
MITTER
Velocity = c
VEHICLExy
(dr , dt)(0, dt)
Figure P-2.28
In a mobile phone scenario, the distance between the mobile user and the cell tower is
always changing. If dt=1000 m, then the direct-path distance is
d1=/radicalbig
x2+106(meters)
where xis the position of a mobile user who is moving along the x-axis. Assume that the
reﬂector is at dr=55 m, so the reﬂected-path distance is
d2=/radicalbig
(x−55)2+106+55 (meters)
(a) The amount of the delay (in seconds) can be computed for both propagation paths,
using the fact that the time delay is the distance divided by the speed of light(3×10
8m/sec). Determine t1andt2as a function of the mobile’s position (x).
(b) Assume that the transmitted signal is
s(t)=cos(300 ×106πt)
Determine the received signal when x=0. Prove that the received signal is a
sinusoid and ﬁnd its amplitude, phase, and frequency when x=0.
(c) The amplitude of the received signal is a measure of its strength. Show that as the
mobile user moves, it is possible to ﬁnd positions where the signal strength is zero.Find one such location.
(d) If you have access to MATLAB, write a script that will plot signal strength versus
position x, thus demonstrating that there are numerous locations where no signal
is received. Use xin the range −100 ≤x≤100.
CHAPTER
3
Spectrum
Representation
This chapter introduces the concept of the spectrum of a signal—a compact representation
of the frequency content of a signal that can be represented as a sum of sinusoids.
In Chapter 2, we learned about the properties of sinusoidal waveforms that can berepresented by
x(t)=Acos(2πf
0t+ϕ)=/Rfractur/braceleftbig
Xej2πf0t/bracerightbig
(3.1)
Note that because we know the functional form, the waveform x(t) in (3.1) is deﬁned
for all tby only three numbers: the amplitude, A, the frequency, f0, and the phase, ϕ.
In Chapter 2 we deﬁned the complex amplitude X=Aejϕand called it a phasor. The
sinusoidal waveform of (3.1) is a good mathematical model for the voltages and currentsfound in electrical power networks. In the study of electric circuits, phasors are usefulsince they can simplify the addition of sinusoids having the same frequency. However,
the phasor concept can be generalized and provides the basis for representing many othertypes of signals besides the electrical voltage at the wall plug.
In this chapter, we will show how more complicated waveforms can be represented
as sums of sinusoids having different frequencies and corresponding different amplitudes
69
70 CHAPTER 3 SPECTRUM REPRESENTATION
and phases (or phasors). The spectrum of such a multi-frequency signal is deﬁned simply
as the collection of amplitude, phase, and frequency information that allows us to representa signal in such a way.
1We will show that it is useful to depict the corresponding spectrum
information in a graphical representation with complex amplitude plotted as a functionof frequency. This visual representation of the spectrum allows us quickly and easily tosee interrelationships among spectral components of different frequencies. As a result,this visual representation of the signal is invaluable in understanding how signals can bemodiﬁed by operations on signals.
3-1 The Spectrum of a Sum of Sinusoids
One of the reasons that sinusoids are so important for our study is that they are the basicbuilding blocks for representing more complicated signals. In this chapter we will showsome extraordinarily complicated-looking waveforms that can be constructed from rathersimple combinations of basic cosine waves. The most general and powerful method forproducing new signals from sinusoids is the additive linear combination, where a real
signal is created by adding together a constant and Nsinusoids, each with a different
frequency, amplitude, and phase. If the signal is real, it may be represented by the right-hand side in
x(t)=A
0+N/summationdisplay
k=1Akcos(2πfkt+ϕk) (3.2)
where, in the most general case, each amplitude, phase, and frequency2may be chosen
independently. Such a signal may also be represented using complex exponentials andcomplex amplitudes for the individual sinusoidal components, that is,
x(t)=X
0+N/summationdisplay
k=1/Rfractur/braceleftbig
Xkej2πfkt/bracerightbig
(3.3)
where X0=A0represents a real constant component, and each complex amplitude
Xk=Akejϕk
represents the magnitude and phase of a rotating phasor whose frequency is fk.
The inverse Euler formula gives a way to represent x(t) in (3.3) in yet another
alternative form
x(t)=X0+N/summationdisplay
k=1/braceleftbiggXk
2ej2πfkt+X∗
k
2e−j2πfkt/bracerightbigg
(3.4)
1The term spectrum is used in many ways—often without precise deﬁnition. Our use of the term is
clearly deﬁned in terms of sums of sinusoids or complex exponentials. Other usage of the term may be less
precise, but still appropriate when signals are thought of as being composed of sinusoidal components.
2For this chapter, we prefer cyclic frequency fkto radian frequency ωk=2πfk, because it is easier and
more natural to describe physical quantities such as musical notes in Hz.
3-1 THE SPECTRUM OF A SUM OF SINUSOIDS 71
As in the case of individual sinusoids, this form follows from the fact that the real part of
a complex number is equal to one-half the sum of that number and its complex conjugate.
Equation (3.4) also shows that each sinusoid in the sum decomposes into two rotatingphasors, one with positive frequency, f
k, rotating in the counter-clockwise direction, and
the other with negative frequency, −fk, rotating in the clockwise direction.
The signal representation in (3.4) is called the two-sided spectrum because it uses
2N+1positive and negative frequencies along with the corresponding 2 N+1 complex
amplitudes to specify a signal composed of sinusoids (3.2). To be speciﬁc, our deﬁnitionof the spectrum is the set of pairs
/braceleftbigg
(0,X
0),/parenleftbig
f1,1
2X1/parenrightbig
,/parenleftbig
−f 1,1
2X∗
1/parenrightbig
,...,/parenleftbig
fk,1
2Xk/parenrightbig
,/parenleftbig
−fk,1
2X∗
k/parenrightbig
,.../bracerightbigg
(3.5)
Each pair (fk,1
2Xk)indicates the size and relative phase of the complex exponential
component contributing at frequency fk. It is common to refer to the spectrum as
thefrequency-domain representation of the signal. In contrast, the time-domain
representation gives the values of the time waveform itself, whereas the frequency-
domain representation simply gives the information required to synthesize it with (3.4).
When the number of components is small and the frequencies are spaced widely, the
spectrum is a compact representation of the signal x(t). In such cases, it is common to
refer to the spectrum as being sparse, meaning consisting of only a few components.
In Chapter 7 we will generalize the spectrum concept to include a dense continuum offrequencies. In this case, the spectrum is called the discrete-time Fourier transform.
EXAMPLE 3-1 Two-Sided Spectrum
To determine the spectrum of the following signal,
x(t)=10+14 cos(200 πt−π/3)+8 cos(500 πt+π/2)
which is the sum of a constant and two sinusoids, we must convert from the general formin (3.2) to the two-sided form in (3.4). After we apply the inverse Euler formula, we getthe following ﬁve terms:
x(t)=10+7e
−jπ/ 3ej2π(100)t+7ejπ/3e−j2π(100)t
+4ejπ/2ej2π(250)t+4e−jπ/ 2e−j2π(250)t(3.6)
Note that the constant component of the signal, often called the DC component ,3can
be expressed as a complex exponential signal with zero frequency (i.e., 10 ej0t=10).
Therefore, in the list form suggested in (3.5), the spectrum of this signal is the set of ﬁve
rotating phasors represented by the frequency/complex amplitude pairs
/braceleftbig
(0,10), (100 ,7e−jπ/ 3), (−100 ,7ejπ/3), (250 ,4ejπ/2), (−250 ,4e−jπ/ 2)/bracerightbig
3The terminology “DC” comes from electric circuits, where a constant value of current is called direct
current, or DC. It is common to call X0=A0the DC component of the spectrum. Since the DC component
is constant, its frequency is f=0.
72 CHAPTER 3 SPECTRUM REPRESENTATION
3-1.1 Notation Change
The relationship between Xkand the spectrum involves special cases because the factor of
1
2multiplies every Xkin the spectrum (3.5), except for X0. The companion formulas such
as (3.4) are cumbersome. Therefore, we introduce akas a new symbol for the complex
amplitude in the spectrum, and deﬁne it as follows:
ak=/braceleftBigg
A0 fork=0
1
2Akejϕkfork/negationslash=0(3.7)
This allows us to say that the spectrum is the set of (fk,ak)pairs. The primary motivation
for this notational change is to simplify the formulas for the Fourier series coefﬁcients
developed later in Section 3-5. For example, (3.4) can now be written as a single compactsummation
x(t)= N/summationdisplay
k=−Nakej2πfkt(3.8)
where we have deﬁned f0=0.
3-1.2 Graphical Plot of the Spectrum
A plot of the spectrum is much more revealing than the list of (fk,ak)pairs. Each
frequency component can be represented by a vertical line at the appropriate frequency,and the length of the line can be drawn proportional to the magnitude, |a
k|. This is shown
in Fig. 3-1 for the signal in (3.6). Each spectral line is labeled with the value of akto
complete the information needed to deﬁne the spectrum.
This simple but effective plot makes it easy to see two things: the relative location of
the frequencies, and the relative amplitudes of the sinusoidal components. This is why thespectrum plot is widely used as a graphical representation of the signal. As we will see inChapters 4 and 6, the frequency-domain representation is exceedingly useful because itis often very easy to see how systems affect a signal by determining what happens to thesignal spectrum as it is transmitted through the system. This is why the spectrum is thekey to understanding sophisticated signal processing systems such as radios, televisions,cell phones, MP3 players, and the like.
In a spectrum like Fig. 3-1, the complex amplitude of each negative frequency
component is the complex conjugate of the complex amplitude at the correspondingpositive frequency component. This property is called conjugate symmetry. The spectrum
is conjugate symmetric whenever x(t) is a real signal, because the complex rotating
phasors at f
kand−fkin (3.4) rotate in opposite directions and must combine to form a
real signal (see Fig. 2-13(b) and the Rotating Phasors movie found on the website).DEMO
Rotating Phasors
Spectra of signals comprised of individual sinusoids are often called “line spectra.”
The term “line” seems appropriate for us here because we plot the components as
vertical lines positioned at the individual frequencies. However, the term originated
3-1 THE SPECTRUM OF A SUM OF SINUSOIDS 73
0 100 250 100 250 f7e=37e=3
4e=24e=210 Figure 3-1 Spectrum plot for the signal
x(t)=10+14 cos(200 πt−π/3)+8 cos(500 πt+π/2).
Units of frequency (f )are Hz. Negative
frequency components should be included for
completeness, even though for real signals, theyare conjugates of the corresponding positivefrequency components.
in physics where lines are observed in emission or absorption spectra formed with
optical prisms (which serve as optical spectrum analyzers). These lines correspond toenergy being emitted or absorbed at wavelengths that are characteristic of differentatoms or ions. This is illustrated in Fig. 3-2, which shows how the frequency spectrumof white light from a star (assumed to contain all frequencies with essentially thesame amplitude) is modiﬁed by transmission through the atmosphere of an exoplanet.
The plot shows that the spectrum of white light is modiﬁed by absorption of certain
frequencies. This example illustrates how modiﬁcation of signals by an operation onthat signal can be easily represented and understood in terms of the spectrum of thatsignal.
3-1.3 Analysis versus Synthesis
In the context of the spectrum, synthesis is the process of using the frequency-domainrepresentation (i.e., the spectrum) to create the time-domain representation (i.e., thewaveform x(t)). Analysis, on the other hand, is an operation on the time-domain signal
that produces the frequency-domain spectrum. As described so far, both operations seemrelatively easy, but a general procedure for computing and plotting the spectrum foran arbitrarily chosen signal requires the study of Fourier analysis, for example, FourierSeries in Section 3-5 and Appendix C, as well as Fourier transforms of discrete signalsin Chapters 7 and 8.
Figure 3-2 Illustration of spectrum analysis of white light transmitted through the atmosphere
of exoplanet HD 209458. (NASA photo). For a color version of this picture, see
http://science.nasa.gov/science-news/science-at-nasa/2001/ast27nov 1/
74 CHAPTER 3 SPECTRUM REPRESENTATION
Up to this point, we have treated the special case where we can assume that the
signal of interest is the sum of a constant and a ﬁnite number of sinusoids. The synthesis
procedure is relatively easy when starting from a plot like Fig. 3-1. The values of
(fk,ak)can be extracted from the spectrum plot, and (3.8) can be used to calculate
the signal values in the time domain. When the signal is deﬁned by a mathematical
formula consisting of a sum of sinusoids as in (3.2), the analysis procedure is also
straightforward. Each sinusoid in the mathematical formula (3.2) is expressed as twocomplex exponentials by using the inverse Euler relation to get a form like (3.4). Thenthe spectrum values can be extracted by noting the frequencies and their correspondingcomplex amplitudes. Such a simple analysis procedure rarely applies in practice. Forexample, if the signal were a recording of human speech, there is no mathematicalformula for the signal values and the analysis problem becomes much more difﬁcult.However, the basic concepts of analysis to obtain the spectrum and synthesis to constructthe time signal are very general, and they will show up repeatedly throughout thisbook.
Before tackling the case of Fourier series for periodic signals, we show examples
where the sum of just a few sinusoids can be used to synthesize audio signalswhose waveforms are much different from sinusoids and are interesting to hear.
The relationship between the time waveform and the spectrum will be emphasized.
In some examples that we will show, the time waveform appears to be verycomplicated while the spectrum is sparse and relatively simple and therefore easy tounderstand.
3-2 Sinusoidal Amplitude Modulation
So far we have considered signals that can be represented as sums of sinusoids of differentfrequencies, but another useful mathematical signal model is the product of sinusoids.
When we multiply two sinusoids having different frequencies, we can create an interesting
audio effect called a beat note. The phenomenon, which may sound like a warble, is
best heard by picking one of the frequencies to be very small (e.g., 10 Hz), and the
LAB
AM and FM
Sinusoidal Signalsother around 1 kHz. Some musical instruments naturally produce beating tones. Another
common situation where sinusoidal multiplication is used is radio broadcasting. In thiscase, the multiplication is called amplitude modulation (AM), hence the name AM radio
for some broadcast stations.
3-2.1 Multiplication of Sinusoids
A signal produced by multiplying two sinusoids must be rewritten as a sum in order to
obtain its spectrum, because our spectrum is a graphical representation of an additive
linear combination of complex exponential signals. Other mathematical combinations ofsinusoids would also have to be rewritten in the additive form in order to display theirspectrum representation. This is illustrated by the following example.
3-2 SINUSOIDAL AMPLITUDE MODULATION 75
EXAMPLE 3-2 Spectrum of a Product Signal
For the special case of a signal formed as the product of two sinusoids with frequencies
1
2Hz and 5 Hz
x(t)=cos(πt) sin(10πt) (3.9)
it is necessary to rewrite x(t) as a sum before its spectrum can be deﬁned. One approach
is to use the inverse Euler formula as follows:
x(t)=/parenleftbiggejπt+e−jπt
2/parenrightbigg/parenleftbiggej10πt−e−j10πt
2j/parenrightbigg
(3.10a)
=1
4e−jπ/ 2ej11πt+1
4e−jπ/ 2ej9πt+1
4ejπ/2e−j9πt+1
4ejπ/2e−j11πt(3.10b)
=1
2cos(11πt −π/2)+1
2cos(9πt −π/2) (3.10c)
In this derivation, we see four terms in the additive combination (3.10b), so there are four
spectrum components at frequencies ±11π and±9π rad/s, which convert to hertz as 5.5,
4.5,−4.5, and −5.5 Hz. The magnitude is the same (1
4) for all four components. It is also
worth noting that neither of the original frequencies (5 Hz and1
2Hz) used to deﬁne x(t)
in (3.9) appear in the spectrum.
EXERCISE 3.1 Letx(t)=sin2(10πt). Find an additive combination in the form of (3.8) for x(t), and
then plot the spectrum. Count the number of frequency components in the spectrum.
What is the highest frequency contained in x(t)? Use the inverse Euler formula rather
than a trigonometric identity to obtain the additive form.
DEMO
Spectrograms of Simple
Sounds3-2.2 Beat Note Waveform
Beat notes4are produced by adding two equal-amplitude sinusoids with nearly identical
frequencies. The example in (3.9) and (3.10c) suggests that the product of two sinusoids
is equivalent to a sum of two equal-amplitude sinusoids. Thus we can derive a generalrelationship for the spectrum of the product form if we start with an additive combinationof two equal-amplitude sinusoids:
x(t)=cos(2πf
1t)+cos(2πf2t) (3.11)
withf2>f 1. The two frequencies can be expressed as f1=fc−f/Delta1andf2=fc+f/Delta1,
where we have deﬁned a center frequency fc=1
2(f1+f2)and a deviation frequency
f/Delta1=1
2(f2−f1), which is smaller than fc. The additive form (3.11) gives the spectrum
of the beat note signal which is plotted in Fig. 3-3. Examples of beat notes and similarsignals can be found on the Companion Website.
4We use the term beat note since the phenomenon is most often observed as an auditory effect when two
musical notes (often idealized as sinusoids) are sounded together, for example, by playing two neighboring
piano keys simultaneously.
76 CHAPTER 3 SPECTRUM REPRESENTATION
0  f1
21
21
21
2
f1 f1 f2 f2 fc fcFigure 3-3 Spectrum of the sum of two
equal-amplitude sinusoids. When
f/Delta1=1
2(f2−f1)is small, this is the beat signal
in (3.11) and (3.12). The negative-frequency linesare centered around f=−f
c.
Using the complex exponential representation of the two cosines, we can go from the
additive form to the product form. After we rewrite x(t) as a product of two cosines, we
have a form that is easier to plot in the time domain, and from the plot we are able to see
why (3.11) is perceived as a beat note when the two frequencies are almost the same. Theanalysis proceeds as follows:
x(t)=cos(2πf
1t)+cos(2πf2t)
=/Rfractur/braceleftbig
ej2πf1t/bracerightbig
+/Rfractur/braceleftbig
ej2πf2t/bracerightbig
=/Rfractur/braceleftbig
ej2π(fc−f/Delta1)t+ej2π(fc+f/Delta1)t/bracerightbig
=/Rfractur/braceleftbig
ej2πfct/parenleftbig
e−j2πf/Delta1t+ej2πf/Delta1t/parenrightbig/bracerightbig
=/Rfractur/braceleftbig
ej2πfct(2 cos(2 πf/Delta1t))/bracerightbig
=2 cos(2 πf/Delta1t)cos(2πfct)(3.12)
EXERCISE 3.2 If the two sinusoids being added were to have nonzero phases, that is,
x(t)=cos(2πf1t+ϕ1)+cos(2πf2t+ϕ2)
the frequencies, fcandf/Delta1, would remain the same, but the phases, ϕ/Delta1andϕc, would
change.
x(t)=2 cos(2 πf/Delta1t+ϕ/Delta1)cos(2πfct+ϕc)
Determine the phases needed in the product representation.
NOTE
Time-Domain Plot
of a Beat NoteFor a numerical example, we take fc=200 Hz and f/Delta1=20 Hz in (3.12), so that
x(t)=2 cos(2 π(20)t)cos(2π(200)t) (3.13)
MATLAB was used to make the time-domain plots of the two cosine wave components
and the product signal x(t). Figure 3-4(a) shows the two sinusoidal components,
2 cos(2 π(20)t)and cos(2 π(200)t), that make up the product in (3.13). The plot of
the beat note is constructed by ﬁrst plotting 2 cos (2π(20)t)and its negative version
−2 cos(2 π(20)t)to deﬁne boundaries inside of which we then draw the higher frequency
signal. These boundaries are called the signal’s envelope. One signal varies much more
3-2 SINUSOIDAL AMPLITUDE MODULATION 77
0 20 40 60 80 100/NUL202
0 20 40 60 80 100/NUL202(b) Waveform of a Beat Note(a) Multiplicative Components
Time t (ms)
Figure 3-4 (a) Multiplicative components of a beat note with fc=200 Hz and f/Delta1=20 Hz.
(b) The corresponding product signal. The time interval between nulls (zeros) of the envelope is
1
2(1/f/Delta1)=25 ms, which is dictated by the frequency difference, f/Delta1.
rapidly than the other, so the slow signal can be viewed as a slowly time-varying amplitude
of the faster signal. The resulting beat note is plotted in Fig. 3-4(b), where it can be seen thatthe effect of multiplying the higher-frequency sinusoid (200 Hz) by the lower-frequencysinusoid (at 20 Hz) is to change the amplitude of the peaks of the higher-frequencywaveform. If we play such a signal through a loudspeaker or create it with a musicalinstrument, it will appear to fade in and out because the signal envelope is rising andfalling periodically with period
1
2(1/f /Delta1)=25 ms, as in Fig. 3-4(b). This results in the
audible phenomenon called “beating” of tones in music. The amplitude goes up anddown twice during one period of the lower-frequency sinusoid, so when we listen tosuch a signal x(t), we can hear the amplitude variation with frequency 2 f
/Delta1Hz. When
fcis much higher in frequency than f/Delta1, we also hear a tone near fcHz that seems to be
changing up and down in frequency. Musicians can use this beating phenomenon as anaid in tuning two instruments to the same pitch. When two notes are close but not identicalin frequency, the beating phenomenon is heard. As one pitch is changed to become closerto the other, the effect disappears, and the two instruments are then “in tune.”DEMO
beatcon
EXAMPLE 3-3 Decreasing the Frequency Difference, f/Delta1
Iff/Delta1is decreased from 20 Hz to 9 Hz, we see in Fig. 3-5(a,b) that the envelope of the
200-Hz tone changes much more slowly. The time interval between nulls (zeros) of theenvelope is one-half of the period of the f
/Delta1sinusoid,1
2(1/f /Delta1), so the more closely spaced
the frequencies of the sinusoids in (3.11), the slower the envelope variation. Figures 3-4and 3-5 are simpliﬁed somewhat by using zero-phase cosines for both terms in (3.11),but other phase relationships would give similar patterns. Finally, note that for x(t) in
Fig. 3-4 the spectrum contains frequency components at ±220 Hz and ±180 Hz, while
for the signal in Fig. 3-5 the spectrum has frequencies ±209 Hz and ±191 Hz.
78 CHAPTER 3 SPECTRUM REPRESENTATION
0 20 40 60 80 100
0 20 40 60 80 100/NUL202
/NUL202(b) Waveform of a Beat Note(a) Multiplicative Components
Time t (ms)Figure 3-5 Beat note with fc=200 Hz and
f/Delta1=9 Hz. Nulls are now1
2(1/f/Delta1)=55.6m s
apart.
3-2.3 Amplitude Modulation
Multiplying sinusoids is commonplace in communication systems where modulation of
the envelope of a high frequency sinusoid is used to transmit information signals suchas data, voice, or music. Amplitude modulation is the process of multiplying a high-
frequency sinusoidal signal by a low-frequency signal, such as a voice or music signal.It is the technique used in broadcast AM radio: In fact “AM” is just the abbreviation foramplitude modulation. The AM signal is a product of the form
x(t)=v(t)cos(2πf
ct) (3.14)
where it is assumed that the frequency of the cosine term (f cHz) is much
higher than any frequencies contained in the spectrum of v(t). In radio, v(t)
represents the voice or music signal to be transmitted. The cosine wave cos (2πfct)
in (3.14) is called the carrier signal , and its frequency fcis called the carrier
frequency .
LAB
AM and FM
Sinusoidal SignalsWith our limited knowledge of the spectrum at this point, the form of v(t) in
(3.14) must be a ﬁnite sum of sinusoids, but that case is sufﬁcient to understand
that the modulation process (3.14) involves frequency shifting of the spectrum
ofv(t).
EXAMPLE 3-4 Amplitude Modulation
If we let v(t)=5+4 cos(40 πt)andfc=200 Hz, then the AM signal is a multiplication
similar to the beat signal:
x(t)=/bracketleftbig
5+4 cos(40 πt)/bracketrightbig
cos(400 πt) (3.15)
The signal v(t) has a DC term large enough to make v(t) positive for all t. A plot
ofx(t) is given in Fig. 3-6(b), where it can be seen that the effect of multiplying the
3-2 SINUSOIDAL AMPLITUDE MODULATION 79
0 20 40 60 80 10009Amplitude
0 20 40 60 80 10009(b) Amplitude-Modulated WaveformAmplitude
99
Time t(ms)(a) Multiplicative Components
Figure 3-6 AM signal for fc=200 Hz and
f/Delta1=20 Hz. (a) The signal 5 +4 cos(40 πt)
shown as a dark-orange line, along with a 200 Hz
sinusoid cos(400 πt)(light color orange, with 9×
expanded scale for convenience in plotting). (b)
AM signal (light orange) formed as the product of
the two signals in (a) oscillates at 200 Hz, but has
amplitude variations, which are referred to as itsenvelope (dark orange).
0 20 40 60 80 10009Amplitude
9
Time t(ms)Amplitude-Modulated Waveform
Figure 3-7 AM signal for fc=700 Hz and
f/Delta1=20 Hz. The higher carrier frequency
makes it possible to see the outline of themodulating cosine without drawing theenvelope.
higher-frequency carrier sinusoid (200 Hz) by the lower-frequency sinusoid (at 20 Hz)
is to “modulate” (or change) the amplitude envelope of the carrier waveform—hence thename amplitude modulation for a signal like x(t) in Fig. 3-7.
The primary difference between the AM signals of (3.14) and (3.15) and the beat
note signals is that the AM envelope is usually set up to have no zero crossings. When thecarrier frequency becomes very high compared with the frequencies in v(t)as in Fig. 3-7,
it is possible to see the outline of the modulating signal v(t)without drawing the envelope
signal explicitly. This characteristic simpliﬁes the implementation of a detector circuit in
AM broadcast receivers where the objective is to recover the envelope v(t)from the AM
signal x(t).
3-2.4 AM Spectrum
In the frequency domain, the AM signal spectrum is easy to describe: it consists ofscaled copies of the spectrum of v(t) centered at f=±f
c, as shown in Fig. 3-8. The
same statement applies to the spectrum of a beat note signal, which is the product oftwo sinusoids as discussed in Example 3-2 and Section 3-2.2. The spectrum of the AM
80 CHAPTER 3 SPECTRUM REPRESENTATION
0  f1 1 1 15
25
2
.fcf/
.fcf/
.fcCf/
.fcCf/ fc fcFigure 3-8 Spectrum of the AM signal in (3.15),
(3.16), (3.17), and Fig. 3-6, where fc=200 Hz and
f/Delta1=20 Hz for v(t) deﬁned in (3.15).
signal x(t) in (3.15) can be derived by writing v(t) and cos(400 πt)in terms of complex
exponentials
x(t)=v(t)(1
2ej400πt+1
2e−j400πt)
=(5+2j40πt+2−j40πt)1
2ej400πt+(5+2j40πt+2−j40πt)1
2e−j400πt(3.16)
and then multiplying out to get the following additive combination for the spectrum:
x(t)=5
2ej400πt+ej440πt+ej360πt+5
2e−j400πt+e−j440πt+e−j360πt(3.17)
The spectrum of v(t) has three spectrum lines at f=0,20,−20 Hz, but now there
are six spectral components for x(t): at the frequencies f=200,220,180 Hz and
f=−200,−180,−220 Hz. Thus the spectrum (Fig. 3-8) for x(t) contains two
similar subsets, one centered at f=fcand the other at f=−fc. Each subset is a
frequency-shifted (and scaled) version of the two-sided spectrum of v(t). The foregoing
example is generalized in Section 3-3.5.
EXERCISE 3.3 Derive the spectrum of v(t)=5+4 cos(2 π(20)t)and plot it as a function
of frequency. Compare this result with the spectral plot for the AM signal in
Fig. 3-8.
3-2.5 The Concept of Bandwidth
The concept of bandwidth is closely tied to the spectrum representation of signals, and
it is of considerable importance in almost all applications where signals are transmitted,manipulated, or stored. Oftentimes we only want a coarse characterization of the spectrumof a signal. We can, for example, use the highest frequency for which the spectrum isnonzero as a measure of spectrum content. This is an appropriate measure when weconsider sampling in Chapter 4. In the case of the AM signal whose spectrum is shown inFig. 3-8, this highest frequency would be f
c+f/Delta1. Alternatively, it may be more important
and more informative to emphasize the group (or band) of frequencies containing boththe lowest and highest positive frequencies. Such measures of the spectrum as these are
3-3 OPERATIONS ON THE SPECTRUM 81
often referred to as the bandwidth of the spectrum or, by implication, the bandwidth of
the signal.
In the case of the signal of Fig. 3-8, we might say that the bandwidth of the signal
is(fc+f/Delta1)−(fc−f/Delta1)=2f/Delta1, and we might be even more speciﬁc by noting that
this band of frequencies is centered on frequency fc.5The bandwidth characterization is
important in the AM radio broadcast system because each AM radio station is assigned a
speciﬁc carrier frequency fcand a bandwidth of 10 kHz centered at the carrier frequency.
In this way, many local stations can share the (wide) bandwidth of free space withoutinterfering with each other.
6This sharing of the free-space communication channel is
called frequency-division multiplexing.
3-3 Operations on the Spectrum
In signal processing, we usually manipulate signals with time-domain operations. One ofthe beneﬁts of the spectrum representation is that time-domain operations on the signalx(t) often result in very simple changes to the spectrum. Since the spectrum consists
of a set of frequency/complex amplitude pairs, S={(f
k,ak)}, when we operate on a
signal x(t) in the time domain, we might change the frequencies {fk}, or the complex
amplitudes {ak}, or both. The correspondence between a time-domain operation and
spectrum changes is often referred to as a property of the spectrum representation. This
section gives several examples of spectrum properties.
3-3.1 Scaling or Adding a Constant
Multiplying a signal by a scale factor (i.e., γx(t)) multiplies all of the complex amplitudes
in its spectrum by the same scale factor (γ)
γx(t) =γM/summationdisplay
k=−Makej2πfkt=M/summationdisplay
k=−M(γak)ej2πfkt
but leaves all the frequencies unchanged. On the other hand, adding a constant to asignal (i.e., x(t)+c) changes the complex amplitude at only one frequency (f=0). The
following equation
x(t)+c=/summationdisplay
fk/negationslash=0akej2πfkt+a0ej2π(0)t+c/bracehtipupleft/bracehtipdownright/bracehtipdownleft /bracehtipupright
new DC
5If the signal is real, we know that the spectrum has complex conjugate symmetry so we can focus on
only positive frequencies.
6AM broadcast stations have carrier frequencies ranging from 540 Khz to 1700 Khz. Other types of radio
communication use other portions of what we refer to collectively as the electromagnetic spectrum.
82 CHAPTER 3 SPECTRUM REPRESENTATION
shows that the new DC value is a0+c. If the spectrum of x(t) has no DC component
(a0=0), then adding cwould produce a new spectrum line at f=0, so the pair (0,c)
would now be included in the spectrum set.
Figure 3-9 illustrates both operations for the case y(t)=2x(t)+6 when the signal is
x(t)=3
2+6 cos(6πt −π/3)+4 cos(14 πt+π/4)
The spectrum of x(t) is shown in Fig. 3-9(a), and the spectrum of y(t) in Fig. 3-9(c).
The complex amplitudes at f=±3 and±7 are doubled when going from Fig. 3-9(a) to
Fig. 3-9(c). At DC (f=0)the constant 6 is added because it is a DC-only signal whose
spectrum is shown in Fig. 3-9(b). Thus the DC component in the spectrum of y(t) is
2(1.5)+6=9.
3-3.2 Adding Signals
Another simple operation is addition of two signals, x1(t)+x2(t), but there are two cases
depending on the frequencies in the spectra. In principle, the spectrum of x1(t)is added
to the spectrum of x2(t), because
x1(t)+x2(t)=/summationdisplay
f1ka1kej2πf1kt+/summationdisplay
f2/lscripta2/lscriptej2πf2/lscriptt
where (f1k,a1k)and(f2/lscript,a2/lscript)are the frequencies and complex amplitudes for x1(t)and
x2(t), respectively. If a spectrum line is present in both spectra at f=f1k=f2/lscript, then
the corresponding complex amplitudes, a1kanda2/lscript=a2k, must be summed by phasor
03 7
(a)
03 7
(b)
03 7
(c)333
777
fff3e=33e=3
2e=42e=4
3
2
6e=36e=3
4e=44e=496Figure 3-9 Spectrum plots for adding a constant to
a scaled signal. (a) Spectrum of x(t), (b) spectrum
of constant signal, and (c) spectrum of
y(t)=2x(t)+6.
3-3 OPERATIONS ON THE SPECTRUM 83
02 7
(a)
05 7
(b)
02 57
(c)22
55
777
fff7e=37e=3
4e=44e=4
3
2 24e=44e=4
3e
7e=37e=3
2 24p
2 4p
2Figure 3-10 Spectrum plots for the sum of two
signals. (a) Spectrum of x1(t), (b) spectrum of x2(t),
and (c) spectrum of the sum signal, x1(t)+x2(t).
addition.7The other case is a spectrum line that is present in only one spectrum. In this
case, there is nothing to add so that the spectrum line becomes part of the spectrum of
the sum signal without any change.
EXAMPLE 3-5 Adding Spectra
The plots in Fig. 3-10 illustrate several points about the spectrum for the sum of two
signals. The spectrum of x1(t)is shown in Fig. 3-10(a), and the spectrum of x2(t)in
Fig. 3-10(b). When adding the spectra, we see that both spectra have components at thefrequencies f=±7 and 0, so three phasor additions must be done.
3+3e
jπ=0 (atf=0)
4e−jπ/ 4+4ejπ/4=4√
2 (atf=−7)
4ejπ/4+4e−jπ/ 4=4√
2 (atf=7)
Since the complex amplitudes at f=0 cancel out, there is no DC component in the
sum spectrum of Fig. 3-10(c). The spectrum for x1(t)has components at f=±2, but the
spectrum for x2(t)does not, so those components are copied directly to the sum spectrum.
Likewise, the components at f=±5 in the spectrum for x2(t)are also copied to the sum
spectrum.
7After the phasor addition it might happen that a complex amplitude becomes zero, in which case that
frequency would drop out of the spectrum set.
84 CHAPTER 3 SPECTRUM REPRESENTATION
3-3.3 Time-Shifting x(t) Multiplies akby a Complex Exponential
If we form a new signal y(t) by time-shifting x(t), then the frequencies remain the same,
but there is a phase change in the complex amplitudes of the spectrum.
y(t)=x(t−τd)←→ bk=ake−j2πfkτd
because
y(t)=x(t−τd)=/summationdisplay
kakej2πfk(t−τd)=/summationdisplay
k/parenleftbig
ake−j2πfkτd/parenrightbig
/bracehtipupleft/bracehtipdownright/bracehtipdownleft /bracehtipupright
bkej2πfkt
EXAMPLE 3-6 Delayed Cosine
Consider a cosine wave x(t)=6 cos(250 πt)that is delayed by τd=2 ms, which is
one quarter of its period. The spectrum set of x(t) isS={(125, 3), (−125, 3)}. In the
spectrum of x(t−0.002)the phase change for the f=+125-Hz term is
e−j250π(0.002)=e−j0.5π=−j
Thus the spectrum of x(t−0.002)can be written as the spectrum set S=
{(125, −3j),( −125, 3j)}. It should be easy to verify that
x(t−0.002)=6 sin(250πt)
This result is consistent with the fact that a quarter cycle delay of a cosine wave is a sine
wave.
3-3.4 Differentiating x(t) Multiplies akby ( j2π fk)
If we form a new signal y(t) by taking the derivative of x(t), then the frequencies remain
the same, while the complex amplitudes of the spectrum of y(t) can be obtained as
follows:
y(t)=d
dtx(t) ←→ bk=(j2πfk)ak
Since the derivative of a sum is the sum of the individual derivatives, we can apply the
derivative operator to each term in the spectrum of x(t) to obtain
y(t)=d
dtx(t)=/summationdisplay
kakd
dtej2πfkt=/summationdisplay
k(j2πfk)ak/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
bkej2πfkt
EXAMPLE 3-7 Derivative of Sine plus DC
Consider taking the derivative of a DC-offset sine wave x(t)=7+6 sin(250πt). The
spectrum set for x(t)isS={(0,7), (125, −3j), ( −125, 3j)}. In the spectrum ofd
dtx(t),
3-3 OPERATIONS ON THE SPECTRUM 85
thef=0 term is 7 multiplied by (j2π(0))=0, so it is eliminated; the f=+125-Hz
term is multiplied by (j2π(125))
(j2π(125))(−3j) =750π
Thus the spectrum set ofd
dtx(t)isS={(125, 750π), (−125, 750π)}. From the spectrum
it should be easy to verify that
d
dtx(t)=1500πcos(250 πt)
which coincides with the fact that the derivative of a sine function is a cosine and the
derivative of a constant is zero.
3-3.5 Frequency Shifting
If you multiply a signal by a sinusoid or a complex exponential, the frequencies in thespectrum are changed in a simple predictable fashion. Here is the derivation for a signalx(t) multiplied by the complex exponential Ae
jϕej2πfctwhose frequency is fcHz.
y(t)=Aejϕej2πfct/summationdisplay
kakej2πfkt
/bracehtipupleft/bracehtipdownright/bracehtipdownleft /bracehtipupright
x(t)(3.18a)
y(t)=/summationdisplay
k(akAejϕ)ej2π(fk+fc)t(3.18b)
The interpretation of (3.18b) is that the spectrum set of y(t) isSy={(fk+fc,akAejϕ)}
which means that every frequency in x(t) is shifted to the right by fc, assuming fc>0,
and the complex amplitudes are all multiplied by the complex amplitude of the complexexponential.
It is easy to plot this frequency shifting behavior for the spectrum. Figure 3-11(b)
shows the spectrum for a signal that has been multiplied by a complex exponential withf
c=9,A=1, and ϕ=0. The spectrum of x(t) in Fig. 3-11(a) has seven spectral lines,
and since there is conjugate symmetry, x(t) is real. The signal x(t)ej2π(9)thas a spectrum
that consists of the same seven spectral lines, but shifted up in frequency to be centeredaround f=9 Hz. Note that this signal is no longer real, and its spectrum does not obey
the conjugate symmetry property.
When the signal x(t) is multiplied by a real sinusoid Acos(2πf
ct+ϕ), we need to
apply the frequency shifting concept twice.
y(t)=x(t)A cos(2πfct+ϕ)=x(t)1
2Aejϕej2πfct+x(t)1
2Ae−jϕe−j2πfct(3.19)
The ﬁrst term in (3.19) raises all the frequencies in x(t) byfc, which is a frequency
shift to the right as shown in Fig. 3-11(b); the second term in (3.19) lowers all the
86 CHAPTER 3 SPECTRUM REPRESENTATION
03
(a)
06 9 1 2
(b)
06 9 1 2
(c)6 9 12 fff2 2j6 j68
2 2j6 j68
j j3 3j4
j j3 3j43
Figure 3-11 Spectrum plots for frequency
shifting of a signal. (a) Spectrum of x(t),
(b) spectrum of x(t)ej2π(9)t, and (c) spectrum
ofx(t)sin(2π(9)t). Note that the shifting
frequency fcis large enough so that the two
shifted copies of the spectrum of x(t) do not
overlap, which simpliﬁes the picture.
frequencies in x(t) byfc, which is a frequency shift to the left. The complex amplitudes
are changed as follows: for the spectral lines shifted up by fc, the new complex amplitudes
areak(1
2Aejϕ); for those shifted down, the new complex amplitudes are ak(1
2Ae−jϕ), i.e.,
the phase change is opposite.
These two frequency shifts are illustrated in Fig. 3-11(c) for the signal
x(t)sin(2π(9)t) which is the same as x(t)cos(2π(9)t−1
2π). When the spectrum of
x(t) in Fig. 3-11(a) is shifted up by 9 Hz, the complex amplitudes are multiplied by
1
2e−jπ/ 2=−j1
2. For example, the spectral line at f=3 in Fig. 3-11(a), which has
a complex amplitude of j6, is moved to f=12 in Fig. 3-11(c) and has a complex
amplitude of (j6)(−j1
2)=3. When the spectrum of x(t) in Fig. 3-11(a) is shifted down
by 9 Hz, the complex amplitudes are multiplied by1
2e+jπ/ 2=j1
2. Then the spectral
line at f=3 in Fig. 3-11(a) is moved to f=−6 in Fig. 3-11(c) and has a complex
amplitude of (j6)(j1
2)=−3. After all the spectral lines are frequency shifted and
their complex amplitudes are multiplied by1
2Ae±jϕ, the spectrum can be examined for
conjugate symmetry. Since the signal x(t)sin(2π(9)t) is real, the conjugate symmetry
property must be true in Fig. 3-11(c). As a ﬁnal comment, we note that when fcis
greater than the largest frequency in the spectrum of x(t), the upshifted and downshifted
spectra do not overlap. This is the case in Fig. 3-11(c) which makes the plot easy to
draw.
The frequency shifting property is based on the fact that multiplying two complex
exponentials is equivalent to adding their exponents. In Chapter 7 we will show that thisfrequency shifting property is true for a much broader class of signals than just sums ofsinusoids.
3-4 PERIODIC WA VEFORMS 87
3-4 Periodic Waveforms
A periodic signal satisﬁes the condition that x(t+T0)=x(t) for all t, which states that
the signal repeats its values every T0s. The time interval T0is called the period ofx(t),
and, if it is the smallest such repetition interval, it is called the fundamental period .I n
this section, we study how a sum of sinusoids can be used to synthesize a periodic signal,
and we show that the summed sinusoids must have harmonically related frequencies;
frequencies that are integer multiples of one frequency F0. In other words, the signal
would be synthesized as the sum of N+1 sinusoids8
x(t)=A0+N/summationdisplay
k=1Akcos(2πkF 0t+ϕk) (3.20)
where the frequency, fk,o ft h ekthcosine component in (3.20) is
fk=kF0 (harmonic frequencies)
The frequency fkis called the kthharmonic ofF0because it is an integer multiple of
the basic frequency F0, which is called the fundamental frequency if it is the largest
suchF0.
Does the sum in (3.20) give a periodic signal, and, if so, what is the period of x(t)?
Thekthharmonic sinusoid has a shortest period of 1/(kF 0), but it also repeats ktimes
every 1/F 0s. Since each cosine in (3.20) repeats with a period of 1/F 0, the sum must
have exactly the same repetition period, so, x(t+1/F 0)=x(t). It is easy to prove that
this period, T0=1/F 0, is the shortest repetition interval, so it is called the fundamental
period .9In other words, the fundamental period is the reciprocal of the fundamental
frequency.
EXAMPLE 3-8 Fundamental Period T0
Sometimes the fundamental period is not obvious. For example, the signalx(t)=cos
2(4πt) has a period of 0.5 s, but its fundamental period is actually
T0=0.25 s; because cos2(4π(t+1
4))=cos2(4πt+π)=cos2(4πt).
EXAMPLE 3-9 Calculating F0
The fundamental frequency is the largest F0such that fk=kF0where kis an integer. In
mathematical terms, it is related to the greatest common divisor (gcd) of a set of integers.
If all the frequencies fkare integers, then we can state
F0=gcd{fk}k=1,2,... ,N
8One of the sinusoids is the DC component A0which is a sinusoid with zero frequency.
9The fundamental period can be found using the least common multiple of the periods of all the sinusoids
in (3.20).
88 CHAPTER 3 SPECTRUM REPRESENTATION
For example, if the signal is the sum of sinusoids with frequencies 12, 20, and 60 Hz,
thenF0=4 Hz, because 12 Hz is the 3rdharmonic, 20 Hz is the 5thharmonic, and 60 Hz
is the 15thharmonic.
EXERCISE 3.4 Consider the case where the harmonic frequencies are not integers, for example,
{fk}={3.5, 5.6, 9.8}(in Hz). It might be possible to ﬁnd a scaling constant λsuch
thatλfkis an integer for all k. In this particular case, λ=10. Now we can use the
gcd on the scaled frequencies as follows:
F0=(1/λ) gcd{λfk}
Apply this result to ﬁnd the fundamental frequency for {3.5, 5.6, 9.8}Hz.
Using the complex exponential representation of the cosines, we can also write
(3.20) as
x(t)=N/summationdisplay
k=−Nakej2πkF 0t(3.21)
where akwas deﬁned by (3.7) in Section 3-1.1.
EXERCISE 3.5 Show that one possible period of the complex exponential signal vk(t)=ej2πkF 0tis
T0=1/F 0. Also, show that the fundamental period of vk(t)is 1/(kF 0).
3-4.1 Synthetic Vowel
As an example of synthesizing a periodic signal, consider a case where the fundamental
frequency F0is 100 Hz, and where the sum in (3.21) contains nonzero terms for
{a±2,a±4,a±5,a±16,a±17}. The numerical values of the complex amplitudes are listed
in Table 3-1. The coefﬁcients of the complex exponential signals were chosen so that thesynthesized signal approximates the waveform produced by a male speaking the vowelsound “ah.” The two-sided spectrum of this signal is plotted in Fig. 3-12 as two plots,Fig. 3-12(a) for the magnitudes, and Fig. 3-12(b) for the phases. This is different fromFig. 3-1, where it was convenient to make just one plot and label the nonzero spectralcomponents with their complex amplitudes. Note that all the frequencies are integermultiples of 100 Hz, even though there is no spectral component at 100 Hz itself. Sincethe gcd of the frequencies is 100, the fundamental frequency is 100 Hz and the fundamentalperiod is 1/100 =0.01 s. Also the negative frequency components in Fig. 3-12(b) have
phase angles that are the negative of the phase angles of the corresponding positivefrequency components, because the complex amplitudes for the negative frequenciesare the complex conjugates of the complex amplitudes for the corresponding positivefrequencies.
The synthetic vowel signal has ten nonzero spectral components, but only ﬁve
sinusoidal terms after the positive and negative frequency terms are combined. It is
3-4 PERIODIC WA VEFORMS 89
Table 3-1 Complex amplitudes for the periodic signal that approximates a complicated
waveform like a vowel, such as “ah.” The akcoefﬁcients are given for positive indices k,
but the values for negative kare the conjugates, a−k=a∗
k.
kfk(Hz) ak Mag Phase
1 100 0 0 0
2 200 0.00772 +j0.122 0.1223 1.508
3 300 0 0 0
4 400 −0.08866 +j0.2805 0.2942 1.877
5 500 0.48−j0.08996 0.4884 −0.185
6 600 0 0 0
...... ... ... ...
15 1500 0 0 0
16 1600 0.01656 −j0.1352 0.1362 −1.449
17 1700 0.04724 +j0 0.04724 0
0 500 1000 1500 2000   0.10.20.30.40.5
0 500 1000 1500 2000  0
20002000
15001500
10001000
500500
Frequency f(Hz)(a) Magnitude Spectrum
(b) Phase Angle Spectrum (rad)Figure 3-12 Spectrum of signal deﬁned in
Table 3-1. The magnitude (a) is an even function
with respect to f=0; the phase (b) is odd since
a−k=a∗
k.
interesting to examine the contribution of each real sinusoidal component separately. We
can do this by successively plotting the waveforms corresponding to only one sinusoid,then two sinusoids, then three, etc. Figure 3-13(a) shows a plot of only the k=2 sinusoidal
term in Table 3-1. Note that since the frequency of this single component is 2 F
0=200
Hz, the waveform is periodic with period 1/200 =5 ms. Next, Fig. 3-13(b) shows x4(t),
which is a plot of the sum of the k=2 andk=4 terms. Since these two frequencies are
multiples of 200 Hz, the period of x4(t)is still 5 ms.
Figure 3-13(c) shows a plot of the sum of the ﬁrst three terms, x5(t).N o ww e
see that the period of the waveform is increased to 10 ms. This is because the threefrequencies, 200, 400, and 500 Hz are integer multiples of 100 Hz; so, the fundamental
90 CHAPTER 3 SPECTRUM REPRESENTATION
0 5 10 15 20 25 30 35 40   0 0.2
0 5 10 15 20 25 30 35 40   0 0.5
0 5 10 15 20 25 30 35 40 0 1
0 5 10 15 20 25 30 35 40 0 1
0 5 10 15 20 25 30 35 40 0 2(a)x2.t/D2<˚
a2ej2 2F 0/t
(b)x4.t/Dx2.t/C2<˚
a4ej2 4F 0/t
(c)x5.t/Dx4.t/C2<˚
a5ej2 5F 0/t
(d)x16.t/Dx5.t/C2<˚
a16ej2 16F 0/t
(e)x17.t/Dx16.t/C2<˚
a17ej2 17F 0/t
Time t(ms)2110:2
0:5
Figure 3-13 Summing all ﬁve terms in Table 3-1.
(a) The 200-Hz term alone. (b) Sum of the 400-Hz
and 200-Hz terms. Additional terms are added one ata time until the entire synthetic vowel signal iscreated in (e). (c) Adding the 500-Hz term, whichchanges the fundamental period, (d) adding the1600-Hz term, and (e) adding the 1700-Hz term.
frequency is now 100 Hz. Figure 3-13(d) shows that the addition of the component
with frequency 1600 Hz does not change the period. Finally, Fig. 3-13(e) shows x17(t),
the sum of all the terms in Table 3-1. Note that the period of x17(t)isT0=10 ms, which
equals 1/F 0, even though there is no component with frequency F0. The signal x17(t)
is typical of waveforms for vowel sounds in speech although many more frequenciesmight be needed to accurately represent the waveform of a natural speech signal.
The high frequencies in the signal contribute the ﬁne detail in the waveform. This
is evident in Fig. 3-13 as the waveform becomes increasingly complicated and morerapidly varying as higher-frequency components such as the 16
thand 17thharmonics are
added. The Companion Website has a more detailed presentation of this Vowel Synthesis
example.DEMO
Vowel Synthesis
3-4 PERIODIC WA VEFORMS 91
3-4.2 Sine-Cubed Signal
In Section 3-2 we determined the spectra of products of sine waves by expanding each
sine wave into complex exponentials using the inverse Euler relation. After multiplyingthe complex exponential forms and simplifying exponents, it was possible to obtaina representation of the product as a sum of complex exponentials. The spectrum wasthen obtained by associating each complex amplitude with the corresponding frequency.
This same approach can be used with other combinations of sine waves including those
involving sine waves raised to a power. Raising a periodic function to a power resultsin a periodic function with the same or possibly shorter period. A simple example thatillustrates this point is the sine-cubed signal
x(t)=sin
3(4πt) (3.22)
which is plotted in Fig. 3-14. Our objective is to obtain a representation of x(t) as a sum
of complex exponentials in the form (3.21), so that we may easily determine the spectrumofx(t).
Using the inverse Euler formula for sin (·)along with the binomial expansion for
(a−b)
3, we can rewrite the sine-cubed function as a sum:
x(t)=/parenleftbiggej4πt−e−j4πt
2j/parenrightbigg3
=1
−8j/parenleftbig
ej12πt−3ej8πte−j4πt+3ej4πte−j8πt−e−j12πt/parenrightbig
=j
8ej12πt+−3j
8ej4πt+3j
8e−j4πt+−j
8e−j12πt(3.23)
We see that (3.23) is the sum of four terms with radian frequencies: ω=±4πandω=
±12πrad/s. Since gcd (4,12)π=4π, the fundamental frequency is ω0=4πrad/s (or
F0=2 Hz). The frequencies in (3.23) are the ﬁrst and third harmonics of the fundamental
frequency. Therefore, N=3 and T0=0.5 s in (3.21). The coefﬁcients in (3.21) are
indexed in terms of the harmonic number k,s o
ak=⎧
⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩0 for k=0
∓j
3
8fork=±1
0 for k=±2
±j1
8fork=±3(3.24)
0 0.25 0.5 0.75 1 1.25/NUL101
x(t)
Time t (s)Figure 3-14 Waveform of the
signal x(t)=sin3(4πt).
92 CHAPTER 3 SPECTRUM REPRESENTATION
/NUL6 /NUL22 6 0 fe/NULj/EM/21
8ej/EM/218e/NULj/EM/238ej/EM/238Figure 3-15 Spectrum of the “sine-cubed” signal derived
from its representation as a sum of complex exponentials. Only
the range from −6t o+6 Hz is shown. The spectrum is zero
outside this interval. The complex amplitude of each spectrumline is equal to the coefﬁcient a
kfor that frequency, kF0.
Now we can plot the spectrum because we know that we have four nonzero ak
components located at the four frequencies: f={ − 6,−2,2,6}Hz. In Fig. 3-15 the
spectrum is plotted versus frequency in hertz, so the third harmonic is at 6 Hz, and the
second harmonic is missing.
3-4.3 Example of a Non-Periodic Signal
When we add harmonically related complex exponentials, we get a periodic signal, but
what happens when the frequencies have no harmonic relation to one another? Thesinusoidal synthesis formula
x(t)=a
0+N/summationdisplay
k=12|ak|cos(2πfkt+∠ak)
=a0+N/summationdisplay
k=1/parenleftbig
akej2πfkt+a∗
ke−j2πfkt/parenrightbig
is still valid, but we want to demonstrate that periodicity is tied to harmonic frequencies,so we present a simple example.
First, we make a harmonic signal x
h(t)usinga1=1,a3=−1/3, and a5=1/5 with
fundamental frequency F0=10 Hz:
xh(t)=2 cos(20 πt)−2
3cos(20 π(3)t)+2
5cos(20 π(5)t) (3.25)
A plot of xh(t)is shown in Fig. 3-16 using a “strip chart” format. The plot consists
of three lines, each one containing 2 s of the signal. The ﬁrst line starts at t=0, the
second at t=2 s, and the third at 4 s. This lets us view a long section of the signal,
and we can see that xh(t)is clearly periodic, with fundamental period equal to 0.1 s.
The amplitudes in (3.25) are proportional to those of a periodic square wave, which is
discussed in Appendix C. For our purpose here, it is sufﬁcient to note that because thefrequencies are harmonic, the signal is periodic with period 0.1 s.DEMO
Spectrograms: Simple
Sounds: Square Waves
To illustrate what happens when the frequencies are not harmonic, we create a
second signal where the complex amplitudes are the same but the frequencies are slightly
perturbed from those of xh(t). Deﬁning xnh(t)to be the sum of three sinusoids:
xnh(t)=2 cos(20 πt)−2
3cos(20 π(2√
2)t)+2
5cos(20 π(3√
3)t)
The complex amplitudes are the same as in (3.25), but the frequencies have been changed
slightly to irrational numbers (in Hz). Hence, there is no gcd and no fundamental
3-4 PERIODIC WA VEFORMS 93
0 0.5 1 1.5 2420
Time t (s) Figure 3-16 Sum of three cosine waves with harmonic
frequencies. The spectrum is shown in Fig. 3-18(a),
and the fundamental frequency of xh(t)is 10 Hz.
0 0.5 1 1.5 2420
Time t (s)Figure 3-17 Sum of three cosine waves with
nonharmonic frequencies, xnh(t). The spectrum is
shown in Fig. 3-18(b).
frequency. The plot of xnh(t)in Fig. 3-17 is certainly not periodic, although the plot
hints at a strong periodic component with period 0.1 s.10No matter how hard you try,
you cannot ﬁnd an exact repetition in this signal, yet the complex amplitudes are the
same and the three frequencies are only slightly different from those of the waveform ofFig. 3-16.
The spectrum plots in Fig. 3-18 help explain the difference between the signals in
Figs. 3-16 and 3-17. In Fig. 3-18(a), the frequencies are integer multiples of a commonfrequency, F
0=10 Hz, so the waveform of Fig. 3-16 is periodic with period T0=1/10 s.
The waveform of Fig. 3-17 is nonperiodic, because the frequencies are irrational numbers
and are slightly different: 20√
2≈28.28 instead of 30, and 30√
3≈51.96 instead of
50. These slight shifts of frequency make a dramatic difference in the time waveform.For periodicity, we would need a fundamental frequency in the “frequency domain” ofFig. 3-18(b). To see that there is no fundamental, let us assume that 20√
2 is the pth
harmonic, and 30√
3i st h eqthharmonic. Then the ratio (20√
2)/(30√
3)has to be the
rational number p/q. Since that is impossible, we conclude that there is no fundamental
frequency.
10There are 20 “major” oscillations on the ﬁrst line, which corresponds to2so ftime. Thus, the “period”
of the waveform appears to be approximately 2 /20=0.1 s, but in fact, the signal never repeats exactly. The
dominance of the 0.1-second period occurs because the sinusoidal component with frequency 10 Hz has an
amplitude that is several times greater than the other two components.
94 CHAPTER 3 SPECTRUM REPRESENTATION
011
11 f
(a)
 f
(b)/NUL30 /NUL10 10 30 50 /NUL50
/NUL10 10 0/NUL 1
5
1515
151
3
/NUL13/NUL13
/NUL1
3
30p
3 20p
2 /NUL20p
2 /NUL30p
3Figure 3-18 Spectrum of (a) the harmonic
waveform xh(t)in Fig. 3-16, which has a period of
0.1 s, and (b) the nonharmonic waveform xnh(t)in
Fig. 3-17 that is not periodic.
3-5 Fourier Series
The examples in Section 3-4 show that we can synthesize a variety of periodic waveforms
by using a sum of harmonically related sinusoids. Now, we want to explore the question:
Can every periodic signal be synthesized as a sum of harmonically related sinusoids? So
far, we have only shown examples for Nﬁnite when we used (3.21) to obtain the plots
of waveforms shown in Section 3-4. However, as we now show, if we let Nbe inﬁnite,
virtually all periodic waveforms can be synthesized with a sum of complex exponential
signals.
Henceforth, when we mention sums of complex exponentials, we assume that Ncan
be either ﬁnite or inﬁnite as needed. This is expressed in general by using what we calltheFourier synthesis summation:
11
Fourier Synthesis Summation
x(t)=∞/summationdisplay
k=−∞akej(2π/T 0)kt (3.26)
This notation includes both the ﬁnite and inﬁnite cases, since in the ﬁnite case,
we can simply assume that ak=0 for|k|>N . Perhaps a more common name for the
mathematical expression in (3.26) is Fourier series, but we prefer the more descriptive
term Fourier synthesis summation. The kthcomplex exponential in (3.26) has a frequency
equal to fk=k/T 0Hz, so all the frequencies are integer multiples of the fundamental
frequency F0=1/T 0Hz.12Now we want to describe a general theory that shows how
11Jean-Baptiste Joseph Fourier (1768–1830) was a French mathematician and physicist who is credited
with introducing the idea of representing functions by sums of sinusoids. This contribution is recognized
today as one of the most important methods in science and engineering, and the ﬁeld of mathematics thatgrew out of his work is justiﬁably named in his honor.
12There are three ways to refer to the fundamental frequency: radian frequency ω0in rad/s, cyclic frequency
F0in Hz, or period T0in seconds. Each one has its merits in certain situations. The relationship among these is
ω0=2πF0=2π/T 0. Note that f0=0/T0is not the fundamental frequency; rather, it is f1=1/T0=F0.
3-5 FOURIER SERIES 95
to ﬁnd the coefﬁcients akso that any periodic signal can be synthesized with a sum of
harmonically related sinusoids, even when the sum may need an inﬁnite number of terms.
This is the mathematical theory of Fourier series.
There are two aspects of the Fourier theory: analysis and synthesis. Starting from
x(t) and calculating {ak}is called Fourier analysis. The reverse process of starting from
{ak}and generating x(t) is called Fourier synthesis, which was the focus of Section 3-4.
In order to answer the question about synthesizing every periodic signal via (3.26), we
must learn how Fourier analysis is done.
3-5.1 Fourier Series: Analysis
The Fourier coefﬁcients {ak}for the harmonic sum in (3.26) can be derived from the
signal x(t) by using the Fourier analysis integral .
Fourier Analysis Integral
ak=1
T0T0/integraldisplay
0x(t)e−j(2π/T 0)ktdt(3.27)
Only one period of x(t) is required for the integrand, so T0should be the fundamental
period of x(t). Note that tplays the role in (3.27) of a “dummy variable of integration”
that disappears from the result after substituting the limits. It would perhaps be lessconfusing if we used a different symbol, since tis also the symbol used for the independent
variable in (3.26). However, it is generally not necessary to make such a carefuldistinction when we use (3.27) and (3.26) as a pair that together comprise the Fourierrepresentation of a periodic signal.An important point, however, is to note that after (3.27)is evaluated, the variable tis integrated out and the result depends upon kalone, and time
only re-enters through (3.26). Thus, it is common to refer to the function x(t) as the
time-domain representation of a periodic signal, and the coefﬁcients a
kas the frequency-
domain representation or the spectrum representation of the signal.
The Fourier integral (3.27) can be evaluated if we have a formula that deﬁnes x(t)
over one period. As the example in Section 3-5.2 shows, the deﬁnite integral wouldbe evaluated to obtain a formula for a
kas a function of k. Several more examples are
presented in Appendix C to illustrate the mechanics of evaluating the Fourier analysisintegral. On the other hand, if x(t) is known only as a recording, then numerical methods
such as those discussed in Chapter 8 will be needed.
3-5.2 Analysis of a Full-Wave Rectiﬁed Sine Wave
In this section, we carry out the Fourier analysis of a signal called the full-wave rectiﬁedsine (FWRS), an example of which is shown in Fig. 3-19(b). This signal is found in DCpower supplies as well as AC to DC power converters—the ubiquitous devices that areneeded to recharge batteries in cell phones, laptops, and so on. Battery charging requiresconstant DC current, but plugging into a wall socket gets AC (alternating current) which,
96 CHAPTER 3 SPECTRUM REPRESENTATION
1
0
(a)
1
(b)x(t)sin(2/EMt/T1)
tt /NULT1 2T1 T1
0 T0 /NULT0 /NUL2T0 2T0 4T0Figure 3-19 (a) Sinusoid with period T1. (b) Periodic
FWRS signal with period T0, which is created by
taking the absolute value of the sinusoid in (a).
in our terms, is a pure sinusoid with zero DC value. A simple electronic circuit built with
diodes will turn a sinusoid into a signal with nonzero DC component which can then becleaned up by ﬁltering and used as a DC power source for recharging.
The mathematical formula for the FWRS signal is the absolute value of a
sinusoid.
x(t)=|sin(2πt/T
1)| (3.28)
The fundamental period T0is equal to1
2T1because the negative lobe of the sinusoid
is identical to the positive lobe after being ﬂipped by the absolute value operator, asillustrated by Fig. 3-19. The FWRS shown in Fig. 3-19(b) is a continuous signal, butits ﬁrst derivative is discontinuous, resulting in the sharp points at locations where thesignal is zero (at t=0,T
0,2T0,... ) . For 50 Hz AC power13the period of the sinusoid is
T1=0.02 s but after “rectiﬁcation” the period would be halved as shown in Fig. 3-19(b),
so the fundamental frequency of the FWRS would be F0=100 Hz.
The Fourier integral for this case is the following deﬁnite integral
ak=1
T0T0/integraldisplay
0|sin(2πt/T 1)|e−j(2π/T 0)ktdt (3.29a)
where T0=1
2T1. Since sin (2πt/T 1)≥0 over the interval speciﬁed by the limits on t
from 0 to T0, we can write
ak=1
T0T0/integraldisplay
0sin(2πt/T 1)e−j(2π/T 0)ktdt (3.29b)
The integration in (3.29b) can be carried out efﬁciently after using the inverse Euler
formula for sine to write (3.29b) as the sum of two integrals
13In most of the world, power companies distribute AC power at 50 hertz, but, in the Americas, 60 hertz
is common.
3-5 FOURIER SERIES 97
ak=1
2jT0T0/integraldisplay
0ej(2π/T 1)te−j(2π/T 0)ktdt+−1
2jT0T0/integraldisplay
0e−j(2π/T 1)te−j(2π/T 0)ktdt (3.30)
Each integrand can be combined into a single complex exponential which is then easy to
integrate. Since T1=2T0, the integrands in (3.30) are the complex exponentials
e±j(2π/2T0)te−j(2π/T 0)kt=ej(±1−2 k)(π/T 0)t
The deﬁnite integrals can be carried out and simpliﬁed as follows:
T0/integraldisplay
0ej(±1−2 k)(π/T 0)tdt=ej(±1−2 k)(π/T 0)t
j(±1−2k)(π/T 0)/vextendsingle/vextendsingle/vextendsingle/vextendsingleT0
0=ej(±1−2 k)((π/T 0)T0)−1
j(±1−2k)(π/T 0)(3.31)
The term in the numerator can be simpliﬁed as
ej(±1−2 k)((π/T 0)T0)−1=ej(±1−2 k)π
/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
always =−1−1=−2 (3.32)
The complex exponential is always equal to −1 because its angle is an odd multiple of π,
since(±1−2k)is always an odd integer for any integer k.
Now we apply (3.31) and (3.32) to the two integrals in (3.30) to obtain a simple
expression for ak
ak=1
2jT0/parenleftbigg−2
j(1−2k)(π/T 0)−−2
j(−1−2k)(π/T 0)/parenrightbigg
(3.33a)
=−2
−2π(1−2k)−−2
−2π(−1−2k)(3.33b)
=1
π(1−2k)+1
π(1+2k)(3.33c)
After combining the two terms in (3.33c) over a common denominator, the ﬁnal result
forakcan be written as
ak=2
π(1−4k2)(3.34)
Thus, we have shown that the FWRS wave can be represented as the Fourier series
x(t)=|sin(2πt/T 1)|=∞/summationdisplay
k=−∞2
π(1−4k2)ej(2π/T 0)kt(3.35a)
=2
π+∞/summationdisplay
k=14
π(1−4k2)cos(2πkt/T 0) (3.35b)
where T0=T1/2.
98 CHAPTER 3 SPECTRUM REPRESENTATION
3-5.3 Spectrum of the FWRS Fourier Series
When we discussed the spectrum in Section 3-1, we described a procedure for plotting
the spectrum when x(t) is composed of a sum of complex exponentials. By virtue of
the synthesis formula (3.26), the Fourier series coefﬁcients akare, in fact, the complex
amplitudes that deﬁne the spectrum of x(t). Therefore, a spectrum plot of a periodic
signal has lines only at multiples of the fundamental frequency F0=1/T 0. Usually it is
convenient to draw the spectrum line at frequency kF0with length equal to |ak|, but in
Fig. 3-20 the lengths are not to scale because the magnitude of akin (3.34) drops off very
quickly and the lines would barely be visible for |k|≥3, e.g., |a3|=2/(35π) ≈0.018.
The spectrum plot is a complete representation if we also label each spectrum line with
the corresponding complex value of ak, but note that the FWRS spectrum is purely real. In
Fig. 3-20, the spectrum is plotted only for −4F0≤f≤4F0, but the symbol ···indicates
that the spectrum continues for higher frequencies which all have nonzero coefﬁcients as
kF0→∞ .
3-5.3.1 DC Value of Fourier Series
The Fourier series coefﬁcient for k=0 has a special interpretation as the average value
of the signal x(t).I fw es e tk =0 in the analysis integral (3.27), then we have
DC Component
a0=1
T0T0/integraldisplay
0x(t)dt(3.36)
The integral is the area under the function x(t) for one period. If we think of the area as
a sum and realize that dividing by T0is akin to dividing by the number of elements in
the sum, we can interpret (3.36) as the average value of the signal. The a0coefﬁcient is
the amplitude of a complex exponential of zero frequency (i.e., 0 F0=0 Hz). Thus, it is
a constant signal component. Hence, in electrical engineering it is also called the “DCcomponent” of the signal. For the FWRS example, the DC value is nonzero
a
0=2
π(1−4k2)/vextendsingle/vextendsingle/vextendsingle/vextendsingle
k=0=2/π≈0.6366
 f2
/EM
/NUL2
3/EM
/NUL2
15/EM/NUL2
35/EM/NUL2
63/EM/NUL2
3/EM
/NUL2
15/EM/NUL2
35/EM/NUL2
63/EM
/NUL4F 0/NUL3F 0/NUL2F 0 /NULF 0 0F 0 2F 0 3F 0 4F 0::: :::Figure 3-20 Spectrum of the periodic
FWRS signal represented in terms of its
Fourier series coefﬁcients akand their
corresponding frequencies kF0.Note:
Vertical lines are not to scale.
3-5 FOURIER SERIES 99
0 0.01 0.02 0.03 0.04 0.05(b) Sum of DC and 1st through 9th Harmonics
Time t (s)0 0.01 0.02 0.03 0.04 0.0501(a) Sum of DC and 1st through 4th Harmonics
x4(t)
1
2DC Level
DC Level
01
x9(t)
1
2Figure 3-21 Summing harmonic components
for the FWRS signal via (3.37); (a) N=4 and
(b)N=9.
which is 63.66% of the maximum value of the rectiﬁed sine as shown in Fig. 3-21. For the
AC-DC converter application, we can observe that the operation of taking the absolute
value has produced an output signal with nonzero DC from an AC input that has zero
DC, which is exactly what is needed.
3-5.3.2 Finite Synthesis of a Full-Wave Rectiﬁed Sine
The fact that the spectrum of a FWRS signal has an inﬁnite number of spectral lines means
that it has inﬁnite bandwidth. To be speciﬁc, the millionth harmonic in the FWRS spectrumis nonzero, so is the billionth harmonic, and so on. Fortunately, the magnitude of thesevery high harmonics is extremely small—for example, the magnitude of the millionthharmonic is ≈10
−13. In fact, (3.34) says that the magnitude falls off as k−2ask→∞ .
A bandlimited signal could be obtained by dropping all the very high harmonics, and it
might be an almost perfect representation of the FWRS signal. Therefore, it is useful tostudy the approximate resynthesis of a FWRS signal from a ﬁnite number of its spectrallines, and ask questions like “How good is the approximation when using N=4, or
N=9, orN=20 spectral lines?”
DEMO
Fourier Series
An approximate signal can be synthesized according to the ﬁnite Fourier synthesis
summation formula14
xN(t)=N/summationdisplay
k=−Nakej(2π/T 0)kt(3.37)
The synthesis formula (3.37) usually can be simpliﬁed to a cosine form. For the particular
case of the FWRS coefﬁcients (3.34), when we take the DC value plus the ﬁrst and second
14If you have access to MATLAB, it is straightforward to write a Fourier Synthesis Program that
implements (3.37). This MATLAB programming exercise is described in more detail in the Music Synthesis
Lab.
100 CHAPTER 3 SPECTRUM REPRESENTATION
harmonic terms (i.e., N=2), we get the sum of two sinusoids plus the constant (DC)
level derived in (3.38).
x2(t)=a−2e−j(4π/T 0)t+a−1e−j(2π/T 0)t+a0+a1ej(2π/T 0)t+a2ej(4π/T 0)t
=−2
15πe−j(4π/T 0)t+−2
3πe−j(2π/T 0)t+2
π+−2
3πej(2π/T 0)t+−2
15πej(4π/T 0)t
=2
π+−2
3π(ej(2π/T 0)t+e−j(2π/T 0)t)+−2
15π(ej(4π/T 0)t+e−j(4π/T 0)t)
=2
π−4
3πcos(2πt/T 0)−4
15πcos(4πt/T 0)(3.38)
LAB
Synthesis of
Sinusoidal SignalsUsing a simple MATLAB M-ﬁle, a synthesis was done via (3.37) with a fundamental
frequency of F0=100 Hz. Since the fundamental period is T0=1/100 =0.01 s, the
harmonic frequencies are (2π/T 0)k=(200π)krad/s. Two cases are shown in Fig. 3-21(a)
forN=4 and Fig. 3-21(b) for N=9. Notice that the period of the synthesized waveform
is always the same, because it is determined by the fundamental frequency. After
comparing the waveforms in Fig. 3-21 to the ideal continuous FWRS signal in Fig. 3-19,we see that a ﬁnite Fourier sum approximation (3.37) is roughly correct even with onlythe ﬁrst four harmonics.
As more harmonic terms are added, the approximating formula is still a ﬁnite
sum of sinusoids but higher frequency terms are included. In Fig. 3-21 the worstapproximation is at the integer multiples of T
0(i.e., 0, 0.1, 0 .2,...) where the FWRS
should be zero. At these locations the derivative of the FWRS is discontinuous so higherfrequency terms are needed. In the N=9 case, the approximation is very close to
the original waveform. Adding harmonics for N> 9 will improve the synthesis very
little, mostly by sharpening the dips at t=0.01, 0.02,.... TheN=4 case is a poorer
approximation to the true FWRS signal, because it is not using enough sinusoidalterms. It is possible to quantify the approximation error by plotting the spectrum asin Fig. 3-20, and examining the relative magnitudes of the higher frequency componentsbeing dropped for k>4 (see Section C-4.3). The
fourierseries MATLAB demo,
described in Appendix C, provides an interactive GUI where the number of termscan be varied to study how the quality of the approximation improves with moreterms.
As a ﬁnal comment, we return to the application of AC-DC converters where the
purpose of full wave rectiﬁcation of a power line sine wave is to obtain a waveformwhose DC value is nonzero. After rectiﬁcation, additional processing is used to removethe fundamental and all higher harmonics of the original sine wave. The result is a signalthat is only the DC level in Fig. 3-21. In a practical system comprised of resistor andcapacitor circuit elements, the higher frequencies can be reduced in magnitude, but notcompletely removed, so a small “ripple” with frequency F
0remains on the (approximate)
DC signal.
3-6 TIME–FREQUENCY SPECTRUM 101
3-6 Time–Frequency Spectrum
We have seen that a wide range of interesting waveforms can be synthesized by a sum of
sinusoids
x(t)=A0+N/summationdisplay
k=1Akcos(2πfkt+ϕk) (3.39)
These waveforms range from constants, to cosine signals, to general periodic signals, to
complicated-looking signals that are not periodic. One assumption we have made so far is
that the amplitudes, phases, and frequencies in (3.39) do not change with time. However,
most real-world signals exhibit frequency changes over time. Music is a good example.For very short time intervals, the music may have a “constant” spectrum, but over thelong term, the frequency content of a musical piece changes dramatically. Indeed, thechanging frequency spectrum is the very essence of music. Human speech is another goodexample. V owel sounds, if held for a long time, exhibit a “constant” nature because thevocal tract resonates with its characteristic frequencies, and the vocal cords vibrate with amore or less constant fundamental frequency. However, as we speak different words, thefrequency content is continually changing. In any event, most interesting signals can bemodelled as a sum of sinusoids if we let the frequencies, amplitudes, and phases vary withtime. Therefore, we need a way to describe such time–frequency variations which leadsus to study the concept of a time–frequency spectrum. The most common time–frequencyrepresentation is the spectrogram.
The mathematical concept of a time–frequency spectrum is a sophisticated theoretical
idea, but the intuitive notion of a time-varying spectrum is supported by common,everyday examples. A non-engineering example to cite is musical notation (Fig. 3-22).
A musical score speciﬁes how a piece is to be played not only by giving the notes to
be played, but also the time duration of each note, and the starting time of each. Thenotation itself is not completely obvious, but many students have seen it while learninga musical instrument. In Fig. 3-22 the horizontal “axis” is time, while the vertical axisis frequency. The time duration for each note is encoded in the notehead, which mightbe open or ﬁlled, the stem, which is usually present, and ﬂags, which might be attachedto the stem. The encoded duration is sufﬁcient to deﬁne a whole note, half note, quarternote, eighth, sixteenth, etc. In Fig. 3-22 most of the notes are sixteenth notes, indicatingthat the piece should be played briskly. If we assign a time duration to a sixteenth note,then all sixteenth notes should have the same duration. An eighth note would have twice
&
?83
83πœœ #
‰œœ #œœœ nœ
∑jœ≈œœœ
œœœ≈‰Jœ≈œœ #œ
œœœ #≈‰Figure 3-22 Sheet music notation is a
time–frequency diagram.
102 CHAPTER 3 SPECTRUM REPRESENTATION
the duration of a sixteenth note, and a quarter note would be four times longer than a
sixteenth note, and so on.
The vertical (frequency) axis uses a much more complicated notation to deﬁne
frequency. If you look carefully at Fig. 3-22, you can see that the black dots that markthe notes lie either on one of the horizontal lines or in the space between two lines. Eachof these positions denotes a white key on the piano keyboard depicted in Fig 3-23, andeach key produces a tone of a different frequency. The black keys on the piano requireadditional notation which is done by using “sharps” (/sharp)or “ﬂats” (/flat). Figure 3-22 has a
few notes sharped, e.g., D
/sharp
5. The musical score is divided into a treble section (the top
ﬁve lines) and a bass section (the bottom ﬁve lines). The vertical reference point for thenotes is “middle C,” which lies on an invisible horizontal line between the treble andbass sections (key number 40 in Fig. 3-23). Thus the bottom horizontal line in the treblesection represents the white key (E
4)that is two above middle C, that is, key number 44
in Fig. 3-23.
Once the mapping from the musical score to the piano keys has been made, we can
write a mathematical formula for the frequency of each note. A piano keyboard with88 keys is divided into octaves containing twelve keys each. The frequencies of keys inanoctave are twice those in the next lower octave. Within an octave, the neighboring keys
maintain a constant frequency ratio (r). Since there are twelve keys per octave, the ratio
(r)can be found as follows:
r
12=2 =⇒ r=21/12=1.0595
With this ratio, we can compute the frequencies of all keys if we have one reference. The
convention is that the A key above middle C, called A-440, has frequency 440 Hz. Since
A-440 is key number 49 and middle C is key number 40, the frequency of middle C isLAB
Synthesis of
Sinusoidal Signals
fmiddle C =440×2(40−49)/12≈261.6H z
It is not our objective to explain how to read sheet music, although two of the lab
projects on the Companion Website investigate methods for synthesizing waveforms to
create songs and musical sounds. What is interesting about musical notation is that it usesa two-dimensional display to indicate frequency content that changes with time. If weadopt a similar notation, we can specify how to synthesize sinusoids with time-varyingfrequency content. A very simple notation is illustrated in Fig. 3-24. This time-frequencyplot shows the frequencies of each note and their durations (0.2 s).
LAB
FM Synthesis for
Musical Instruments
Middle-CA-440C3D3E3F3G3A3B3C4D4E4F4G4A4B4C5D5E5F5G5A5B5
40 42 44 45 47 49 51 52 54 56 57 59 61 6339 37 35 33 32 30 2841 43Oct ave
Figure 3-23 Piano keys can be numbered from
1 to 88. Three octaves are shown. Middle C is
key 40. A-440 is key 49. The subscripts on thenote names denote octave numbers.
3-6 TIME–FREQUENCY SPECTRUM 103
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6200300400500600Frequency (Hz)A4B4
C4C5
D4E4F4G4
Time t(s)Figure 3-24 Ideal time–frequency diagram for playing the
C-major scale. The horizontal dotted lines correspond to
the ﬁrst four horizontal lines in the treble staff of sheetmusic (Fig. 3-22).
3-6.1 Stepped Frequency
The simplest example of time-varying frequency content is to make a waveform
whose frequency stays constant for a short duration and then steps to a higher (or
lower) frequency. Such stepped-frequency waveforms are also used in radar transmitterswhere frequency coverage and high power are needed with simple transmit hardware.In the case of music, an example of a simple stepped-frequency song would be a scale
which is a succession of notes progressing over one octave. For example, the C-majorscale consists of playing the notes {C
4,D4,E4,F4,G4,A4,B4,C5}one after another,
starting at C 4which is middle C. This scale is played completely on the white keys. The
frequencies of these notes are:
Middle C D4 E4 F4 G4 A4 B4 C5
262 Hz 294 330 349 392 440 494 523
A graphical presentation of the C-major scale is shown in the time-frequency plot
of Fig. 3-24. It should be interpreted as follows: Synthesize the frequency 262 Hz as
cos(2π(262)t)for 200 ms, then the frequency 294 Hz as cos(2 π(294)t)during the next
200 ms, and so on. The total waveform duration is 1.6 s. In music notation, the noteswould be written as in Fig. 3-25(a), where each note is a quarter note.
3-6.2 Spectrogram Analysis
The frequency content of a signal can be considered from two points of view: analysis or
synthesis. For example, the ideal time–frequency diagram in Figure 3-24 speciﬁes a rulefor synthesizing the C-major scale. Analysis is a more challenging problem, as we sawin Section 3-5, where the Fourier series analysis integral (3.27) was given.
Analysis for time-varying frequencies is an important topic of both research and
application in most signal processing courses even up to advanced graduate courses. Onereason is that there are several ways to write a mathematical formula like the Fourierseries integral to do the analysis. On the other hand, excellent numerical routines are nowavailable for time–frequency analysis. Speciﬁcally, it is easy to compute a spectrogram,
which is a two-dimensional function of time and frequency that displays a measurementof the time variation of the spectral content of a signal. The Companion Website has ademonstration of real sounds and their spectrograms, including piano sounds.
DEMO
Spectrograms of Real
Sounds
104 CHAPTER 3 SPECTRUM REPRESENTATION
(a)
Time (s)Frequency (Hz)
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6200300400500600
(b)Figure 3-25 (a) Musical notation for the
C-major scale, and (b) corresponding
spectrogram computed using MATLAB’s
spectrogram function. The horizontal dotted
lines denote the frequencies of the ﬁrst fourlines of the musical staff.
Chapter 8 presents the theory that underlies the spectrogram and explains the trade-
offs that must be made between frequency resolution and time resolution. In MATLAB,
the function spectrogram computes the spectrogram, and its default values work well
for most signals.15Therefore, it is reasonable to see what sort of output can be produced
by thespecgram function. Figure 3-25(b) shows the results of applying specgram to the
stepped-frequency time waveform that makes up the C-major scale represented in musicalnotation by Fig. 3-25(a). The calculation is performed by doing a numerical frequencyanalysis on short segments of the sampled signal and plotting the results at the speciﬁctime at which the analysis is done. By repeating this process with slight displacements intime, a two-dimensional array is created whose magnitude can be displayed as a grayscaleimage whose horizontal axis is time and whose vertical axis is frequency. The darknessof the marking is proportional to the amplitude of the signal at each time-frequencypoint. The time axis must be interpreted as the “time of analysis” because the frequencycalculation is not instantaneous: rather, it is based on a ﬁnite segment of the signal—inthis case, 25.6 ms.
It is quite easy to identify the frequency content due to each note, but there are
also some interfering artifacts that make the spectrogram in Fig. 3-25(b) less than ideal.In Section 8-7 we will undertake a discussion of time–frequency analysis in order to
explain how the spectrogram is calculated and how one should choose the analysisparameters to get a good result. Even though the spectrogram is a highly advancedidea in signal analysis, its application is relatively easy and intuitive, especially for
15The MATLAB syntax is [S,F,T] = spectrogram(X,WINDOW,NOVERLAP,NFFT,Fs,
’yaxis’) . The DSP First toolbox contains equivalent capability with the functions called plotspec
andspectgr.
3-7 FREQUENCY MODULATION: CHIRP SIGNALS 105
music signals, which are described symbolically by a notation that is very much like a
spectrogram.
3-7 Frequency Modulation: Chirp Signals
Section 3-6 revealed the possibility that interesting sounds can be created when thefrequency varies as a function of time. In this section, we use a different mathematicalformula to create signals whose frequency is continuously time-varying.
LAB
FM Synthesis for
Musical Instruments3-7.1 Chirp or Linearly Swept Frequency
Suppose that we want to create a signal that covers, or sweeps over, an interval of
frequencies. For example, in the audible region, we might begin at 300 Hz and sweep up
to 800 Hz. One method for producing such a signal would be to use a stepped-frequency
signal that concatenates a large number of short constant-frequency sinusoids, starting at300 Hz and ending at 800 Hz. Figure 3-26 shows a time waveform where the frequencyis being stepped. Notice the jumps at t=4, 8, 12, 16, and 20 ms, which, in this case,
are caused by using ϕ=0 for each short sinusoidal segment. The frequency stepping
is not continuous and would not sound smooth even with many steps. In addition, thisapproach is tedious to implement because the boundary between the short sinusoids isdiscontinuous unless we are careful to adjust the initial phase of each short sinusoid.
A “chirp” signal is a swept-frequency signal whose frequency continuously changes
linearly from some starting value to an ending frequency. The chirp formula can be derivedfrom the complex-exponential point of view. First of all, recall that the constant-frequencysinusoid is the real part of a complex (rotating) phasor
x(t)=/Rfractur {Ae
j(angle/bracehtipdownleft/bracehtipupright/bracehtipupleft/bracehtipdownright
ω0t+ϕ)}=A cos(ω 0t+ϕ) (3.40)
and notice that the angle of the complex exponential is equal to the argument of thecosine. When we generalize the sinusoid to a wider class of signals written as
x(t)=/Rfractur {Ae
jψ(t)}=A cos(ψ(t)) (3.41)
0 4 8 12 16 20/NUL101
Time t (ms)Stepped-Frequency Sinusoids
Figure 3-26 Stepped-frequency sinusoid, with six
frequencies changing from 300 Hz to 800 Hz in
100 Hz increments. The frequency changes everyfour milliseconds.
106 CHAPTER 3 SPECTRUM REPRESENTATION
where ψ(t) denotes any function of time, we refer to ψ(t) as the angle function of the
cosine.16For example, we would create a signal with quadratic angle function by deﬁning
ψ(t)=2πμt2+2πf0t+ϕ (3.42)
Now we consider how to get frequency variation from the angle function. For the
constant-frequency sinusoid in (3.40), the constant ω0is the rate of change of the angle
function which can be obtained by taking the time derivative of the angle function. This
notion of taking the derivative generalizes if we deﬁne the instantaneous frequency for
signals in (3.41) as the derivative of the angle function,
ωi(t)=d
dtψ(t) (rad/s) (3.43)
which is the instantaneous slope of ψ(t) . The units of ψ(t) are rad, and therefore, the
units of ωi(t)are rad/s, but we often want the frequency in Hz, which requires dividing
by 2π,
fi(t)=1
2πd
dtψ(t) (Hz) (3.44)
If the angle function of x(t) is quadratic as in (3.42), then taking the derivative (3.44)
gives an instantaneous frequency that changes linearly with time, that is,
fi(t)=2μt+f0 (3.45)
The frequency variation produced by the time-varying angle function such as (3.42)
is called frequency modulation (FM), and signals of this class are called linear FM
signals. Figure 3-27 shows an example of the ideal instantaneous frequency for linear-
FM. Finally, since the linear variation of the frequency (3.45) can produce an audiblesound similar to a bird chirp, linear FM signals are also called chirp signals, or simply
chirps.DEMO
Spectrograms: Chirp
Sounds
The process can be reversed to synthesize a time-domain signal with a desired linear
frequency sweep. Since (3.43) states that the instantaneous frequency is the derivative of
the angle function ψ(t) , the actual angle function needed in (3.41) is obtained from the
integral of ωi(t).
EXAMPLE 3-10 Synthesize a Chirp Formula
Suppose we want to synthesize a frequency sweep from f1=300 Hz to f2=800 Hz
over a 0.5 second time interval, where the beginning and ending times are t=0 and
t=T2=0.5 s as in Fig. 3-27. First of all, it is necessary to create a formula for the
desired instantaneous frequency
fi(t)=f2−f1
T2t+f1=800−300
0.5t+300
16Theangle function of the constant-frequency cosine wave would be ψ(t)=ω0t+ϕ.
3-7 FREQUENCY MODULATION: CHIRP SIGNALS 107
0 0.1 0.2 0.3 0.4 0.50200400600800
Time t (s)Frequency (Hz)
Figure 3-27 Instantaneous frequency of a linear-FM
signal that sweeps continuously from 300 Hz to
800 Hz in 0.5 s.
which is the sloping line in Fig. 3-27. Then we must integrate ωi(t)=2πfi(t)to get the
angle function:
ψ(t)=t/integraldisplay
02πfi(u) du
=t/integraldisplay
02π(1000u+300)du
=1000πt2+600πt+ϕ
where the phase, ϕ=ψ(0), is an arbitrary constant of integration. The time-domain chirp
signal corresponding to Fig. 3-27 is x(t)=cos(1000 πt2+600πt+ϕ).
3-7.2 A Closer Look at Instantaneous Frequency
It may be difﬁcult to see why the derivative of the angle function would be the
instantaneous frequency. The following experiment provides a clue.
(a) Deﬁne a “chirp” signal using the method in Example 3-10 with the following
parameters:
f1=300 Hz
f2=800 Hz
T2=20 ms
In other words, determine μandf0in (3.42) to deﬁne x(t) so that it sweeps the
speciﬁed 500 Hz frequency range in 20 ms.
108 CHAPTER 3 SPECTRUM REPRESENTATION
(b) Now make a plot of the signal synthesized in part (a). In Fig. 3-28, this plot
is Fig. 3-28(b). It is difﬁcult to verify whether or not this chirp signal has the
correct frequency content. However, the rest of this experiment demonstrates thatthe derivative of the angle function is the “correct” deﬁnition of instantaneousfrequency at two different times, picked as 5.45 ms and 16 ms (approximately).
These are locations of two positive peaks of the chirp as marked in Fig. 3-28(b).
(c) First, plot a 450 Hz sinusoid, x
1(t)=cos(900 π(t−0.00545)) which should have
a positive peak at t=5.45 ms. This constant frequency sinusoid is shown in
Fig. 3-28(a).
(d) Next, generate and plot a 700 Hz sinusoid, x2(t)=cos(1400 π(t−0.016)) which
should have a positive peak at t=16 ms. This constant frequency sinusoid is shown
in Fig. 3-28(c).
(e) Now compare the three signals in Fig. 3-28 with respect to the frequency content
of the chirp. Concentrate on the frequency of the chirp in the time range 4 to7 ms. Notice that the 450 Hz sinusoid nearly matches the chirp in this time region.Evaluate the theoretical f
i(t)in this region.
0 5 10 15 20/NUL101(a) Sinusoid @ 450 Hz: x1(t) D cos(2 /EM(450)t C '1)
0 5 10 15 20/NUL101(b) Chirp 300 /NUL800 Hz: cos(2 /EM(300 C 12500t)t)
0 5 10 15 20/NUL101
Time t (ms)(c) Sinusoid @ 700 Hz: x2(t) D cos(2 /EM(700)t C '2)Figure 3-28 Comparing a chirp signal
(b) with constant-frequency sinusoids
(a) 450 Hz and (c) 700 Hz. Notice wherethe local frequency of the chirp is equal toone of the sinusoids.
3-8 SUMMARY AND LINKS 109
Time t(s)Frequency (Hz)
0 0.1 0.2 0.3 0.4 0.50200400600800
Figure 3-29 Spectrogram of a linear-FM signal that
sweeps continuously from 300 Hz to 800 Hz in 0.5 s.
The ideal instantaneous frequency, which changes at
a rate of 1000 Hz/s, is shown as a dashed white line.
(f) Likewise, it is possible to ﬁnd another region near 16 ms (14 .5t o1 7 .5 ms) where
the chirp frequency is nearly equal to 700 Hz.
The foregoing example provides justiﬁcation for using the spectrogram to analyze
signals whose frequency content is changing. Over a short time interval the chirp signal
in Fig. 3-28(b) can be approximated by a constant frequency sinusoid. Thus, a Fourieranalysis integral could be applied to such short time intervals to determine the local
frequency content of the signal. This is exactly what is done by the spectrogram.Figure 3-29 shows an example of the spectrogram applied to the signal whose idealinstantaneous frequency was given in Fig. 3-27. For comparison, the ideal instantaneousfrequency is shown superimposed on the spectrogram.
We have seen that for signals of the form x(t)=Acos(ψ(t)), the instantaneous
frequency of the signal is the derivative of the angle function ψ(t) .I fψ(t) is constant,
the frequency is zero. If ψ(t) is linear, x(t) is a sinusoid at some ﬁxed frequency. If ψ(t)
is quadratic, x(t) is a chirp signal whose frequency changes linearly versus time. More
complicated variations of ψ(t) can produce a wide variety of signals. An example is the
sound made by a police or ambulance siren. Another important application of these FMsignals is in music synthesis. This application is illustrated with demos and a lab on theCompanion Website.
DEMO
FM Synthesis
3-8 Summary and Links
This chapter introduced the concept of the spectrum, in which we represent a signal
by its sinusoidal components. The spectrum is a graphical presentation of the complexamplitude for each frequency component in the signal. We showed how complicatedsignals can be formed from relatively simple spectra, and we presented the essentialconcepts of the Fourier series so that we could form the spectrum of arbitrary periodicsignals. Finally, we ended with a discussion of how the spectrum can vary with time.
At this point, so many different demonstrations and projects can be done that we
must limit the list somewhat. Among the laboratory projects on the website are threedevoted to different aspects of the spectrum. The ﬁrst contains exercises on the Fourier
110 CHAPTER 3 SPECTRUM REPRESENTATION
series representation of the square wave and a sawtooth wave. The second requires
students to develop a music synthesis program to play a piece such as Bach’s “Jesu, Joyof Man’s Desiring.” This synthesis must be done with sinusoids, but can be reﬁned withextras such as a tapered amplitude envelope. Finally, the third lab deals with beat notes,chirp signals, and spectrograms. The second part of this lab involves a music synthesismethod based on frequency modulation. The FM synthesis algorithm can produce realisticsounds for instruments such as a clarinet or a drum. In addition, there is one morelab that involves some practical systems that work with sinusoidal signals, such as thedual-tone multi-frequency (DTMF) telephone dialing system. This lab, however, requiressome knowledge of ﬁltering so it is reserved for Chapter 7. Write-ups of the labs can befound on the Companion Website.
LAB
Synthesis of Sinusoidal
Signals
LAB
FM Synthesis for MusicalInstruments
DEMO
Links to Many DemosThe website also contains many demonstrations of sounds and their spectrograms:
(a) Spectrograms of simple sounds such as sine waves, square waves, and other
harmonics.
(b) Spectrograms of realistic sounds, including a piano recording, a synthetic scale,
and a synthesized music passage done by one of the students who took an early
version of a course that included the material of this chapter.
(c) Spectrograms of chirp signals that show how the rate of change of the instantaneous
frequency affects the sound you hear.
(d) An explanation of the FM synthesis method for emulating musical instruments.
Several example sounds are included for listening.
(e) Rotating phasors.
(f) V owel synthesis.
NOTE
Problems with Solutions3-9 Problems
The problems in this section address the major concepts of this chapter. On the Companion
Website there are many related homework problems which can be used to review and
practice. Most of them have detailed solutions.
P-3.1 A signal x(t) has the two-sided spectrum representation shown in Fig. P-3.1.
/NUL175 /NUL50 50 175 0 f11
4ej/EM/24e/NULj/EM/27ej/EM/37e/NULj/EM/3
Figure P-3.1
3-9 PROBLEMS 111
(a) Write an equation for x(t) as a sum of cosines.
(b) Is x(t)a periodic signal? If so, determine its fundamental period and its fundamental
frequency.
(c) Explain why negative frequencies are needed in the spectrum.
P-3.2 A signal composed of sinusoids is given by the equation
x(t)=16 cos(500 πt+π/4)+9 cos(1000 πt−π/3)−5 cos(750 πt)
(a) Sketch the spectrum of this signal, indicating the complex amplitude of each
frequency component.
(b) Is x(t) periodic? If so, what is the period?
(c) Now consider a new signal deﬁned as y(t)=12−5√
3 cos(750 πt+π/2)+
5 cos(1500 πt+π/2). Draw the spectrum of this new signal. Is y(t) periodic?
If so, what is the period?
P-3.3 The following MATLAB code deﬁnes a vector zz, which corresponds to the
signal z(t):
tt = -10:0.01:10; %- in seconds
kk=1; zz=2+kk*cos(kk*tt);kk=2; zz = zz + kk*cos(kk*tt);kk=3; zz = zz + real(2*exp(j*pi/3)*exp(k*kk*tt) );
(a) Write a formula for z(t) in terms of sinusoids in standard form, that is,
z(t)=A0+/summationtext
kAkcos(ω kt+ϕk).
(b) Plot the spectrum for z(t) with labels for all of the frequencies and complex
amplitudes.
P-3.4 Letx(t)=sin3(54πt)+sin2(36πt) .
(a) Determine a formula for x(t) as the real part of a sum of complex exponentials.
(b) Determine the fundamental period for x(t).
(c) Plot the spectrum forx(t).
P-3.5 Make a sketch of the spectrum (vs. ω) of the signal deﬁned by:
x(t)=3/summationdisplay
k=−31
1+jkejkt
Label each spectrum line with the corresponding complex amplitude in polar form.
P-3.6 Shown in Fig. P-3.6 is a spectrum plot for the periodic signal x(t). The frequency
axis has units of rad/s.
112 CHAPTER 3 SPECTRUM REPRESENTATION
! /NUL8.4/EM3e/NULj/EM/4
/NUL3.6/EM4ej/EM/3
8.4/EM3ej/EM/4
07ej/EM
3.6/EM4e/NULj/EM/3
Figure P-3.6
(a) Determine the fundamental frequency ω0of this signal.
(b) Determine the (fundamental) period T0ofx(t), which is the shortest possible
period.
(c) Determine the DC value of this signal.
(d) A periodic signal of this type can be represented as a Fourier series of the form
x(t)=∞/summationdisplay
k=−∞akejω0kt.
If the Fourier series coefﬁcients of x(t)are denoted by ak,k=0,±1,±2,±3,... ,
determine which coefﬁcients are nonzero. List these nonzero Fourier series
coefﬁcients and their values in a table.
P-3.7 In Section 3-2.2, we discussed a simple example of the “beating” of one cosine
wave against another. In this problem, we consider a more general case. Let
x(t)=Acos(2π(fc−f/Delta1)t)+Bcos(2π(fc+f/Delta1)t)
For the case discussed in Section 3-2.2, the amplitudes are equal, A=B=1.
(a) Use phasors to obtain a complex signal z(t)such that
x(t)=/Rfractur {z(t)}
(b) By manipulating the expression for z(t)and then taking the real part, show that in
the more general case above, x(t) can be expressed in the form
x(t)=Ccos(2πf/Delta1t)cos(2πfct)+Dsin(2πf/Delta1t)sin(2πfct)
and ﬁnd expressions for CandDin terms of AandB. Check your answer by
substituting A=B=1.
(c) Find values for AandBso that
x(t)=2 sin(2πf/Delta1t)sin(2πfct)
Plot the spectrum of this signal.
3-9 PROBLEMS 113
P-3.8 Consider the signal
x(t)=8+10 cos(2 π(100)t+1
4π)+20 cos(2 π(250)t)
(a) Using Euler’s relation, the signal x(t) deﬁned above can be expressed as
a sum of complex exponential signals using the ﬁnite Fourier synthesis
summation (3.37)
Determine values for f0,N, and all the complex amplitudes, ak.It is not necessary
to evaluate any integrals to obtain ak.
(b) Is the signal x(t) periodic? If so, what is the fundamental period?
(c) Plot the spectrum of this signal versus fin Hz.
P-3.9 An amplitude-modulated cosine wave is represented by the formula
x(t)=[12+9 cos(πt −1
3π)]sin(14πt)
(a) Use phasors to show that x(t) can be expressed in the form
x(t)=A1cos(ω 1t+ϕ1)+A2cos(ω 2t+ϕ2)+A3cos(ω 3t+ϕ3)
where ω1<ω 2<ω 3; that is, ﬁnd values of the parameters A1,A 2,A 3,ϕ 1,
ϕ2,ϕ 3,ω 1,ω 2, andω3.
(b) Sketch the two-sided spectrum of this signal on a frequency axis. Be sure to label
important features of the plot. Label your plot in terms of the numerical values of
Ai,ϕi, andωi.
P-3.10 Consider a signal x(t) such that
x(t)=2 cos(ω 1t)cos(ω 2t)=cos[(ω 2+ω1)t]+cos[(ω 2−ω1)t]
where 0 <ω 1<ω 2.
(a) What is the general condition that must be satisﬁed by ω2−ω1andω2+ω1so that
x(t) is periodic with period T0? Determine T0and verify that x(t)=x(t+T0).
(b) What does the result of (a) imply about ω1andω2? For example, must ω2be an
integer multiple of ω1?
P-3.11 A periodic signal is given by the equation
x(t)=4+6 cos(60 πt−1
4π)+3 sin(90π)−6 cos(150 πt+1
6π)
114 CHAPTER 3 SPECTRUM REPRESENTATION
(a) Determine the fundamental frequency ω0, the fundamental period T0, the number
of terms N, and the coefﬁcients akin the ﬁnite Fourier representation (3.37)
for the signal x(t) above. It is possible to do this without evaluating any
integrals.
(b) Sketch the spectrum of this signal indicating the complex amplitude of each
frequency component. Indicate the complex amplitude values at the appropriate
frequencies. There is no need to make separate plots for real/imaginary parts or
magnitude/phase.
(c) Now consider a new signal deﬁned by adding one more sinusoid y(t)=
x(t)+10+12 cos(50 πt−π/6). How is the spectrum changed? Is y(t) still
periodic? If so, what is the fundamental period?
P-3.12 We have seen that musical tones can be modelled mathematically by sinusoidal
signals. If you read music or play the piano, you know that the piano keyboard is dividedinto octaves, with the tones in each octave being twice the frequency of the correspondingtones in the next lower octave. To calibrate the frequency scale, the reference tone is the Aabove middle C, denoted A
4, which is often called A–440, since its frequency is 440 Hz.
Each octave contains 12 tones, and the ratio between the frequencies of successive tonesis constant. Thus, the ratio must be 2
1/12. Since middle C is nine tones below A–440, its
frequency is approximately (440)2−9/12≈261.6 Hz. The names of the tones (notes) of
the octave starting with middle C and ending with high C are:
Note name C4C/sharp
4D4 E/flat4E4F4F/sharp4
Note number 40 41 42 43 44 45 46
Frequency
Note name F/sharp4G4G/sharp4A4B/flat4B4C5
Note number 46 47 48 49 50 51 52
Frequency 440
(a) Make a table of the frequencies of the tones in octave 4, the octave beginning with
middle C, assuming that A 4above middle C is tuned to 440 Hz.
(b) The above notes on a piano are numbered 40 through 52. If ndenotes the note
number and fdenotes the frequency of the corresponding tone, give a formula for
the frequency of the tone as a function of the note number.
(c) A chord is a combination of musical notes sounded simultaneously. A triad is a
three-note chord. The D-major chord is composed of the tones of D 4,F/sharp
4and A 4
sounded simultaneously. From the set of corresponding frequencies determined in
(a), make a sketch of the essential features of the spectrum of the D-major chordassuming that each note is realized by a pure sinusoidal tone. Do not specify the
complex phasors precisely.
3-9 PROBLEMS 115
P-3.13 The signal x(t) in Fig. P-3.13 consists of a DC component plus a cosine signal.
/NUL20 /NUL10 0 10 20 30 40/NUL1001020
Time t (ms)x(t)
Figure P-3.13
(a) Determine the frequency of the DC component, as well as the frequency of the
cosine component.
(b) Write an equation for the signal x(t). You should be able to determine numerical
values for all the amplitudes, frequencies, and phases in your equation by inspection
of the above graph.
(c) Expand the equation obtained in the previous part into a sum of complex exponential
signals with positive and negative frequency components.
(d) Plot the two-sided spectrum of the signal x(t). Label the complex amplitudes for
each positive and negative frequency component in the spectrum.
P-3.14 The two-sided spectrum of a signal x(t)is given in the following table, but some
of the values are not yet known.
Frequency (rad/s) ω2 −70π 0 ω1 100π
Complex Amplitude 8e−jπ/ 3X−1 20√
2+j√
2X2
(a) If x(t) is areal signal, use symmetry properties of the spectrum to determine the
numerical values of the parameters: X−1,X2,ω1, andω2.
(b) Write an expression for x(t) involving only real numbers and cosine functions.
(c) This signal is periodic; determine its fundamental period.
(d) Without plotting the waveform, show that x(t)≥0 for all t.
P-3.15 Determine the spectrum for each of the following signals. Give your answer as
a plot.
(a)x(t)=cos2(7πt−0.1π)
(b)y(t)=cos2(7πt−0.1π) cos(77πt +0.1π)
116 CHAPTER 3 SPECTRUM REPRESENTATION
P-3.16 In AM radio, the transmitted signal is voice (or music) combined with a carrier
signal. The carrier is a sinusoid at the assigned broadcast frequency of theAM station. For
example, WCNN in Atlanta has a carrier frequency of 680 kHz. If we use the notation
v(t) to denote the voice/music signal, then the actual transmitted signal for WCNN
might be:
x(t)=(v(t)+A)cos(2π(680×103)t)
where Ais a constant. The constant Ais introduced to make (A+v(t)) positive, which
simpliﬁes the design of a receiver for AM—thus, A>min v(t).
(a) V oice-band signals tend to contain frequencies less than 4000 Hz (4 kHz). Suppose
thatv(t)is a 3000 Hz sinusoid, v(t)=cos(2π(3000)t+0.3π). Draw the spectrum
forv(t).
(b) Now draw the spectrum for x(t), assuming a carrier at 680 kHz with zero phase.
Usev(t) from part (a) and assume that A=1.5.
Hint: Substitute for v(t) and expand x(t) into a sum of cosine terms of three
different frequencies.
P-3.17 The two-sided spectrum representation of a real-valued signal x(t) is shown
below (frequency in Hz):
/NUL180 /NUL105 105 180 07ej3/EM/511ej2/EM/511e/NULj2/EM/5
7e/NULj3/EM/5
f Figure P-3.17
(a) Determine the fundamental frequency (in Hz) for x(t).
(b) Write the formula for x(t) as a sum of real-valued sinusoids.
(c) The signal x2(t)=x(t−0.05) is a time-delayed version of x(t). Determine the
spectrum of x2(t). Simplify the numerical values for the complex amplitudes, so
that the phases lie in (−π,π ].
(d) A third signal is deﬁned as x3(t)=x(t)ej210πt. This new signal is complex-valued,
and it has a nonzero DC component. Determine the complex amplitude for the DC
component of x3(t).
P-3.18 A real signal x(t) has the two-sided spectrum shown in Fig. P-3.17.
(a) Plot the spectrum of the signal y(t)=x(t)+8.
3-9 PROBLEMS 117
(b) Plot the spectrum of the signal z(t)=x(t)+18 cos(80 πt+0.8π).
(c) Determine the fundamental frequency of the signal z(t).
(d) Deﬁne q(t) as the derivative of y(t) from part (a). Plot the spectrum of the signal
q(t)=d
dty(t).
P-3.19 The two-sided spectrum of a signal x(t) consists of two components given in
the following table:
Frequency (rad/s) ω1 10π
Complex Amplitude 8ejπ/3X1
(a) Ifx(t)is arealsignal, determine the numerical values of the parameters X1andω1.
(b) Make a plot of the spectrum of x(t); label both spectral lines.
(c) Deﬁne a new signal y(t) asy(t)=x(t)cos(ω ct+ϕ). The two-sided spectrum of
the signal y(t) consists of three components given in the following table:
Frequency (rad/s) −20πωaωb
Complex Amplitude B A−4j
Ify(t) is a real signal, use the frequency shifting property to determine the
numerical values of the parameters A,B,ωa,ωb,ωc, andϕ.
P-3.20 A real signal x(t) has the two-sided spectrum shown in Fig. P-3.20. The
frequency axis has units of rad/s.
/NUL90 /NUL40 0 40 900.5
!0.4e/NULj20.4ej20.6ej1.40.6e/NULj1.4
Figure P-3.20
(a) Determine the fundamental frequency ω0of this signal.
(b) Determine the fundamental period T0ofx(t), which is the shortest possible period.
(c) Determine the DC value of this signal.
118 CHAPTER 3 SPECTRUM REPRESENTATION
(d) A periodic signal of this type can be represented as a Fourier series of the form
x(t)=∞/summationdisplay
k=−∞akejω0kt
Thekthterm in the series is called the kthharmonic. Determine which harmonics
(positive and negative) are present. In other words, for the Fourier series
coefﬁcients, ak,determine which coefﬁcients are nonzero. List the indices of the
nonzero Fourier series coefﬁcients and their values in a table.
P-3.21 A chirp signal x(t) is one that sweeps in frequency from ω1=2πf1toω2=
2πf2as time goes from t=0t ot=T2. The general formula for a chirp is
x(t)=Acos(αt2+βt+ϕ)=cos(ψ(t)) (3.46)
where
ψ(t)=αt2+βt+ϕ
The derivative of ψ(t) is the instantaneous frequency (in rad/s), which is also the
frequency heard if the frequencies are in the audible range.
(a) For the chirp in (3.46), determine formulas for the beginning frequency (ω1)and
the ending frequency (ω2)in terms of α,β, andT2.
(b) For the chirp signal
x(t)=/Rfractur {ej(57t2+26t+17)}
Make a plot of the instantaneous frequency (in Hz) versus time over the range0≤t≤1s.
(c) If
x(t)=/Rfractur {e
j(2π(5/2.0794)(8t−1)+ϕ)}
derive the instantaneous frequency and plot it versus time.
P-3.22 A linear-FM “chirp” signal is one that sweeps in frequency from ω1=2πf1to
ω2=2πf2during a ﬁnite time interval.
(a) Determine the mathematical formula for a chirp whose instantaneous frequency
sweeps from f1=4800 Hz down to f2=800 Hz as time goes from t=0t ot=2s .
(b) In the following chirp
y(t)=cos(400 πt2+500πt−π/4) 0≤t≤3s
determine the starting and ending instantaneous frequencies.
P-3.23 To see why the derivative of the angle function would be the instantaneous
frequency, repeat the experiment of Section 3-7.2.
3-9 PROBLEMS 119
(a) Use the following parameters to deﬁne a chirp signal:
f1=1H z,f 2=9H z,T 2=2s
Determine αandβin (3.46) to deﬁne x(t)so that it sweeps the speciﬁed frequency
range.
(b) The rest of this problem is devoted to a MATLAB experiment that demonstrates
why the derivative of the angle function is the “correct” deﬁnition of instantaneous
frequency. First, make a plot of the instantaneous frequency fi(t)(in Hz) versus
time.
(c) Make a plot of the signal synthesized in (a). Pick a time-sampling interval that is
small enough so that the plot is very smooth. Put this plot in the middle panel of a3×1 by using subplot,
subplot(3,1,2) .
(d) Generate a 4 Hz sinusoid, and plot it in the upper panel of a 3 ×1 by using subplot,
subplot(3,1,1) .
(e) Generate an 8 Hz sinusoid, and then plot it in the lower panel of a 3 ×1 by using
subplot,subplot(3,1,3) .
(f) Compare the three signals and comment on the apparent frequency of the chirp in
the time range 1.6 ≤t≤2 s. Which sinusoid matches the chirp in this time region?
Compare the expected fi(t)in this region with 4 Hz and 8 Hz.
P-3.24 Ifx(t)=cos(ψ(t)) then the instantaneous frequency (in Hz) is deﬁned as the
derivative of its argument ψ(t) ,
fi(t)=1
2πdψ(t)
dt
For each of the sinusoids below, ﬁnd an expression for the instantaneous frequency in Hzand sketch f
i(t)for the speciﬁed range of t.
(a)x1(t)=cos(√t),for 0.01≤t≤3.6
(b)x2(t)=cos(2t2+π/4)2,for−2≤t≤2
(c)x3(t)=cos(e2.5t),for 0≤t≤3
(d)x4(t)=cos(sin (3πt) cos(5πt)), for 0≤t≤4
P-3.25 It is easy to determine the value of x(t) att=0 directly from the complex
ampltiudes of the spectrum.
(a) When x(t) has a spectrum with lines at f=fk, and complex amplitudes ak, prove
thatx(0)is the sum of all the complex amplitudes (i.e.,/summationtextak).
Note that this result says that x(0)does not depend on the frequencies.
120 CHAPTER 3 SPECTRUM REPRESENTATION
0  fa1a2 a3
a4
f1 f2 f3 f4 Figure P-3.25
(b) Test this result on the graphical spectrum given in Fig. P-3.26. Assume that a∗
1=
a4=2ej3π/4anda∗
2=a3=6ejπ/4, and then determine the value of x(0).
P-3.26 The plots in Fig. P-3.26 show waveforms on the left and spectra on the right.
Match the waveform letter with its corresponding spectrum number. In each case, write
the formula for the signal as a sum of sinusoids.
–3 –2 –1 0 1 2 3–505
Time t (sec)(a)
–3 –2 –1 0 1 2 3–505
Time t (sec)(b)
–3 –2 –1 0 1 2 3–505
Time t (sec)(c)
–3 –2 –1 0 1 2 3–505
Time t (sec)(d)
–3 –2 –1 0 1 2 3–505
Time t (sec)(e)–1.2 0 1.2024
Frequency  (Hz)(1)
–1.5 –0.6 00.6 1.5024
Frequency  (Hz)(2)
–1.2 0 1.2024
Frequency  (Hz)(3)
–2 –1.2 0 1.2 2024
Frequency  (Hz)(4)
–1.5 0 1.5024
Frequenc y  (Hz)(5)
akakakakak2
1.5ej0.5¼
1.5e¡           j0.5¼
1.5e¡  j0.25¼
1.5ej0.25¼
1.5ej¼
1.5e¡  j¼
2
1.5e¡  j0.25¼
1.5ej0.25¼
1.5ej¼
1.5e¡  j¼
1.5e¡  j0.25¼
1.5ej0.25¼
1.5ej¼
1.5e¡  j¼
x(t)x(t)x(t)x(t)x(t)
Figure P-3.26
3-9 PROBLEMS 121
P-3.27 Shown in Fig. P-3.25 are spectrograms (labeled with numbers 1–6) for six
signals over the time period 0 ≤t≤2 s. The frequency axis for each plot has units of
Hz. For each signal description below, identify the corresponding spectrogram.
(1)
0 0.5 1 1.5 20100200300400500Frequency (Hz)
(2)
0 0.5 1 1.5 20100200300400500
(3)
0 0.5 1 1.5 20100200300400500Frequency (Hz)
(4)
0 0.5 1 1.5 20100200300400500
(5)
0 0.5 1 1.5 20100200300400500
Time (s)Frequency (Hz)
(6)
0 0.5 1 1.5 20100200300400500
Time (s)Figure P-3.27
(a)x(t)=cos(−250 πt2) (d)x(t)=cos(100 πt)cos(400 πt)
(b)x(t)=cos(100 πt−π/4)+cos(400 πt) (f)x(t)=cos(200 πt2)
(c)x(t)=cos(1000 πt−250πt2) (e)x(t)=cos(30 e2t)
CHAPTER
4
Sampling and
Aliasing
Computers process numbers or sets of numbers, so continuous waveforms like sinusoidal
signals must be turned into vectors, or streams of numbers for digital signal processing.
The common way to get the numbers is to sample values of the continuous-time signal at
a constant rate such as, e.g., 48,000 samples/s. A key question is how many numbers persecond are needed to adequately represent a continuous-time signal. For constant-rate sampling, this question boils down to ﬁnding the minimum rate. This chapter isconcerned with the conversion of signals between the analog (continuous-time) domainand the digital (discrete-time) domain. The primary objective of our presentation is anunderstanding of the sampling theorem, which states that when the sampling rate is
greater than twice the highest frequency contained in the spectrum of the analog signal, theoriginal signal can be reconstructed exactly from the samples. As we noted in Chapter 2,a signal whose spectrum has a ﬁnite highest frequency is called a bandlimited signal,
and, theoretically, such a signal can be sampled and reconstructed without error.
The process of converting from digital back to analog is called reconstruction.A
common example is playback of audio or video from a CD or DVD. For example, music ona CD or DVD is sampled at 44,100 times/s and stored in a digital form from which a player
122
4-1 SAMPLING 123
reconstructs the continuous (analog) waveform that we hear. The reconstruction process
must “ﬁll in” the missing signal values between the sample times tnby constructing
a smooth curve through the discrete-time sample values x(tn). Mathematicians call
this process interpolation because it may be represented as time-domain interpolation
formula. On the other hand, we will see that a spectrum or frequency-domain pointof view is an alternative way to understand important issues such as bandwidth andreconstructing a signal from its samples.
4-1 Sampling
In previous chapters we have considered several examples of continuous-time signals,
such as sinusoids and periodic signals. Continuous-time signals are representedmathematically by functions of time, x(t), where tis a real number, and we assume that
any value of x(t)is also a real number. It is common to call continuous-time signals analog
signals, meaning that both the signal amplitude and the time variable are assumed to bereal numbers (not discrete values). Recall the discussion in Section 2-4 on p. 39, wherewe plotted waveforms using MATLAB, but actually did not plot the true continuous-timewaveform. Instead, we actually plotted values of the waveform only at isolated (discrete)points in time and then connected those points with straight lines. It might have goneunnoticed, but any value of the signal was represented with a ﬁnite number of bits. Thekey point is that a signal represented in a digital computer is discrete in both time and
amplitude. However, we will study discrete-time signals where the time axis is discrete,but the signal values are considered to be real numbers.
1
Adiscrete-time signal is represented mathematically by an indexed sequence of
numbers. When stored digitally, the signal values are held in memory locations, so theywould be indexed by memory addresses.
2We denote the values of the discrete-time signal
asx[n], where nis the integer index indicating the order of the values in the sequence.
The square brackets []enclosing the argument nprovide a notation that distinguishes
between the continuous-time signal x(t) and a corresponding discrete-time signal x[n].3
We can obtain discrete-time signals in either of the following ways:
(a) We can sample a continuous-time signal at equally spaced time instants, tn=nTs,
that is,
x[n]=x(nT s)−∞<n<∞ (4.1)
where x(t) represents any continuously varying signal such as speech or audio,
which are intrinsically analog signals since they arise in the natural world.
The individual values of x[n]are called samples of the continuous-time signal.
1Quantization of the signal values is rather difﬁcult to analyze and is beyond the scope of this basic text.
2Furthermore, memory registers, being of ﬁnite size, only allow the samples to be represented by a ﬁnite
set of numbers. This quantization is often inconsequential, and we neglect it in our subsequent discussions.
3The terminology for discrete-time signals is not universal, so we may occasionally use the word sequence
in place of signal, or the adjective digital in place of discrete-time, to refer to x[n].
124 CHAPTER 4 SAMPLING AND ALIASING
The ﬁxed time interval between samples, Ts, can also be expressed as a ﬁxed
sampling rate, fs, in samples/s:
fs=1
Tssamples/s
Therefore, an alternative way to write the sequence in (4.1) is x[n]=x(n/f s).
Sampling can be viewed as a transformation or operation that acts on a continuous-
time signal x(t) to produce an output, which is a corresponding discrete-time
signal x[n]. In engineering, it is common to call such a transformation a system,
and to represent it graphically with a block diagram that shows the input andoutput signals along with a name that describes the system operation. The samplingoperation is an example of a system whose input is a continuous-time signal andwhose output is a discrete-time signal as shown in Fig. 4-1. The system blockdiagram of Fig. 4-1 represents the mathematical operation in (4.1) and is called anideal continuous-to-discrete (C-to-D) converter. Its idealized mathematical formis useful for analysis, but an actual hardware system for doing sampling, called ananalog-to-digital (A-to-D) converter, can only approximate the perfect samplingof the C-to-D converter. Hardware A-to-D converters differ from ideal C-to-Dconverters because of real-world problems such as amplitude quantization to 12-or 16-bit digital word length, jitter in the sampling times, and other factors thatare difﬁcult to express in a mathematical model. Since these factors can be madenegligible with careful design, we can henceforth safely conﬁne our presentationto the ideal C-to-D system.
(b) We can also compute the values of a discrete-time signal directly from a formula.
A simple example is
w[n]=n
2−5n+3
which yields the sequence of values {3,−1,−3,−3,−1, 3,9,...} correspond-
ing to the indices n=0,1,2,3,4,5,6,.... The sequence w[n]could have been
obtained by sampling w(t)=t2−5t+3 with a sampling period Ts=1s ,b u ti n
fact there might not be any such signal in the physical world that was sampled.Nevertheless, we still refer to the individual values of the sequence as samples.
Discrete-time signals described by formulas are very common in our study ofdiscrete-time signals and systems.
When we plot discrete-time signals, we use the stem format shown in Fig. 4-2,
which shows eight values (samples) of the sequence w[n]deﬁned previously. Stem
Ideal
C-to-D
Converterx(t) x[n] = x(nTs)
TsFigure 4-1 Block diagram representation of the
ideal continuous-to-discrete (C-to-D) converter.
The parameter Tsspeciﬁes uniform sampling of
the input signal every Tsseconds.
4-1 SAMPLING 125
plots show clearly that the discrete-time signal has values only for integer indices:
in between, the discrete-time signal is undeﬁned.
4-1.1 Sampling Sinusoidal Signals
Sinusoidal signals are examples of continuous-time signals that exist in the “real world”outside the computer, and for which we can also write a simple mathematical formula.Since the effects of sampling are easily understood for sinusoids, we use them as the basisfor our study of sampling.
If we sample a sinusoid of the form Acos(ωt +ϕ), we obtain
x[n]=x(nT
s)
=Acos(ωnT s+ϕ)
=Acos(ˆωn+ϕ) (4.2)
where we have deﬁned ˆωto be
Normalized Radian Frequency
ˆωdef=ωTs=ω
fs(4.3)
The signal x[n]in (4.2) is a discrete-time cosine signal , and ˆωis its discrete-time
frequency. We use a “hat” over ωto denote that this is a new frequency variable. It
is a normalized version of the continuous-time radian frequency with respect to thesampling frequency. Since ωhas units of rad/s, the units of ˆω=ωT
sareradians,
that is, ˆωis a dimensionless quantity. This is entirely consistent with the fact that
the index ninx[n]is dimensionless. Once the samples are taken from x(t), the time
scale information is no longer part of the signal. The discrete-time signal x[n]is just a
sequence of numbers, and these numbers alone carry no information about the samplingperiod, T
s, used in obtaining them. An immediate implication of this observation is that
an inﬁnite number of continuous-time sinusoidal signals can be transformed into thesame discrete-time sinusoid by sampling. All we need to do is change the samplingperiod inversely proportional to the input frequency of the continuous-time sinusoid. For
0 1 2 3 4 5 6 705101520
Time Index .n/5xŒFigure 4-2 Plotting format
for discrete-time signals,
called a stem plot. InMATLAB, the function
stem
produces this plot. Somestudents also refer to the stemplot as a “lollypop” plot.
126 CHAPTER 4 SAMPLING AND ALIASING
example, if ω=200πrad/s and Ts=0.5 ms, then ˆω=0.1πrad. On the other hand, if
ω=1000πrad/s and Ts=0.1 ms, ˆωis still equal to 0 .1πrad.
Figure 4-3(a) shows x(t)=cos(200 πt), a continuous-time sinusoid with frequency
f0=100 Hz. Figure 4-3(b) shows the samples taken with sampling period Ts=0.5 ms.
The sequence is given by the formula x[n]=x(nT s)=cos(0.1πn) , so the discrete-time
radian frequency is ˆω0=0.1π. (Since ˆω0is dimensionless, it is redundant to specify
its units as rad.) The sampling rate in this example is fs=1/Ts=2000 samples/s.
The sample values are plotted as discrete points as in Fig. 4-3(b). The points
are not connected by a continuous curve because we do not have any direct
information about the value of the signal between the sample values. In this case,
there are 20 sample values per period of the signal, because the sampling frequency(2000 samples/s) is 20 times higher than the frequency of the continuous signal(100 Hz). From this discrete-time plot, it appears that the sample values aloneare sufﬁcient to visually reconstruct a continuous-time cosine wave, but withoutknowledge of the sampling rate, we cannot tell what the analog frequency ω
should be.
Another example of sampling is shown in Fig. 4-3(c). In this case, the 100 Hz
sinusoid is sampled at a lower rate (f
s=500 samples/s) resulting in the sequence of
samples x[n]=cos(0 .4πn). In this case, the discrete-time radian frequency is ˆω=0.4π.
The time between samples is Ts=1/fs=2 ms, so there are only ﬁve samples per period
0 0.005 0.01 0.015 0.0201
Time (s)
0 10 20 30 4001
0 5 1001
Sample Index  (a) Continuous Waveform: x.t/Dcos.2 100/t/
(b) Sampled: x.nT s/Dcos.2 100/nT s/, with TsD0:5ms
(c) Sampled: x.nT s/Dcos.2 100/nT s/, with TsD2ms
.n/111
510 200:005 0:01
Figure 4-3 A continuous-time 100 Hz sinusoid
(a) and two discrete-time sinusoids formed by
sampling at fs=2000 samples/s (b) and at
fs=500 samples/s (c).
4-1 SAMPLING 127
of the continuous-time signal. We see that without the original waveform superimposed,
it would be difﬁcult to discern the precise waveshape of the original continuous-timesinusoid.
EXERCISE 4.1 If the sampling rate is fs=1000 samples/s, and the continuous-time signal is x(t)=
cos(ω t), what value of ωgives a sequence of samples identical to the discrete-time
signal shown in Fig. 4-3(c)?
At ﬁrst glance, Exercise 4.1 appears to ask a rather simple question because the
formula in (4.3) can be solved for ωin terms of fsandˆω. Then it is easy to obtain
an answer for Exercise 4.1 as ω=(0.4π)fs=400πrad/s. But is this the only possible
answer? In order to understand this question and ﬁnd many other answers to Exercise 4.1,we need to introduce the concept of an alias.
4-1.2 The Concept of Aliases
A simple deﬁnition of the word alias would involve something like “two names for the
same person, or thing.” When a mathematical formula deﬁnes a signal, that formula canact as a name for the signal. Hence we introduce the concept of an alias by showing that twodifferent discrete-time sinusoid formulas can deﬁne the same signal values. The sinusoidx
1[n]=cos(0 .4πn) is the mathematical formula for the plot shown in Fig. 4-3(c), so it
is one “name” that identiﬁes that signal as having a frequency of 0 .4π. Now consider
another sinusoid formula, x2[n]=cos(2 .4πn), which is a different name that speciﬁes a
different frequency, 2 .4π. To see how a plot of x2[n]would look, we invoke the simple
trigonometric identity cos(θ +2π)=cos(θ) to obtain
x2[n]=cos(2 .4πn)=cos(0.4πn+2πn)=cos(0.4πn)
because 2 πnis an integer number of periods of the cosine function. In other words, the
plot of x2[n]is identical to the plot of x1[n], and this phenomenon that we are going to
call aliasing is solely due to the fact that cosine functions are periodic with period 2 π.DEMO
Sampling Theory Tutorial
Figure 4-4 shows that the stem plots of these two signals, x1[n]=cos(0 .4πn) and
x2[n]=cos(2 .4πn), are identical. Figure 4-4 also shows continuous plots of the signals
cos(0.4πt)and cos(2 .4πt), which when sampled with Ts=1 would give x1[n]andx2[n].
It is clear from Fig. 4-4 that the values of these continuous cosine signals are equal atinteger values, n. Since x
2[n]=x 1[n]for all integers n, we see that x2[n]=cos(2 .4πn)
is another name for the same discrete-time signal (that is, it is an alias of 0.4π).
0 2 4 6 8 10 1201Amplitude
Time Index Axis .n/1Figure 4-4 Illustration of aliasing: two
continuous-time signals drawn through the same
samples. The samples belong to two different cosinesignals with different frequencies, but the cosinefunctions have the same values at n=0,1,2,3,....
Aliasing occurs when a high frequency is
indistinguishable from a low frequency after sampling.
128 CHAPTER 4 SAMPLING AND ALIASING
The frequency of x2[n]isˆω=2.4π, while the frequency of x1[n]isˆω=0.4π. When
speaking about the frequencies, we say that 2 .4πis an alias of 0.4π. There are many
more frequency aliases as the following exercise suggests.
EXERCISE 4.2 Show that 7 cos(8.4 πn−0.2π)is an alias of 7 cos(0 .4πn−0.2π). In addition, ﬁnd
two more frequencies that are aliases of 0 .4πrad.
In the previous exercise, it should be easy to see that adding any integer multiple
of 2πto 0.4πgives an alias, so the following general formula holds for the frequency
aliases of 0 .4π:4
ˆω/lscript=0.4π+2π/lscript /lscript =0,1,2,3,... (4.4)
Theprincipal alias is deﬁned to be the unique alias frequency in the interval −π< ˆω≤π.
In this case, the principal alias is 0 .4π.
However, we are not ﬁnished yet. There are even more aliases. Another trigonometric
identity states that cos(2 π−θ)=cos(θ), so we can generate another alias for x1[n]=
cos(0.4πn)as follows:
x3[n]=cos(1.6πn)
=cos(2πn−0.4πn)
=cos(0.4πn)
The frequency of x3[n]is 1.6π . A general form for all the alias frequencies of this type
would be
ˆω/lscript=−0.4π+2π/lscript /lscript =1,2,3,... (4.5)
For reasons that will become clear when discussing Fig. 4-12, these aliases of a negative
frequency are called folded aliases. In the folded case, the principal alias is −0.4π.
If we examine the aliases for the general discrete-time sinusoid (4.2), an extra
complication arises for the folded case as illustrated by the following analysis:
Acos((2 π−ˆω)n−ϕ)=Acos(2πn−ˆωn−ϕ)
=Acos(−ˆωn−ϕ)
=Acos(ˆωn+ϕ) (4.6)
Notice that the algebraic sign of the phase angles of the folded aliases must be oppositeto the sign of the phase angle of the principal alias.
EXERCISE 4.3 Show that the signal 7 cos(9.6πn +0.2π)is an alias of the signal 7 cos(0 .4πn−0.2π).
It might be instructive to make MATLAB stem plots of these two signals to verifythat the phase must change sign to have identical plots.
4The integer /lscriptcould be negative if we allow negative frequencies, but we prefer to avoid that case for
the time being.
4-1 SAMPLING 129
In summary, we can write the following general formulas for all aliases of a sinusoid
with frequency ˆω0:
ˆω0,ˆω0+2π/lscript, 2π/lscript−ˆω0(/lscript=integer) (4.7)
because the following signals have exactly the same values for all n:
Acos(ˆω0n+ϕ)=Acos((ˆω0+2π/lscript)n+ϕ)
=Acos((2 π/lscript−ˆω0)n−ϕ) (4.8)
If we were to make a stem plot of all of these signals (with speciﬁc numbers for A,ˆω,ϕ,
and/lscript), we would not be able to tell them apart, as was shown in the example of Fig. 4-4.
4-1.3 Sampling and Aliasing
The concept of aliases might seem to be merely a mathematical curiosity, but it is crucial
to the understanding of sampling and reconstruction of analog signals. Recall that if we
sample a continuous-time cosine signal x(t)=cos(ω 0t), we get a discrete-time cosine
signal x[n]=x(nT s)=cos(ˆω0n), where ˆω0=ω0Ts. As we will show in the following
sections, if we hope to reconstruct the original analog signal, it is necessary that thenormalized frequency ˆω
0be the principal alias, that is,
−π< ˆω0=ω0Ts<π (4.9)
When (4.9) is notsatisﬁed, we say that “aliasing has occurred .”Henceforth, when we
use the term aliasing , we mean that when a signal is sampled, the resulting samples
are identical to those obtained by sampling a lower frequency signal (corresponding to
the principal alias). Since the original identity of the signal is ambiguous when aliasingoccurs in sampling, it is not straightforward to reconstruct the original analog signal fromits samples. Thus, it is generally desirable to avoid aliasing when designing a system thatsamples continuous-time signals.
4-1.4 Spectrum of a Discrete-Time Signal
We have seen that it is sometimes very useful to represent a continuous-time sinusoidal
signal by a spectrum plot consisting of spectrum lines. We should expect to see somethingsimilar in a spectrum plot for a discrete-time signal. The spectrum of a continuous-timesinusoid exhibits two spectrum lines at the frequencies ±ωrad/s. The alias phenomenon
changes the spectrum plot because a given discrete-time sinusoidal sequence couldcorrespond to an inﬁnite number of different frequencies ˆω. Our approach is to take this
into account by making a spectrum plot that explicitly shows that there are many differentdiscrete-time sinusoids that have the same samples. Figure 4-5 shows that we can do this bydrawing the spectrum representation of the principal alias along with several more of theother aliases.
5In Fig. 4-5, the spectrum plot includes a representation of the principal alias
5We should draw an inﬁnite number of aliases, but we cannot show them all.
130 CHAPTER 4 SAMPLING AND ALIASING
02: 0 :6 :4
Frequency .O!/MagnitudeSpectrum with Aliases for xŒDcos.0:4 /
1
2
Figure 4-5 Spectrum of a discrete-time sinusoid.
The principal alias components are at ˆω=±0.4π.
x1[n]=cos(0 .4πn), and two of the aliases x2[n]=cos(2 .4πn)andx3[n]=cos(1.6πn) .
Like the two-sided representation in (3.4) on p. 70, the spectrum of each discrete-time
alias signal consists of a positive frequency component and a corresponding componentat negative frequency. Thus, x
1[n]is represented by the components at ±0.4π, andx2[n]
is represented by the black components at ±2.4π, and the ﬁrst folded alias is represented
by the gray components. Another way of thinking about constructing the plot in Fig. 4-5is that the spectrum of the principal alias signal consisting of components at ±0.4πwas
m o v e du pb y2 πand down by 2 π. In other words, the principal (or base) band of the
spectrum was shifted by integer multiples of 2 π.
In the case of the spectrum representation of a continuous-time signal, the assumption
was that allof the spectrum components were added together to synthesize the continuous-
time signal. This is notso for the discrete-time case because there are an inﬁnite number
of aliases for each principal alias component and they represent the same thing. In a plotlike Fig. 4-5, we show spectrum lines for several of the aliases simply to emphasize thefact that many different frequencies could represent the same time-domain sequence. Inthe case of a sum of discrete-time sinusoids, such as
y
1[n]=2 cos(0 .4πn)+cos(0.6πn) (4.10)
we would make a plot like Fig. 4-5 with many aliases for each of the cosine signals andsuperimpose them on a single plot. To synthesize the time-domain signal correspondingto a given spectrum representation, we simply need to select one signal from each of thedistinct alias sets. For example, (4.10) includes only the principal aliases since 0 .4πand
0.6πare both less than π.
EXERCISE 4.4 Make a spectrum plot for the signal of (4.10) similar to Fig. 4-5 showing the principal
alias and two other alias frequencies for each cosine signal. How would your plotchange if the signal was y
2[n]=2 cos(0 .4πn)+cos(2.6πn) ?
4-1.5 The Sampling Theorem
The plots shown in Fig. 4-3 naturally raise the question of how frequently we must
sample in order to retain enough information to reconstruct the original continuous-timesignal from its samples. The amazingly simple answer is given by the Shannon sampling
4-1 SAMPLING 131
theorem, a theoretical pillar of modern digital communications, digital control, and digital
signal processing.
Shannon Sampling Theorem
A continuous-time signal x(t) with frequencies no higher than fmaxcan be
reconstructed exactly from its samples x[n]=x(nT s), if the samples are taken at
a ratefs=1/Tsthat is greater than 2 fmax.
Notice that the sampling theorem involves two issues. First, it talks about recon-
structing the signal from its samples, although it never speciﬁes the process for doingthe reconstruction. Second, it gives a minimum sampling rate that is dependent on thefrequencies that are contained in the spectrum of the continuous-time signal x(t).
The minimum sampling rate of 2 f
maxis called the Nyquist rate.6We can see examples
of Nyquist rate sampling in many commercial products. For example, audio CDs use asampling rate of 44.1 kHz for storing music signals in a digital format. This numberis slightly more than two times 20 kHz, which is the generally accepted upper limitfor human hearing and perception of musical sounds. In all applications, the Nyquistrate is signiﬁcant because we are usually motivated to use the lowest possible samplingrate in order to minimize system cost in terms of storage and processing speed persample.
The Shannon theorem states that reconstruction of a sinusoid is possible if we have
more than two samples per period. What happens when we don’t sample fast enough? Thesimple answer is that aliasing occurs and reconstruction becomes difﬁcult or impossible.Section 4-2 delves into this issue by using a spectrum view of the C-to-D conversionprocess.
4-1.6 Ideal Reconstruction
The sampling theorem suggests that a process exists for reconstructing a continuous-time
signal from its samples. This reconstruction process would undo the C-to-D conversion soit is called D-to-C conversion. The ideal D-to-C converter block depicted in Fig. 4-6 shows
the input and output signals. Since the sampling process of the ideal C-to-D converter isdeﬁned by the mathematical substitution t=n/f
sas in (4.1), we would expect the same
relationship to govern the ideal D-to-C converter, that is,
y(t)=y[n]/vextendsingle/vextendsingle/vextendsingle
n=fst−∞<t<∞ (4.11)
However, this substitution is not practical because it is only true when y[n]is expressed
as a sum of sinusoids formula. In the special case where y[n]was produced by sampling
one sinusoid above the Nyquist rate to obtain y[n]=A cos(2πf0n/fs+ϕ), we can use
6Harry Nyquist and Claude Shannon were researchers at Bell Telephone Laboratories who each made
fundamental contributions to the theory of sampling and digital communication during the period from 1920
to 1950.
132 CHAPTER 4 SAMPLING AND ALIASING
Ideal
D-to-C
Convertery[n] y(t)
fs =1
TsFigure 4-6 Block diagram of the ideal discrete-to-
continuous (D-to-C) converter when the sampling rate is
fs=1/Ts. The output signal must satisfy y(nT s)=y[n].
the substitution in (4.11) to produce y(t)=Acos(2πf0t+ϕ)at the D-to-C output. This
is convenient because we obtain a mathematical formula for y(t). In practice, we only
have a sequence of numbers for y[n]that was obtained by sampling, and we do not know
the formula for y[n], or there is no simple formula for the signal, and so things are not
that easy. An actual hardware digital-to-analog (D-to-A) converter built with electronic
components cannot perform a mathematical substitution like (4.11). Instead, it must “ﬁllin” the signal values between the sampling times, t
n=nTs. In Section 4-3, we will see how
interpolation can be used to build an D-to-A converter that approximates the behavior
of the ideal D-to-C converter.
If the ideal C-to-D converter samples a cosine signal without the confusion of aliasing,
then we can describe its operation as frequency scaling .F o ry [n]above, the discrete-time
frequency is ˆω=2πf0/fs, and the continuous-time frequency of y(t) isω=2πf0. Thus
the relationship appears to be ω=ˆωfs=ˆω/T s. We can use the same result to describe
the D-to-C converter if we solve the frequency scaling equation (4.3) for ωin terms of ˆω,
ω=ˆωfs (4.12)
Thus each sinusoidal component in a discrete-time signal could be mapped to
a sinusoidal component of the continuous-time output signal. But there is onemore issue: the discrete-time signal has aliases—an inﬁnite number of them givenby (4.7). Which discrete-time frequency should be used in (4.12)? Theoretically,the selection rule is arbitrary, but as we deﬁne the ideal D-to-C converter, italways selects the lowest possible frequency components (the principal aliases).
These frequencies are guaranteed to lie in the range −π< ˆω≤π, so when
D-to-C converting from ˆωto analog frequency, the output frequency always lies between
−f
s/2and +f s/2.DEMO
Continuous-Discrete
Sampling In summary, the Shannon sampling theorem guarantees alias-free sampling if x(t)
contains no frequencies higher than fmax, and if fs>2fmax. Furthermore, when aliasing
did not occur in sampling, the output signal y(t) of the ideal D-to-C converter is identical
to the signal x(t), the original input to the ideal C-to-D converter in Fig. 4-7.
Ideal
C-to-D
ConverterIdeal
D-to-C
Converterx[n] x(t) y(t)
fs =1
Tsfs =1
TsFigure 4-7 Sampling and reconstruction
system where the rates of the C-to-D and
D-to-C converters are the same.
4-2 SPECTRUM VIEW OF SAMPLING AND RECONSTRUCTION 133
4-2 Spectrum View of Sampling and Reconstruction
We now present a detailed spectrum explanation of the sampling and reconstruction
process. Because the output of the C-to-D converter is a discrete-time signal with an
inﬁnite number of spectral aliases, we need to use the spectrum diagram that includes all
of the aliases as discussed in Section 4-1.4. Then the possible aliasing of frequencies inFig. 4-7 can be tracked via the movement of spectrum lines in the frequency domain. DEMO
Aliasing and Folding
4-2.1 Spectrum of a Discrete-Time Signal Obtained by Sampling
If a discrete-time sinusoid (4.2) is obtained by sampling, its frequency is given by(4.3). After we include all the aliases as predicted by (4.7), it is necessary to plot aninﬁnite number of spectrum lines to have a thorough representation of the spectrum. Ofcourse, we can only plot a few of them and indicate that more exist outside our plottingrange.
Suppose that we start with a continuous-time sinusoid, x(t)=Acos(ω
0t+ϕ), whose
spectrum consists of twospectrum lines at ±ω 0with complex amplitudes of1
2Ae±jϕ. The
spectrum of the sampled discrete-time signal
x[n]=x(n/f s)=Acos((ω 0/fs)n+ϕ)
=1
2Aejϕej(ω 0/fs)n+1
2Ae−jϕej(−ω0/fs)n
also has two spectrum lines at ˆω=±ω0/fs,but it also must contain all the aliases at the
following discrete-time frequencies:
ˆω=ω0/fs+2π/lscript /lscript =0,±1,±2,...
ˆω=−ω0/fs+2π/lscript /lscript =0,±1,±2,...(4.13)
This illustrates the important fact that when a discrete-time sinusoid is derived by
sampling, the alias frequencies all are based on the normalized value, ω0/fs, of the
frequency of the continuous-time signal. The alias frequencies are obtained by addinginteger multiples of 2 πradians to the frequency ˆω=ω
0/fs.
EXERCISE 4.5 Plot the spectrum of the continuous-time signal x(t)=cos(2π(100)t+π/3).
The next sections show examples of sampling a continuous-time 100 Hz sinusoid
of the form x(t)=cos(2π(100)t+π/3). The sampling frequency is varied to show the
discrete-time spectrum for different cases, where fsis above or below the Nyquist rate
in Figs. 4-8 through 4-11. All were constructed with a MATLAB M-ﬁle that plots thelocation of spectrum components involved in the sampling process.
134 CHAPTER 4 SAMPLING AND ALIASING
0100 400 6000 = 500 Hz
Analog Frequency (Hz)(a) Spectrum of the 100 Hz Cosine Wave
0 10 20 30 40 50 60 70 8001(b) Sampled at   = 2 ms (  = 500 Hz)
Time (ms)Amplitude
0(c) Discrete-Time Spectrum of 100 Hz Sinusoid
2: 0 :6 :4
Frequency .O!/Magnitude Magnitude
(100 Hz)Ts
1100 400 600
1
21
2
fsfs
Figure 4-8 Over-sampling a 100 Hz sinusoid at
fs=500 samples/s. (a) Continuous-time
spectrum; (b) time-domain plot, showing the
samples x[n]as gray dots, the original signal x(t)
as a continuous orange line, and the reconstructed
signal y(t) as a dashed black line, which is the
100 Hz sinusoid passing through the same samplepoints; and (c) discrete-time spectrum plot,showing the positive and negative frequencycomponents of the original sinusoid at
ˆω=±0.4πrad, along with two aliases.
4-2.2 Over-Sampling
In most applications, we try to obey the constraint of the sampling theorem by sampling
at a rate higher than twice the highest frequency in order to avoid the problems ofaliasing. This is called over-sampling. For example, when we sample the 100 Hz
sinusoid, x(t)=cos(2π(100)t+π/3), at a sampling rate of f
s=500 samples/s, we
are sampling at two and a half times the Nyquist rate. The time- and frequency-domain plots are shown in Fig. 4-8. With reference to the C-to-D and D-to-C blocksin Fig. 4-7, Fig. 4-8(a) shows the spectrum of the input signal x(t), while Fig. 4-8(c)
shows the spectrum of x[n]=cos(0 .4πn+π/3), which is the output of the C-to-D
converter. The time-domain plots of x(t),x[n], and the reconstructed output y(t) are all
in Fig. 4-8(b).
For the continuous-time spectrum in Fig. 4-8(a), the frequency axis is measured in
hertz. Note that the negative-frequency complex exponential component of the cosine isdenoted witha*a tt h et o po fi t sspectrum line to indicate that its complex value is theconjugate of the value of the positive frequency component. Figure 4-8(b) shows x(t),
x[n], and y(t) together, but its horizontal axis is labeled with time (t)in milliseconds, so
4-2 SPECTRUM VIEW OF SAMPLING AND RECONSTRUCTION 135
x[n]is plotted versus nTs. Figure 4-8(c) contains the spectrum of the discrete-time signal
versus the normalized frequency ˆω.According to the frequency scaling equation (4.3), the
input analog frequency of 100 Hz maps to ˆω=2π(100)/fs=2π(100)/500 =0.4π,s o
in Fig. 4-8(c) we plot spectrum lines at ˆω=±0.4π. Then we also draw all the aliases at
ˆω=0.4π+2π/lscript /lscript =0,±1,±2,...
ˆω=−0.4π+2π/lscript /lscript =0,±1,±2,...
The D-to-C converter transforms the discrete-time spectrum to the continuous-time
output spectrum. But there is one complication: the D-to-C converter must select just
one pair of spectrum lines from all the possibilities given by (4.13). The selectionrule is arbitrary, but in order to be consistent with real D-to-A converter operation, wemust assert that the ideal D-to-C converter always selects the lowest possible frequencyfor each set of aliases. These are what we have called the principal alias frequencies,and in Fig. 4-8(c) these are the frequency components that fall inside the dashedbox, that is, in the range |ˆω|<π. Since the frequency components inside the dashed
box satisfy |ˆω|<π, the spectral lines for the output always lie between −f
s/2and
+f s/2. When the principal alias frequencies in Fig. 4-8(c) are converted from ˆωto
analog frequency, the result is f=±0.4π(fs/2π)=±100 Hz which is identical to
Fig. 4-8(a).
In summary, for the over-sampling case where the original frequency f0is less than
fs/2, the original waveform is reconstructed exactly. In the present example, f0=100 Hz
andfs=500, so the Nyquist condition of the sampling theorem is satisﬁed, and the output
y(t) equals the input x(t) as shown in Fig. 4-8(b).
4-2.3 Aliasing Due to Under-Sampling
When fs<2f0, the signal is under-sampled and we say that aliasing has occurred.
For example, if fs=80 Hz and f0=100 Hz, the sampling rate is below the Nyquist
rate and we can show that aliasing confusion occurs. In Fig. 4-9(a), the spectrum ofthe analog input signal x(t) is shown, along with an arrow indicating the sampling rate
atf
s=80 Hz. The spectrum of the discrete-time signal (Fig. 4-9(c)) contains lines
atˆω=±2π(100)/fs=±2π(100)/80=±2.5π, as predicted by the frequency scaling
equation (4.3). In order to complete the discrete-time spectrum we must also draw all thealiases at
ˆω=2.5π+2π/lscript /lscript =0,±1,±2,...
ˆω=−2.5π+2π/lscript /lscript =0,±1,±2,...
In Fig. 4-9(b), the 100 Hz sinusoid (solid orange line) is sampled too infrequently to
be recognized as the original 100 Hz sinusoid. When we examine the D-to-C process forthis case, we use the lowest frequency spectrum lines from the discrete-time spectrum(Fig. 4-9(c)). These are the principal aliases at ˆω=±0.5π, so the output spectrum lines
are atf=±0.5π(f
s/2π)=±80/4=±20 Hz. Alternatively, we can state this result in
the time domain by observing that the same samples would have been obtained from a
136 CHAPTER 4 SAMPLING AND ALIASING
-80 -60 -40 -20 0 20 40 60 80 1000 = 80 Hz
Analog Frequency (Hz)(a) Spectrum of the 100 Hz Cosine Wave
0 10 20 30 40 50 60 70 8001(b) Sampled at   = 12.5 ms (  = 80 Hz)
Time (ms)Amplitude
0(c) Discrete-Time Spectrum of 100 Hz Sinusoid
2: 0 :5 :5
Frequency .O!/Magnitude Magnitude
(20 Hz)Ts
1100
1
21
2
fsfs
Figure 4-9 Under -sampling a 100 Hz sinusoid
atfs=80 samples/s. (a) Continuous-time
spectrum; (b) time-domain plot, showing the
samples x[n]as gray dots, the original signal
x(t) as a continuous orange line, and the
reconstructed signal y(t) as a dashed black
line, which is a 20 Hz sinusoid passing throughthe same sample points; and (c) discrete-timespectrum plot, showing the positive andnegative frequency components of the originalsinusoid at ˆω=±2.5πrad, along with two sets
of alias components.
20 Hz sinusoid. The reconstructed signal is that 20 Hz sinusoid shown as the black dashed
line in Fig. 4-9(b). Notice that the alias frequency of 20 Hz can be found by subtractingf
sfrom 100 Hz.
The aliasing of sinusoidal components can have some dramatic effects. Figure 4-10
shows the case where the sampling rate and the frequency of the sinusoid are the same.In Fig. 4-10(b), we see that one sample is taken per period, and all the samples arethe same value. In other words, x[n]is DC, which is the same as a sinusoid with zero
frequency. We can justify this result in the frequency domain (Fig. 4-10(c)) by noting thatthe discrete-time spectrum contains lines at ˆω=±2π(100/f
s)=±2π, and also at the
aliases separated by 2 π/lscript. Thus, two of the aliases land at ˆω=0, and the sum of these
two is the value that is reconstructed by the D-to-C converter.
4-2.4 Folding Due to Under-Sampling
Figure 4-11 shows the case where under-sampling leads to the type of aliasing called
folding. Here the sampling rate is fs=125 samples/s, which is between f0and 2f0.
Once again, Fig. 4-11(a) shows the spectrum of the continuous-time signal with spectrum
4-2 SPECTRUM VIEW OF SAMPLING AND RECONSTRUCTION 137
0 50 1000 = 100 Hz
Analog Frequency (Hz)(a) Spectrum of the 100 Hz Cosine Wave
0 10 20 30 40 50 60 70 8001(b) Sampled at   = 10 ms (  = 100 Hz)
Time (ms)Amplitude
01(c) Discrete-Time Spectrum of 100 Hz Sinusoid
0
Frequency .O!/MagnitudeMagnitude
(0 Hz)Ts
150 1001
2
fsfs
Figure 4-10 Under -sampling a 100 Hz sinusoid at
fs=100 samples/s. (a) Continuous-time spectrum;
(b) time-domain plot, showing the samples x[n]as
gray dots, the original signal x(t) as a continuous
orange line, and the reconstructed signal y(t) as a
dashed black line, which isa0H zsinusoid passing
through the same sample points; and (c) discrete-timespectrum plot, showing the positive and negativefrequency components of the original sinusoid at
ˆω=±2πrad, along with parts of two sets of alias
components that are superimposed at ˆω=0t og i v ea
DC value of
1
2ejπ/3+1
2e−jπ/ 3=cos(π/3).
lines at ±100 Hz. The discrete-time spectrum (Fig. 4-11(c)) is constructed by mapping
±100 Hz to the two spectrum lines at ˆω=±2π(100/fs)=±1.6π , and then including
all the aliases to get lines at
ˆω=1.6π+2π/lscript /lscript =0,±1,±2,...
ˆω=−1.6π+2π/lscript /lscript =0,±1,±2,...
In this case, an interesting thing happens. The two frequency components between ±πare
ˆω=±0.4π, but the one at ˆω=+0.4πis an alias of the negative frequency component
at−1.6π , which is why this situation is called folding. The analog frequency of the
reconstructed output is f=0.4π(fs/2π)=fs/5=25 Hz. An additional fact about
folding is that phase of the reconstructed analog signal changes sign. If the original 100 Hz
sinusoid had a phase of ϕ=+π/3, then the phase of the component at ˆω=−1.6π would
be−π/ 3, and it follows that the phase of the aliased component at ˆω=+0.4πwould
also be −π/ 3. After reconstruction, the phase of y(t) would be −π/ 3. It is possible to
observe this “phase-reversal” in the time-domain plot of Fig. 4-11(b). The input signal(solid orange line) is going down at t=0, while the reconstructed output (black dashed
line) is going up. This means that when we sample a 100 Hz sinusoid at a sampling rate
138 CHAPTER 4 SAMPLING AND ALIASING
0 50 100 1500 = 125 Hz
Analog Frequency (Hz)(a) Spectrum of the 100 Hz Cosine Wave
0 10 20 30 40 50 60 70 8001(b) Sampled at   = 8 ms (  = 125 Hz)
Time (ms)Amplitude
0(c) Discrete-Time Spectrum of 100 Hz Sinusoid
2: 0 :6 :4
Frequency .O!/Magnitude Magnitude
(25 Hz)Ts
150 100 150
1
21
2
fsfs
Figure 4-11 Under-sampling a 100 Hz sinusoid
atfs=125 samples/s. (a) Continuous-time
spectrum; (b) time-domain plot, showing the
samples x[n]as gray dots, the original signal x(t)
as a continuous orange line, and the reconstructed
signal y(t) as a dashed black line, which is a
25 Hz sinusoid passing through the same samplepoints; and (c) discrete-time spectrum plot,showing the positive and negative frequencycomponents of the original sinusoid at
ˆω=±1.6π rad, along with two sets of aliases.
Note how the phase is negated in this example ofaliasing by folding.
of 125 samples/s, we get the same samples that we would have gotten by sampling a
25 Hz sinusoid, but with opposite phase. This is depicted in Fig. 4-11 by showing that thecomplex amplitude of the positive frequency component at 0 .4πis due to the negative
frequency alias (−1.6π +2π).
4-2.5 Maximum Reconstructed Frequency
The preceding examples have one thing in common: the output frequency is always less
thanfs/2. For a sampled sinusoid, the ideal D-to-C converter picks the alias frequency
closest to ˆω=0 and maps it to the output analog frequency via f=ˆω(fs/2π). Since
the principal alias is guaranteed to lie between −πand+π, the output frequency always
lies between −fs/2 and +fs/2.
One striking demonstration of this fact can be made by implementing the system in
Fig. 4-7 with a linear FM chirp signal as the input, and then listening to the reconstructed
4-2 SPECTRUM VIEW OF SAMPLING AND RECONSTRUCTION 139
0 500 1000 1500 2000 250005001000150020002500Folding of Frequencies about 
Folding Frequency = 
Input Frequency fx(Hz)Apparent Frequency fy(Hz)
1
2fs1
2fs
Figure 4-12 Folding of a sinusoid sampled at
fs=2000 samples/s. The apparent frequency is the
lowest frequency of a sinusoid that has exactly the
same samples as the input sinusoid.
output signal, or computing its spectrogram.7This Chirp Synthesis demo is available on
the Companion Website, and is part a lab entitled AM and FM Sinusoidal Signals.
DEMO
Chirp SynthesisTo understand the Chirp Synthesis demo, suppose that the instantaneous frequency
of the input chirp increases according to the formula fx(t)=αtHz, where αis the
chirp rate. Then the input signal is x(t)=cos(παt2), and after sampling at a rate fs,w e
obtain
x[n]=cos(παn2/f2
s)
When y(t) is reconstructed from x[n], what would you hear? It turns out that the output
frequency goes up and down as shown in Fig. 4-12. We suspect that something like this
will happen because we know that the output cannot have a frequency higher than fs/2,
even though the instantaneous frequency of the input continually increases above fs/2. LAB
AM and FM Sinusoidal
SignalsExplaining the up and down behavior of the output frequency takes more thought. If
we concentrate on a very short time interval surrounding the time t=t0, then the concept
of instantaneous frequency implies that input signal can be assumed to have a constant
frequency equal to fx(t0)=αt0neart=t0. The spectrum of this constant-frequency
approximation to x(t) neart=t0has two spectrum lines at ±αt 0which, after sampling,
map to the normalized discrete radian frequencies, ±ˆωx=±2π(αt 0)/fs. Then we must
determine all of the aliases, and use the principal alias to determine the reconstructedoutput frequency. There is no easy formula, so we just consider a few separate cases.First of all, when the input frequency f
x(t)=αtgoes from 0 to fs/2,ˆωxincreases
from 0 to πand is equal to the principal alias, so the output frequency will be equal
to the input frequency. Next consider the case when the input frequency fx(t)=αt
increases from fs/2t ofs. The corresponding frequencies for x[n]increase from ˆωx=π
toˆωx=2πfor the positive frequency, while its negative frequency companion goes
from−ˆωx=−πdown to −ˆωx=−2π. The principal alias of this negative frequency
component is −ˆωx+2πwhich goes from ˆωx=+πdown to ˆωx=0, while the principal
7The spectrogram of a chirp without aliasing was shown in Fig. 3-29 in Section 3-7.2. An in-depth
discussion of the spectrogram can be found in Section 8-7.
140 CHAPTER 4 SAMPLING AND ALIASING
alias of the positive frequency component goes from ˆω=−πup to ˆωx=0. Therefore,
the output signal which is reconstructed from the principal alias has a frequency going
fromf=fs/2d o w nt o f=0.
Figure 4-12 shows a plot of the output frequency fy(t)versus the input frequency
fx(t).A s fxgoes from fs/2t ofs, the output frequency fydecreases from fs/2t o0
and then starts increasing when ˆωxbecomes greater than 2 π. The terminology folded
frequency comes from the fact that the input and output frequencies are mirror imageswith respect to the line at f
s/2, and would lie on top of one another if the graph were
folded about the fs/2 line in Fig. 4-12.
4-2.6 Sampling and Reconstruction GUI
To develop greater understanding of the sampling and reconstruction process
discussed previously and shown in Fig. 4-7, we can use the MATLAB GUIcalled
con2dis whose interface is shown in Fig. 4-13. The GUI display is a
2×3 array of panels. The top row shows the time-domain signals and from left
to right follows the signal ﬂow in Fig. 4-7. The leftmost signal is the input,which is a continuous-time sinusoid; the middle is the discrete-time signal aftersampling; and the right is the output of the D-to-C converter, which is again acontinuous-time sinusoid. The bottom row shows the frequency-domain spectrum of the
Figure 4-13 User interface for the con2dis GUI for a speciﬁc case where the sampling frequency is 20 Hz. The
frequency of the input signal being sampling is 16.8 Hz which is between fs/2 and fs, so there is a folded alias.
The frequency of the output signal must be less than fs/2 which is 3.2 Hz as seen in the upper right panel.
4-3 DISCRETE-TO-CONTINUOUS CONVERSION 141
time-domain signals above. The leftmost spectrum shows the two spectrum lines8for
the input continuous-time sinusoid; the middle spectrum is the spectrum for the
discrete-time signal and exhibits the 2 πperiodicity of the ˆωdomain; and the rightmost
spectrum again has two spectrum lines which are the lowest frequency pair of linesobtained by frequency scaling (f=ˆω/2πf
s)from the two spectrum lines in the ˆωdomain
which are between −πand+π. The frequency axis of the GUI display can be toggled
between radian and cyclic frequency units.DEMO
Continuous-Discrete
Sampling
The GUI can be controlled in two ways: the input frequency and phase can be varied
while the sampling rate is constant, or the sampling rate can be varied for a ﬁxed input
sinusoid. By using the frequency slider in the lower left to continuously raise the inputfrequency, the folding phenomenon described in Fig. 4-12 can be observed by watchingthe output frequency go up and down.
4-3 Discrete-to-Continuous Conversion
The purpose of the ideal D-to-C converter is to interpolate a smooth continuous-time
function through the given discrete-time samples y[n]. Thus, in the special case when
y[n]=A cos(2πf0nTs+ϕ), and if f0<fs/2, then according to the sampling theorem,
the ideal converter should produce
y(t)=Acos(2πf0t+ϕ) (4.14)
For sampled sinusoidal signals only, the ideal D-to-C converter in effect replaces nby
fstin the cosine formula. On the other hand, if f0>fs/2, then we know that aliasing
or folding confusion has occurred, and the ideal D-to-C converter reconstructs a cosinewave with frequency equal to the principal alias frequency which is less than f
s/2.
4-3.1 Interpolation with Pulses
How does an actual D-to-C converter work? In this section, we explain how the D-to-C converter does interpolation through the given discrete-time samples y[n], and then
describe a practical system that is nearly the same as the ideal D-to-C converter. Theseactual hardware systems, called D-to-A converters, approximate the behavior of the idealD-to-C system as in (4.14).
A general formula that describes a broad class of D-to-C converters is given by the
equation
y(t)=
∞/summationdisplay
n=−∞y[n]p(t −nTs) (4.15)
where p(t) is the characteristic pulse shape of the converter. Equation (4.15) states that the
output signal is produced by superimposing scaled and time-shifted pulses. In other words,at each sample time t
n=nTs, a shifted pulse p(t−nTs)is emitted with an amplitude
8Note that the negative-frequency spectral line has a dot at the top.
142 CHAPTER 4 SAMPLING AND ALIASING
0 5 1001(a) Square Pulse
0 5 1001(b) Triangular Pulse
0 5 1001(c) Second-Order Cubic Spline
Time (ms)0 5 1001(d) Ideal Pulse  (sinc)
Time (ms)1
21
21
21
2
5 55 5
10 1010 10Figure 4-14 Four different pulses for D-to-C
conversion. The sampling period is Ts=5 ms,
or equivalently, fs=200 Hz. The duration of
the pulses is (a) Tsfor the square pulse, (b) 2 Ts
for the triangular pulse, (c) 4 Tsfor the cubic
spline, and (d) inﬁnite for the ideal pulse.
proportional to the sample value y[n]corresponding to that time instant.9Note that all
the pulses have the same waveshape p(t). If the pulse duration is greater than or equal to
Ts, then the gaps between samples are ﬁlled by adding overlapped pulses.
Equation (4.15) requires that we choose the pulse waveform p(t). Unfortunately, we
have not yet studied the mathematical tools needed to derive the optimal pulse shape for
exact reconstruction of a waveform y(t)from its samples y[n]=y(nT s)as is predicted to
be possible in the Shannon sampling theorem. This optimal pulse shape can be constructedduring a mathematical proof of the sampling theorem. Nonetheless, we will demonstratethe plausibility of (4.15) by considering some simple examples that use suboptimal pulseshapes. Figure 4-14 shows four possible pulse waveforms for D-to-C conversion whenf
s=200 Hz.DEMO
Reconstruction Movies
4-3.2 Zero-Order Hold Interpolation
The simplest pulse shape that we might propose is a symmetric square pulse of the form
p(t)=/braceleftBigg
1−1
2Ts<t≤1
2Ts
0 otherwise(4.16)
The total width of the square pulse plotted in Fig. 4-14(a) is Ts=5 msec and its amplitude
is 1. Therefore, each term y[n]p(t −nTs)in the sum (4.15) creates a ﬂat region of
amplitude y[n]centered on t=nTs. This is shown in Fig. 4-15(a), which shows the
9Apulse is a continuous-time waveform that is concentrated in time.
4-3 DISCRETE-TO-CONTINUOUS CONVERSION 143
0 0.005 0.01 0.01501(a) Zero-Order Reconstruction:   = 83 Hz,   = 200 Hz
0 0.005 0.01 0.01501(b) Original and Reconstructed Waveforms
Time (s)0:0050:005
0:010:01
11f0 fs
Figure 4-15 D-to-C conversion using a square
pulse. (a) Shifted square pulses (dashed
orange); (b) sum using (4.15) (solid orange).
Flat regions are characteristic of the zero-orderhold.
original 83 Hz cosine wave (solid gray line), its samples taken at a sampling rate of
200 samples/s, and the individual shifted and scaled pulses, y[n]p(t −nTs)(dashed line).
The sum of all the shifted and scaled pulses creates a “stairstep” waveform, as shown in
Fig. 4-15(b), where the gray curve is the original cosine wave x(t), and the solid orange
curve shows the reconstructed waveform using the square pulse.10DEMO
Reconstruction Movies
The space between samples has indeed been ﬁlled with a continuous-time
waveform—however, it is clear from Fig. 4-15(b) that the reconstructed waveform for thesquare pulse is a poor approximation of the original cosine wave. Thus, using a squarepulse in (4.15) is D-to-C conversion, but not ideal D-to-C conversion. Even so, this is a
useful model, since many physically realizable D-to-A converters produce outputs thatlook exactly like this!
4-3.3 Linear Interpolation
The triangular pulse plotted in Fig. 4-14(b) is deﬁned as a pulse consisting of the ﬁrst-order
polynomial (straight line) segments
p(t)=/braceleftBigg
1−|t|/Ts−Ts≤t≤Ts
0 otherwise(4.17)
Figure 4-16(a) shows the original 83 Hz cosine wave (solid gray curve) and its samples,together with the scaled pulses y[n]p(t −nT
s)(dashed orange) for the triangular pulse
shape. In this case, the output y(t) of the D-to-C converter at any time tis the sum of
10Since a constant is a polynomial of zero order, and since the effect of the ﬂat pulse is to “hold” or
replicate each sample for Tss, the use of a ﬂat pulse is called zero-order hold reconstruction.
144 CHAPTER 4 SAMPLING AND ALIASING
0 0.005 0.01 0.01501(a) First-Order Reconstruction:   = 83 Hz,   = 200 Hz
0 0.005 0.01 0.01501(b) Original and Reconstructed Waveforms
Time (s)0:0050:005
0:010:01
11f0 fs
Figure 4-16 D-to-C conversion using a
triangular pulse. (a) Shifted triangular pulses
(dashed orange); (b) sum using (4.15) (solid
orange). The result is reconstruction by linearinterpolation.
two scaled triangular pulses that overlap at that time instant. Since the duration of the
triangular pulse is 2 Ts, and neighboring pulses are shifted by Ts, no more than two pulses
can overlap at any given time. The resulting output is shown as the solid orange curve in
Fig. 4-16(b). Note that the result is that samples are connected by straight lines. Also notethat the values at t=nT
sare exactly correct. This is because the triangular pulses are zero
at±Ts, and only one scaled pulse (with value y[n]att=nTs) contributes to the value
att=nTs. In this case, we say that the continuous-time waveform has been obtained by
linear interpolation between the samples. This is a smoother and better approximation of
the original waveform (thin gray curve), but there is still signiﬁcant reconstruction errorfor this signal.
4-3.4 Cubic-Spline Interpolation
A third pulse shape is shown in Fig. 4-14(c). This pulse consists of four cubic spline
(third-order polynomial) segments. Note that its duration is twice that of the triangularpulse and four times that of the square pulse. Also, note that this pulse is zero at the keylocations:
p(t)=0 for t=±T
s,±2Ts
and its derivative is smooth at the sample locations. The reconstruction with thecubic-spline pulses is shown in Fig. 4-17. Figure 4-17(a) shows the original 83 Hzwaveform (solid gray), its samples (f
s=200 samples/s), and the shifted and scaled
pulses y[n]p(t −nTs)(dashed orange). Now note that, for values of tbetween two
adjacent sample times, four pulses overlap and must be added together in the sum (4.15).
This means that the reconstructed signal at a particular time instant, which is the sum
4-3 DISCRETE-TO-CONTINUOUS CONVERSION 145
0 0.005 0.01 0.01501(a) Cubic-Spline Reconstruction:   = 83 Hz,   = 200 Hz
0 0.005 0.01 0.01501(b) Original and Reconstructed Waveforms
Time (s)0:0050:005
0:010:01
11f0 fs
Figure 4-17 D-to-C conversion using a
cubic-spline pulse. (a) Shifted cubic-spline
pulses (dashed orange); (b) sum using (4.15)
(solid orange).
of these overlapping pulses, depends on the two samples preceding and the two samples
following that time instant. Figure 4-17(b) shows the original waveform (light gray), thesamples, and the output of the D-to-C converter with “cubic-spline pulse” interpolation(solid orange curve). Now we see that the approximation is getting smoother and better,
but sometimes it is far from perfect. In the next section, we will see that this is becausethe sampling rate is only 2.4 times the highest frequency.
4-3.5 Over-Sampling Aids Interpolation
From the previous three examples, it seems that one way to make a smooth reconstructionof a waveform such as a sinusoid is to use a pulse p(t) that is smooth and has a long
duration. Then the interpolation formula involves several neighboring samples in thecomputation of each output value y(t)—however, the sampling rate is another important
factor. If the original waveform does not vary much over the duration of p(t), then we
can expect a good reconstruction. One way to ensure this is by over-sampling (that is,using a sampling rate that is much greater than the frequency of the cosine wave). This isillustrated in Figs. 4-18, 4-19, and 4-20, where the frequency of the cosine wave is stillf
0=83 Hz, but the sampling frequency has been raised to fs=500 samples/s. Now the
reconstruction pulses are the same shape as in Fig. 4-14, but they are much shorter, sinceT
s=2 ms instead of 5 ms. The signal changes much less over the duration of a single
pulse, so the waveform appears “smoother” and is much easier to reconstruct accuratelyusing only a few samples. Note that even for the case of the square pulse (Fig. 4-18)the reconstruction is better, but still discontinuous; the triangular pulse (Fig. 4-19) givesan excellent approximation; and the cubic-spline pulse gives a reconstruction that isindistinguishable from the original signal on the plotting scale of Fig. 4-20.
DEMO
Reconstruction Movies
146 CHAPTER 4 SAMPLING AND ALIASING
0 0.005 0.01 0.01501(a) Zero-Order Reconstruction:   = 83 Hz,   = 500 Hz
0 0.005 0.01 0.01501(b) Original and Reconstructed Waveforms
Time (s)0:0050:005
0:010:01
11f0 fs
Figure 4-18 D-to-C conversion using a square
pulse. The original 83 Hz sinusoid was
over-sampled at fs=500 samples/s.
0 0.005 0.01 0.01501(a) First-Order Reconstruction:   = 83 Hz,   = 500 Hz
0 0.005 0.01 0.01501(b) Original and Reconstructed Waveforms
Time (s)0:0050:005
0:010:01
11f0 fs
Figure 4-19 D-to-C conversion using a
triangular pulse at fs=500 samples/s.
Figures 4-18, 4-19, and 4-20 show that over-sampling can make it easier to reconstruct
a waveform from its samples. Indeed, this is why CD and DVD audio players have over-
sampled D-to-A converters! In these systems, 4 ×or 2×over-sampling is used to increase
the sampling rate before sending the samples to the D-to-A converter. This makes itpossible to use a simpler (and therefore less expensive) D-to-A converter to reconstructan accurate output from a CD or DVD player.
4-3 DISCRETE-TO-CONTINUOUS CONVERSION 147
0 0.005 0.01 0.01501(a) Cubic-Spline Reconstruction:   = 83 Hz,   = 500 Hz
0 0.005 0.01 0.01501(b) Original and Reconstructed Waveforms
Time (s)0:0050:005
0:010:01
11f0 fs
Figure 4-20 D-to-C conversion using a
cubic-spline pulse at fs=500 samples/s.
4-3.6 Ideal Bandlimited Interpolation
So far in this section, we have demonstrated the basic principles of discrete-to-continuous
conversion. We have shown that this process can be approximated very well by a sumof shifted pulses (4.15). One question remains: What is the pulse shape that gives “idealD-to-C conversion”? The answer, which relies on the continuous-time Fourier Transform,is asinc function which is given by the following equation:
p(t)=sinc(t/T
s)=sin(πt/T s)
(πt/T s)for−∞<t<∞ (4.18)
The inﬁnite length of this sinc pulse implies that to reconstruct a signal at time texactly
from its samples requires allthe samples, not just those near time t. Figure 4-14(d)
shows this pulse over the interval −2.6Ts<t<2 .6Ts. It continues to decay outside
this interval, but never does reach and stay at zero. Since p(0)=1 and p(nT s)=0
forn=±1,±2,..., this type of reconstruction is still an interpolation process, and it
is called bandlimited interpolation, because it can be shown that using (4.18) in the
interpolation formula (4.15) is equivalent to selecting the principal alias componentsinside the gray boxes in Figs. 4-8 through 4-11. Using (4.18) to reconstruct fromsamples of a cosine wave always reproduces a cosine wave exactly. If the samplingrate satisﬁes the conditions of the sampling theorem, the reconstructed cosine wave isidentical to the original signal that was sampled. If aliasing occurred in sampling, theideal D-to-C converter reconstructs a cosine wave with the alias frequency that is lessthanf
s/2.
148 CHAPTER 4 SAMPLING AND ALIASING
4-4 The Sampling Theorem
This chapter has discussed the issues that arise in sampling continuous-time signals. Using
the example of the continuous-time cosine signal, we have illustrated the phenomenon
of aliasing, and we have shown how the original continuous-time cosine signal can bereconstructed by interpolation. All of the discussion of this chapter has been aimed at thegoal of establishing conﬁdence in the Shannon sampling theorem, which, because of itscentral importance to our study of digital signal processing, is repeated here.
Shannon Sampling Theorem
Abandlimited continuous-time signal x(t)with no spectral components at frequencies
above fmaxcan be reconstructed exactly from its samples x(nT s), if the samples are
taken at a rate fs=1/Tsthat is greater than 2 fmax.
A block diagram representation of the sampling theorem is shown in Fig. 4-21 in terms of
the ideal C-to-D and D-to-C converters that we have deﬁned in this chapter. The samplingtheorem states that if the input is composed of sinusoidal signals with frequencies {f
k}
and all those frequencies are in the range 0 ≤fk≤fmax, then the reconstructed signal is
equal to the original signal that was sampled (that is, y(t)=x(t),i ff s>2fmax).
Signals composed of sums of sinusoids such that all frequencies are limited to a “band
of frequencies” of the form 0 ≤f≤fmaxare called bandlimited signals .11Such signals
could be represented as
x(t)=N/summationdisplay
k=0xk(t) (4.19)
where each of the individual signals is of the form xk(t)=Akcos(2πfkt+ϕk)with 0 ≤
fk≤fmax. As we have seen in Chapter 3 and Appendix C, such an additive combination
of sinusoids can produce an inﬁnite variety of both periodic and nonperiodic signalwaveforms. If we sample the signal represented by (4.19) we obtain
x[n]=x(nT
s)=N/summationdisplay
k=0xk(nTs)=N/summationdisplay
k=0xk[n] (4.20)
where xk[n]=A kcos(ˆωkn+ϕk)withˆωk=2πfk/fs. Thus, if we sample a sum of
continuous-time cosines, we obtain a sum of sampled cosines, and if we sample abovethe Nyquist rate, then f
s>2fmax≥2fk, and|ˆωk|≤π for each xk[n].
Ideal
C-to-D
ConverterIdeal
D-to-C
Converterx[n] x(t) y(t)
fs =1
Tsfs =1
TsFigure 4-21 Sampling and
reconstruction system with identical
rates for the C-to-D and D-to-Cconverters.
11The corresponding complex exponential signals would be limited to the band −fmax≤f≤fmax.
4-5 STROBE DEMONSTRATION 149
The ﬁnal step in the process of sampling followed by reconstruction in Fig. 4-21 is
D-to-C conversion by interpolation with
y(t)=∞/summationdisplay
n=−∞x[n]p(t −nTs) (4.21)
where for perfect reconstruction, p(t) would be given by (4.18). This expression for the
reconstructed output is a linear operation on the samples x[n]. This means that the total
output y(t) consists of the sum of the outputs due to each of the different components
xk[n]. We can see this by substituting (4.20) into (4.21) as in
y(t)=∞/summationdisplay
n=−∞/parenleftBiggN/summationdisplay
k=0xk[n]/parenrightBigg
p(t−nTs)=N/summationdisplay
k=0/parenleftBigg∞/summationdisplay
n=−∞xk[n]p(t −nTs)/parenrightBigg
(4.22)
Now since each individual sinusoid is assumed to satisfy the conditions of the sampling
theorem, it follows that the D-to-C converter reconstructs each component perfectly, andtherefore we conclude that
y(t)=N/summationdisplay
k=0xk(t)=x(t)
Thus, we have shown that the Shannon sampling theorem applies to anysignal that can be
represented as a bandlimited (ﬁnite) sum of sinusoids, and since it can be shown that mostreal-world signals can be represented as bandlimited signals, it follows that the samplingtheorem is a very general guide to sampling all kinds of signals.
4-5 Strobe Demonstration
One effective means for demonstrating aliasing is to use a strobe light to illuminate aspinning object. Prior to computer-controlled ignition, this stroboscopic effect was theroutine method to set the ignition timing of automobile engines and it gives a practicalexample where aliasing is a desirable effect. In this section, we consider a disk attachedto the shaft of an electric motor that rotates at a constant angular speed (see Fig. 4-22).
Rotating at Constant Speed
Figure 4-22 The disk attached to the shaft of a
motor rotates clockwise at a constant speed.
150 CHAPTER 4 SAMPLING AND ALIASING
n = 0 n = 1
n = 3n = 2
n = 4 n = 5Figure 4-23 Six successive positions of the spot
for a very high ﬂashing rate. Light spots indicate
previous locations of the dark spot. The disk isrotating clockwise, and the spot appears to movein the same direction. Angular change is −40
◦per
ﬂash.
On this white disk is painted a spot that is easily seen whenever the strobe light ﬂashes.
Initially, we assume that the rotation speed of the motor is constant at 750 rpm, and theﬂash rate of the strobe light is variable over a wide range.
DEMO
Strobe MoviesSuppose that the ﬂashing rate is very high, say nine times the rotation rate (that is,
9×750=6750 rpm). In this case, the disk does not rotate very far between ﬂashes.
In fact, for the 9× case, it moves only 360◦/9=40◦per ﬂash, as in Fig. 4-23.
Since the movement is clockwise, the angular change from one ﬂash to the nextis−40
◦. Therefore, a higher rate of rotation is converted into a lower rate.
If the ﬂash rate of the strobe is set equal to 750 ﬂashes/min, the rotation rate of the
disk, then the spot appears to stand still. This happens because the spot makes exactly onerevolution between ﬂashes and therefore is always at the same position when illuminatedby the strobe. It is exactly the same situation illustrated in Fig. 4-10 where the frequencyof the sampled sinusoid aliased to zero. This is not the only ﬂash rate for which thespot appears to stand still. In fact, a slower ﬂash rate that permits two or three or anyinteger number of complete revolutions between ﬂashes will create the same effect. Inour case of a 750 rpm motor, ﬂash rates of 375, 250, 187
1
2, 150, and 125 ﬂashes/min
also work.
By using ﬂashing rates that are close to these numbers, we can make the spot move
slowly, and we can also control its direction of motion (clockwise or counterclockwise).For example, if we set the strobe for a ﬂashing rate that is just slightly higher thanthe rotation rate, we observe another aliasing effect. Suppose that the ﬂashing rate is806 ﬂashes/min then the disk rotates slightly less than one full revolution betweenﬂashes. We can calculate the movement if we recognize that one complete revolutiontakes 1/750 min. Therefore,
/Delta1θ=−360
◦×1/806
1/750
=−360◦×750
806=−335◦=+25◦
Once again, the minus sign indicates rotation in a clockwise direction, but since the angularchange is almost −360
◦, we would observe a small positive angular change instead, and
4-5 STROBE DEMONSTRATION 151
n = 1 n = 0
n = 5 n = 4 n = 3n = 2
Figure 4-24 Six successive positions of the
spot for a ﬂashing rate that aliases the spot
motion. Light spots indicate previous locationsof the dark spot. The disk is rotating clockwise,but the spot appears to move counterclockwise.
Angular change is +25
◦per ﬂash.
the spot would appear to move in the counterclockwise direction, as shown in Fig. 4-24.
The fact that one can distinguish between clockwise rotation and counterclockwise
rotation is equivalent to saying that positive and negative frequencies have separate
physical meanings. Figures 4-23 and 4-24 are reminiscent of an effect often observedon television where the wheels of a moving car sometimes appear to rotate opposite tothe car’s direction of motion—or, in old Western movies, where stage coach wheels seemto rotate in strange ways. The effect is due to the sampling inherent in the frame rate ofvideo: 30 frames/s for analog TV , and 24 frames/s for movie ﬁlm.
In order to analyze the strobe experiment mathematically, we need a notation for the
motion of the spot as a function of time. The spot moves in an x–ycoordinate system,
so a succinct notation is given by a complex number whose real part is xand whose
imaginary part is y. The position of the spot is
p(t)=x(t)+jy(t)
Furthermore, since the motion of the spot is on a circle of radius r, a better formula for
p(t) is a complex exponential with constant frequency, amplitude and phase:
p(t)=re
−j(2πfmt−ϕ)(4.23)
The minus sign in the exponent indicates clockwise rotation, and the initial phase ϕ
speciﬁes the location of the spot at t=0 (see Fig. 4-25). The frequency of the motor
rotation fmis constant, as is the radius r.
The effect of the strobe light is to sample p(t) at a ﬁxed rate given by the ﬂashing
ratefs. Thus the position of the spot at the nthﬂash can be expressed as the discrete-time
signal
p[n]= p(t)/vextendsingle/vextendsingle/vextendsingle
t=nTs=p(nT s)=p(n/f s)
Substituting into the complex exponential (4.23) we get
p[n]=re−j(2π(fm/fs)n−ϕ)(4.24)
152 CHAPTER 4 SAMPLING AND ALIASING
xy
Phasor p(t) represents
position versus time Rotating at Constant Speed
p(t) = re−j(2π fmt − ' )
Figure 4-25 The position of the spot on the
disk can be expressed as a rotating phasorp(t)=x(t)+jy(t) versus time. The frequency
f
mis the rotation rate of the motor in rpm.
If the constraint of the sampling theorem is met (i.e., fs>2|fm|), then there is no aliasing
in the experiment. In fact, the angular change from one sample time to the next is between
−180◦and 0◦, so the spot will appear to rotate clockwise.
The more interesting cases occur when the ﬂashing rate drops below 2 |fm|. Then
the disk makes one or more revolutions between ﬂashes, which introduces the aliasingphenomenon. Using the sampled position formula (4.24), we can solve the following typeof problem: Find allpossible ﬂashing rates so that the spot moves counterclockwise at a
rate of 25
◦per ﬂash, which is equivalent to one revolution every 14.4 ﬂashes. Assume a
constant motor speed of fmrpm. One twist to this problem is that the ﬂashing rate should
be expressed as ﬂashes/min to match the motor speed in rpm.
A systematic approach is possible if we use the property ej2π/lscript=1, whenever /lscriptis an
integer. The desired rotation of the spot can be expressed as
d[n]=re+j(2π(25/360 )n+ψ)
where the term 2 π(25/360 )equals 25◦converted to radians. The initial phase ψis set
equal to ϕinp[n], so that d[0]=p[0]. Then we can equate p[n]andd[n], but we include
the factor ej2π/lscriptn, which is just multiplying by one
p[n]=d [n]ej2π/lscriptn
Now with the following analysis we can generate an equation that can be solved for theﬂashing rates:
re
−j(2π(fm/fs)n−ϕ)=re+j(2π(25/360 )n+ϕ)ej2π/lscriptn
⇒−/parenleftbigg
2πfm
fsn−ϕ/parenrightbigg
=+/parenleftbigg
2π25
360n+ϕ/parenrightbigg
+2π/lscriptn
−fm
fs=25
360+/lscript
⇒− fm=fs/parenleftbigg25
360+/lscript/parenrightbigg
So, ﬁnally we can solve for the ﬂashing rate (per minute)
fs=−fm
(5/72)+/lscript(4.25)
4-5 STROBE DEMONSTRATION 153
where /lscriptis any integer. Since we want positive values for the ﬂashing rate, and since there
is a minus sign associated with the clockwise rotation rate of the motor (−fm), we choose
/lscript=−1,−2,−3,... to generate the different solutions. For example, when the motor
rpm is 750, the following ﬂashing rates (in ﬂashes/min) give the desired spot movement
of 25◦per ﬂash:
/lscript −1 −2 −3 −4
fs805.97 388.49 255.92 190.81
EXERCISE 4.6 To test your knowledge of this concept, try solving for allpossible ﬂashing rates so
that the spot moves clockwise at a rate of one revolution every nine ﬂashes. Assumethe same motor rotation speed of 750 rpm clockwise. What is the maximum ﬂashingrate for this case?
4-5.1 Spectrum Interpretation
The strobe demo involves the sampling of complex exponentials, so we can present the
results in the form of a spectrum diagram rather than using time-domain equations, asin the foregoing section. The rotating disk has an analog spectrum given by a singlefrequency component at f=−f
mcycles/min (see Fig. 4-26).
When the strobe light is applied at a rate of fsﬂashes per minute, the resulting
spectrum of the discrete-time signal p[n]contains an inﬁnite number of frequency lines
at the normalized frequencies
ˆω/lscript=2π−fm
fs+2π/lscript=−ˆωm+2π/lscript (4.26)
for/lscript=0,±1,±2,±3,.... Equation (4.26) reminds us that there are two steps needed
to create the spectrum (Fig. 4-27) of the discrete-time signal representing the sampledmotion:
(a) Compute a normalized motor frequency ˆω
mby dividing by fs. Then plot a spectrum
line at ˆω=−ˆωm. The minus sign represents the clockwise rotation.
(b) Replicate the normalized spectral line for the motor by shifting it by all integer
multiples of 2 π. This accounts for the aliases of the discrete-time exponential,
p[n]in (4.24).
0rej'
f fm fsFigure 4-26 Analog spectrum representing the
disk spinning clockwise (negative frequency) at
fmrpm. The units for fare cycles/min.
154 CHAPTER 4 SAMPLING AND ALIASING
0rej'
!m!m!m!m!m!m O!Figure 4-27 Discrete-time spectrum
representing the disk spinning clockwise at
fmrpm, but strobed at fsﬂashes per minute.
The horizontal axis is normalized frequency:
ˆω=2πf/f s. The normalized motor frequency
−ˆωm=2π(−fm/fs)and its aliases are shown.
How do we use Fig. 4-27 to explain what we see in the strobe-light experiment?
Figure 4-27 contains an inﬁnite number of spectrum lines, so it offers an inﬁnite number
of possibilities for what we will observe. Our visual system, however, must pick one andit is reasonable that it picks the slowest one. In effect, the human visual system acts asa D-to-C converter. Thus, in the discrete-time spectrum, only the frequency componentclosest to ˆω=0 counts in D-to-C reconstruction, so the strobed signal p[n]appears to be
rotating at that lowest normalized frequency. However, one last conversion must be madeto give the perceived analog rotation rate in rpm. The discrete-time frequency (ˆω)must
be converted back to analog frequency via f=ˆωf
s. In Fig. 4-27, the alias for /lscript=2i s
the one closest to zero frequency, so the corresponding analog frequency is
fspot=1
2π(ˆω2)fs=1
2π(4π−ˆωm)fs=2fs−fm
This may seem like a roundabout way to say that the observed rotation rate of the spot
differs from −fmby an integer multiple of the sampling rate, but it does provide a
systematic method to draw the graphical picture of the relative frequency locations.Finally, the spectrum picture makes it easy to identify the lowest discrete-time frequencyas the one that is “reconstructed.” The discussion in Section 4-3 explains why this istrue.
The case where the sampling rate is variable and f
mis ﬁxed is a bit harder to solve, but
this is the most common situation for stroboscopic applications. A graphical approachis still possible because the desired spot frequency deﬁnes a line in the discrete-timespectrum, say ˆω
d. The units of ˆωdare radians per ﬂash. This line is the one closest to
the origin, so we must add an integer multiple 2 π/lscripttoˆωdto match the normalized motor
rotation frequency.
ˆωd+2π/lscript=ˆωm=−2πfm
fs
This equation can be solved for the ﬂashing rate fs, but the ﬁnal answer depends on the
integer /lscript, which predicts, by the way, that there are many answers for fs, as we already
saw in (4.25). The result is
fs=−2πfm
ˆωd+2π/lscript
4-7 PROBLEMS 155
4-6 Summary and Links
This chapter introduced the concept of sampling and the companion operation of
reconstruction. With sampling, the possibility of aliasing always exists, and we have
created the strobe demo to illustrate that concept in a direct and intuitive way.
LAB
Digital Images:
A/D and D/AThe lab entitled Digital Images: A/D and D/A shows how sampling applies to digital
images. Some aspects of sampling have already been used in the music synthesis labs
that are associated with Chapter 3, because the sounds must be produced by creating theirsamples in a computer before playing them out through a D-to-A converter.
DEMO
Synthetic Strobe
MoviesThe website also contains many demonstrations of sampling and aliasing:
(a) Strobe movie ﬁlmed using the natural strobing of a video camera at 30 frames/s.
(b) Synthetic strobe demos produced as MATLAB movies.
(c) Reconstruction movies that show the interpolation process for different pulse
shapes and different sampling rates.
(d) A sampling and aliasing MATLAB GUI called con2dis , shown in Fig. 4-13.DEMO
Reconstruction Movies(e) Aliasing and folding movies that show how the spectrum changes for different
sampling rates.
4-7 Problems
The problems in this section address the major concepts of sampling and aliasing in this
chapter. On the Companion Website there are many related homework problems which
can be used to review and practice. Most of them have detailed solutions.
NOTE
Problems with SolutionsP-4.1 Letx(t)=10 cos(9πt −π/5). In each of the following parts, the discrete-time
signal x[n]is obtained by sampling x(t) at a rate fssamples/s, and the resultant x[n]can
be written as
x[n]=A cos(ˆω1n+ϕ)
For each part below, determine the values of A,ϕ, and ˆω1such that 0 ≤ˆω1≤π.I n
addition, state whether or not the signal has been over-sampled or under-sampled.
(a) Sampling frequency is fs=11 samples/s.
(b) Sampling frequency is fs=7 samples/s.
(c) Sampling frequency is fs=4 samples/s.
156 CHAPTER 4 SAMPLING AND ALIASING
P-4.2 Discrete-time signals with different frequencies can be equal; this is one
manifestation of aliasing and folded aliases. Determine which of the following discrete-
time cosine signals are equal (i.e., plots of xi[n]versus nwill be identical):
x1[n]=cos(0 .8πn+0.2π)
x2[n]=cos(−2 .8πn+0.2π)
x3[n]=x 1[n]+x 2[n]
x4[n]=cos(5.2 πn−0.2π)
x5[n]=x 1[n]+cos(−7.1πn −0.1π)
P-4.3 An ideal D-to-C converter produces an output signal whose ˆωfrequency content
is the same as the input signal’s discrete-time frequency content over the range −π<
ˆω≤π. However, the continuous-time frequency axis (ω)is a scaled version of ˆω.F o r
each of the discrete-time signals y[n]below, determine the continuous-time output signal
y(t) from an ideal D-to-C converter whose sampling rate is fs=3200 Hz.
(a)y[n]=8 cos(π
4n−π/3)
(b)y[n]=cos(1.4 πn)
(c)y[n]=2 cos(2 .5πn−π/4)+sin(1.4πn)
P-4.4 The spectrum diagram, which gives the frequency content of a continuous-time
signal, helps in determining the Nyquist rate for sampling that signal.
(a) Given the signal x(t)=cos(3000 πt)cos(6000 πt), draw a sketch of its spectrum.
Label the frequencies and complex amplitudes of each component spectral line.
(b) Determine the minimum sampling rate that can be used to sample x(t) without
aliasing for any of its components.
(c) Given the signal r(t)=cos(2×106πt)sin(5×106πt)sin(9×106πt), deter-
mine the minimum sampling rate to avoid aliasing for any of its components.
(d) Given the signal v(t)=cos(2×106πt)+sin(5×106πt)+sin(9×106πt),
determine the minimum sampling rate to avoid aliasing for any of its components.
P-4.5 The Fourier Series representation of a signal is a summation of complex
exponential signals, so by focusing on the highest frequency, we can determine the Nyquistrate for sampling a continuous-time signal such as
x(t)= 10/summationdisplay
k=−10(j8πk)ej2πkt(4.27)
(a) For x(t) determine the minimum (Nyquist) sampling rate to guarantee no aliasing.
4-7 PROBLEMS 157
(b) Deﬁne a new signal r(t)=x(t)cos(24 πt). Determine the Nyquist sampling rate
forr(t).
(c) Deﬁne another new signal v(t)=r(t)+r(t−0.02). Determine the Nyquist
sampling rate for v(t).
P-4.6 Refer to Fig. 4-21 for the system with ideal C-to-D and D-to-C converters. If the
sampling rate is high enough to avoid aliasing, and the D-to-C rate equals the C-to-D
rate, then the reconstructed output signal is equal to the input signal (this is the gist of theSampling Theorem). However, when the D-to-C rate is different, a careful analysis of thespectra is needed. For example, if the output rate is twice the input rate, the output signalis played out faster and we would expect the frequency content of the output signal to behigher.
(a) If the input x(t) is given by the two-sided spectrum representation in Fig. P-4.6,
and the sampling rate of the C-to-D converter is f
s=2500 samples/s, sketch the
spectrum of the discrete-time signal x[n].
(b) Use the spectrum for x[n]found in the previous part to determine a simple formula
for the output signal y(t) when the rate of the D-to-C converter is fs=1500
samples/s (i.e., different from the C-to-D rate).
0 200 50013ej0 : 713ej0 : 7
7ej0 : 37ej0 : 3
f 500 200 Figure P-4.6
P-4.7 In the system with ideal C-to-D and D-to-C converters (Fig. 4-21), assume that
the sampling rate of both converters is fs=475 samples/s, and the input signal x(t) is
given by the two-sided spectrum representation in Fig. P-4.6.
(a) Is the output signal y(t) equal to the input signal x(t)?
(b) For the case where the sampling rate of the C-to-D converter is fs=475 Hz, sketch
the spectrum of the discrete-time signal x[n]. Label the frequencies and complex
amplitudes of all the spectrum lines.
(c) Use the spectrum for x[n]found in the previous part to determine a simple formula
for the output signal y(t) when fs=475 Hz (for both the C-to-D and D-to-C
converters).
158 CHAPTER 4 SAMPLING AND ALIASING
P-4.8 In the system with ideal C-to-D and D-to-C converters (Fig. 4-21), assume that
the sampling rate of both converters is fs=700 samples/s, and the input signal x(t) is
given by the two-sided spectrum representation in Fig. P-4.6.
(a) State the Nyquist rate for x(t) deﬁned in Fig. P-4.6. Is the input signal aliased?
(b) For the case where the sampling rate of the C-to-D converter is fs=700 Hz, sketch
the spectrum of the discrete-time signal x[n]. Label the frequencies and complex
amplitudes of all the spectrum lines.
(c) Use the spectrum for x[n]found in the previous part to determine a simple formula
for the output signal y(t) whenfs=700 Hz for both converters.
P-4.9 Refer to Fig. 4-21 for the system with ideal C-to-D and D-to-C converters.
(a) Suppose that the output from the C-to-D converter is x[n]=cos(0 .4πn), and the
sampling rate of the C-to-D converter is fs=7000 samples/s. Determine a formula
for the continuous-time sinusoidal input x(t) using the smallest frequency greater
than 9000 Hz.
(b) Suppose the output from the C-to-D converter is x[n]=cos(0 .2πn), the input
signal is x(t)=cos(525πt) , and the sampling rate (fs)of the C-to-D converter
is less than 135 samples/s. Determine the largest possible sampling rate satisfying
these three conditions.
(c) Suppose the output from the D-to-C converter is y(t)=cos(325πt) , and the input
to the C-to-D converter is x(t)=cos(75πt) . If both converters are operating at the
same rate (fs), determine the smallest possible sampling rate fssatisfying these
conditions.
P-4.10 A continuous-time sinusoid a1(t)=cos(ω 1t+0.1π) is sampled at fs1=40 Hz
to give a1[n], and a second continuous-time sinusoid a2(t)=cos(ω 2t+0.1π) is
sampled at fs2=50 Hz to give a2[n]. Equality of the discrete-time sampled signals
(i.e.,a1[n]=a 2[n]), may or may not be equivalent to equality of the continuous-time
signals (i.e., a1(t)=a2(t)).
(a) Ifω2=30πrad/s, determine ω1so that a1[n]=a 2[n].Assume there is no aliasing
when sampling a1(t).
(b) For the previous part, determine the common frequency ˆωof the discrete-time
signals ai[n]=cos( ˆωn+ϕi), where i=1,2.
(c) Now assume that ω1=ω2=2π(444
9)rad/s. Determine the frequencies ˆω1and
ˆω2of the discrete-time signals a1[n]anda2[n]. Hint: Use aliasing to obtain
frequencies that satisfy 0 ≤ˆω1,ˆω2≤π.
(d) Are the discrete-time signals found in the previous part equal? If yes, ﬁnd the
phases; otherwise, explain why not.
4-7 PROBLEMS 159
P-4.11 When the cosine waveform x(t)=3 cos(500 πt)is sampled at a rate fs,w e
obtain a discrete-time signal x[n]given by
x[n]=x(n/f s)=3 cos(800 πn/ f s)
for−∞<n<∞. In the following parts, assume that fs=3600 Hz.
(a) Determine how many samples are taken in one period of the cosine wave x(t). This
answer is the average number of samples per period, which is an integer in this
case.
(b) Now consider another cosine waveform y(t) with a different frequency ω0
y(t)=3 cos(ω 0t)
Find a value for ω0, between 7000 πand 9999π rad/s, such that the signal samples
are identical to x[n]above, that is, y[n]=y(n/f s)=x(n/f s)for all n.Hint: The
solution involves aliasing.
(c) For the frequency found in (b), determine the average number of samples taken in
one period of y(t). This answer is unlikely to be an integer.
P-4.12 Suppose that a discrete-time signal x[n]given by the formula
x[n]=11.3 cos(0 .3πn+0.6π)
was obtained by sampling a continuous-time signal x(t)=Acos(2πf0t+ϕ)at a sampling
rate of fs=4000 samples/s. Determine three different continuous-time signals that could
have produced x[n]. All these continuous-time signals have different frequencies which
should be positive and less than 7000 Hz. Write the mathematical formula for all threecontinuous-time signals.
P-4.13 When operating on a signal in MATLAB, sampling is always being done
because MATLAB stores signals as vectors which are, in effect, discrete-time signals.
Furthermore, MATLAB performs ideal C-to-D conversion when operating on signals thatare deﬁned by mathematical formulas. As a result, there are cases where aliasing mightoccur unintentionally in a MATLAB program. Discrete-time MATLAB signals can beconverted to continuous-time with the function
soundsc which plays out an analog signal
for listening.
(a) In the following MATLAB code, a discrete-time sinusoid is generated and then
played out with soundsc :
nn = 0:2190099;
xx = (7/pi)*cos(1.8*pi*nn + 2.03);soundsc(xx,16000)
Determine the analog frequency (in hertz) that will be heard.
160 CHAPTER 4 SAMPLING AND ALIASING
(b) The following MATLAB code generates samples of a sinusoidal waveform:
tt = 0:1/2400:10000;
xx = cos(2*pi*1800*tt + pi/3);soundsc(xx,fsamp);
Although the sinusoid was not written to have a frequency of 2400 Hz, it is possible
to play out the vector xxso that it sounds like a 2400 Hz tone. Determine the value
offsamp that should be used in soundsc to play the vector xxas a 2400 Hz tone.
(c) The following snippet of MATLAB code generates a very long sinusoid:
tt = 0:(1/8000):64;xx = 1.23*cos(2*pi*440*tt);soundsc(xx,40000);
Determine the frequency (in Hz) and the duration (in seconds) of the tone played
bysoundsc .Note: Assume that MATLAB has an inﬁnite amount of memory so
that the very long vector xxcan be stored.
P-4.14 An amplitude-modulated (AM) cosine wave is represented by the formula
x(t)=[4+sin(6600 t)]cos(2000 πt)
(a) Sketch the two-sided spectrum of this signal. Be sure to label important features
of the plot.
(b) Explain why x(t) is not periodic.
(c) What relation must the sampling rate fssatisfy so that y(t)=x(t) in Fig. 4-21?
P-4.15 Suppose that a discrete-time signal x[n]is given by the formula
x[n]=9 cos(0 .6πn+0.4π)
and that it was obtained by sampling a continuous-time signal at a sampling rate off
s=1/Ts=9600 samples/s.
(a) Determine two different continuous-time signals x1(t)andx2(t)whose samples
are equal to x[n]; in other words, ﬁnd x1(t)andx2(t)such that x[n]=x 1(nTs)=
x2(nTs)ifTs=1/fs. Both of these signals should have a frequency less than
10,000 Hz. Give a formula for each signal.
(b) If x[n]is given by the equation above, what signal is reconstructed by an ideal
D-to-C converter operating at sampling rate of 6000 samples/s? That is, determinethe output y(t) in Fig. 4-21 when the sampling rates are different.
4-7 PROBLEMS 161
P-4.16 Bandpass sampling refers to sampling a signal that is known to lie in a restricted
frequency range, for example, all frequencies in x(t) are between 7000 and 8000 Hz. The
usual Sampling Theorem requires fs>16000 Hz because the reconstruction is performed
with the lowest frequency possible. However, in this case, the available bandwidth of the
signal is only 1000 Hz, so it turns out that x(t) can be sampled at fs=2000 Hz and
recovered perfectly from those samples because the range of recovered frequencies is
known. Suppose that a discrete-time signal x[n]is given by the formula
x[n]=cos(0 .7πn+0.2π)
and that it was obtained by sampling a continuous-time signal at a sampling rate off
s=2000 samples/s.
(a) When fs=2000 Hz and the possible bandwidth is also 2000 Hz, reconstruction
from the sampled signal is ambiguous. Determine two different continuous-timesignals x
1(t)andx2(t)with frequencies between 7000 and 9000 Hz, and whose
samples are equal to x[n].
(b) Determine the continuous-time signal x(t)whose frequency lies between 7000 and
8000 Hz and whose samples are equal to x[n].
(c) Suppose that x[n]=cos( ˆωn+0.2π), where ˆω∈[0,π]is the discrete-time signal
obtained by sampling x(t)=cos(2πf t+ϕ)at a sampling rate of fs=2000 Hz.
Determine the general formula for the frequency fin terms of ˆωsuch that the
frequency satisﬁes f∈[7000,8000]Hz. Also, determine the phase ϕ.
Comment: The answer in the last part is simple only when one end of the frequency
interval is an integer multiple of fs(that is, 8000 =4fs). The reader is encouraged to go
further with this problem by reworking the last part when f∈[8500,9500]Hz.
P-4.17 A nonideal D-to-C converter takes a discrete-time signal (sequence) y[n]as
input and produces a continuous-time output y(t) according to the relation
y(t)=∞/summationdisplay
n=−∞y[n]p(t −nTs)
where Ts=0.4 s. Assume the input sequence is given by the formula
y[n]=/braceleftBigg
0.1(−2)n0≤n≤4
0 otherwise
(a) For the pulse shape
p(t)=/braceleftBigg
1−0.2≤t≤0.2
0 otherwise
carefully sketch the output waveform y(t).
162 CHAPTER 4 SAMPLING AND ALIASING
(b) For the pulse shape
p(t)=/braceleftBigg
1−2.5|t|− 0.4≤t≤0.4
0 otherwise
carefully sketch the output waveform y(t).
P-4.18 A continuous-time sinusoid a(t)=5 cos(ω at)is sampled at fs1=25 Hz to give
a[n], and a second continuous-time sinusoid b(t)=5 cos(ω bt)is sampled at fs2=
65 Hz to give b[n].
(a) If ωb=26π rad/s, determine ωaso that a[n]=b [n]=5 cos( ˆωn).Assume there
is no aliasing when sampling a(t). Determine the frequency ˆωof the discrete-time
signal.
(b) Now assume that both ωaandωbare unknown, but they are equal (ω a=ωb).
Determine the common frequency ωa, so that the discrete-time signals are equal
(that is, a[n]=b [n]).
(c) Among the many answers possible in the previous part, only two satisfy 0 <ωa<
40πrad/s. Determine those answers.
(d) If ωa=30πandωb=60π, anda(t) andb(t) are sampled at the same sampling
frequency fs, such that 30 <fs<60, determine fsfor which a[n]=b [n].
P-4.19 Often MATLAB is used to plot a sinusoidal signal and this requires that the time
axis be deﬁned because the plot command operates on vectors for horizontal and vertical
axes. The following MATLAB code generates a signal x[n]and plots x[n]versus n:
Ts = 0.01; % units are seconds
Duration = 0.3;t t=0:T s:Duration;Fo = 380; % units are Hzxn = 2*cos( 2*pi*Fo*tt + 0.6*pi );stem( 0:length(xn)-1, xn )
(a) Make the stem plot of the signal x[n]withnas the horizontal axis. Either sketch
it or plot it using MATLAB. Assume that the nindex starts at zero.
(b) In the plot, measure the period of the discrete-time signal x[n].
(c) Determine the correct formula for the discrete-time signal in the form
x[n]=A cos(ˆω0n+ϕ)
withˆω0∈[0,π].
(d) Explain how aliasing affects the formula and the stem plot that you made.
4-7 PROBLEMS 163
P-4.20 The intention of the following MATLAB program is to plot 17 cycles of a 15
Hz sinusoid, but it has a bug:
Fo = 15;
To = 1/Fo; %-- PeriodTs = 0.05;t t=0:T s:(17*To);xx = real((1+j*0.1)*exp(j*2*pi*Fo*tt));%-- The xx vector has samples of the 15-Hz sinusoidplot( tt, xx, ’-o’ )xlabel(’TIME (sec)’), grid on
(a) First of all, if you plot 17 periods of a sinusoid how many zero crossings would
you observe in the plot? How many positive peaks and how many negative peaks?
(b) Make the plot in MATLAB, and count the number of zero crossings and peaks.
(c) Measure the period in the plot (in s), and then calculate the frequency (in Hz) of a
sinusoid with that period. Explain how aliasing or folding predicts this frequency.
(d) The samples of the signal xxform a discrete-time signal, x[n]. Determine the
period of x[n]and then write a formula for x[n].
(e) Determine an acceptable value of Tsto get a very smooth plot of the desired 15 Hz
signal.
P-4.21 An amplitude-modulated (AM) wave is represented by the formula
x(t)=[7+cos(πt)] sin(15πt +π/2)
(a) Use phasors to show that x(t) can be expressed in the form
x(t)=A1cos(ω 1t+ϕ1)+A2cos(ω 2t+ϕ2)+A3cos(ω 3t+ϕ3),
where ω1<ω 2<ω 3. In addition, ﬁnd values for the parameters A1,A 2,A 3,ϕ1,ϕ2,
ϕ3,ω1,ω 2,ω 3.
(b) Sketch the two-sided spectrum of this signal on a frequency axis. Be sure to label
important features of the plot, and include the numerical values of the parameters
Ai,ϕi, andωifori=1,2,3.
(c) Determine the minimum sampling rate that can be used to sample x(t) without
aliasing of any of the components.
P-4.22 Refer to Fig. 4-21 for the sampling and reconstruction system. Assume that the
sampling rates of the C-to-D and D-to-C converters are equal, and the input to the idealC-to-D converter is
x(t)=2 cos(2 π(50)t+π/2)+cos(2π(150)t)
164 CHAPTER 4 SAMPLING AND ALIASING
(a) If the output of the ideal D-to-C converter is equal to the input x(t), that is,
y(t)=2 cos(2 π(50)t+π/2)+cos(2π(150)t)
what general statement can you make about the sampling frequency fsin this case?
(b) If the sampling rate is fs=250 samples/s, determine the discrete-time signal x[n],
and give an expression for x[n]as a sum of cosines. Make sure that all frequencies
in your answer are positive and less than πradians.
(c) Plot the spectrum of the signal in part (b) over the range of frequencies −π≤ˆω≤
π. Make a plot for your answer, labeling the frequency, amplitude, and phase of
each spectral component.
(d) If the output of the ideal D-to-C converter is
y(t)=2 cos(2 π(50)t+π/2)+1
determine the value of the sampling frequency fs. (Remember that the input x(t)
is as deﬁned above.)
P-4.23 In the rotating disk and strobe demo described in Section 4-5, we observed that
different ﬂashing rates of the strobe light would make the spot on the disk stand still or
move in different directions.
(a) Assume that the disk is rotating clockwise at a constant speed of 13 rev/s. If the
ﬂashing rate is 15 ﬂashes/s, express the movement of the spot on the disk as arotating complex phasor, p[n], that gives the position of the spot at the n
thﬂash.
Assume that the spot is at the top when n=0 (the ﬁrst ﬂash).
(b) For the conditions in (a), determine the apparent speed (in rev/s) and direction of
movement of the “strobed” spot.
(c)Now assume that the rotation speed of the disk is unknown. If the ﬂashing rate is 13
ﬂashes/s, and the spot on the disk moves counterclockwise by 15◦with each ﬂash,
determine the rotation speed of the disk (in rev/s). If the answer is not unique, giveallpossible rotation speeds.
P-4.24 In the rotating disk and strobe demo, we observed that different ﬂashing rates
of the strobe light would make the spot on the disk stand still.
(a) Assume that the disk is rotating in the counterclockwise direction at a constant
speed of 12 rev/s. Express the movement of the spot on the disk as a rotatingcomplex phasor.
4-7 PROBLEMS 165
(b) If the strobe light can be ﬂashed at a rate of nﬂashes/s, where nis an integer greater
than zero, determine all possible ﬂashing rates such that the disk can be made to
stand still.
Note: The only possible ﬂashing rates are 1 per second, 2 per second, 3 per second,
etc.
(c) If the ﬂashing rate is 13 times/s, explain how the spot moves, and write a complex
rotating phasor that gives the position of the spot at each ﬂash.
P-4.25 The following complex-valued signal is a phasor:
z[n]=ejθ[n]
where θ[n]is the phase.
(a) When the phase changes by a constant amount versus n, the phasor rotates at a
constant speed. For the following phasor:
z[n]=ej(0.08πn −0.25π)
make a plot of the phasor locations for n=0, 1, 2, 7, 10, 17, 20, 33, 50 and 99.
(b) What is the period of z[n]?
(c) Repeat for the complex phasor that corresponds to the following chirp signal:
c[n]=ej0.1n2
In this case, plot the phasor locations for n=0, 1, 2, 3, 4, and 7.
(d) It might be surprising to learn that the chirp signal c[n]deﬁned in (c) is periodic.
Determine its period.
P-4.26 A digital chirp signal is synthesized according to the following formula:
x[n]=/Rfractur { ejθ[n]}=cos(π(0 .7×10−3)n2)
forn=0,1,2,...,200.
(a) Make a plot of the rotating phasor ejθ[n]forn=10, 50, and 100.
(b) If this signal is the input to a D-to-A converter whose sampling rate is 8 kHz, make
a plot of the instantaneous analog frequency (in Hz) versus time for the analog
signal.
(c) If the constant frequency digital signal v[n]=cos(0 .7πn) is the input to a D-to-A
converter whose sampling rate is 8 kHz, what (analog) frequency will be heard?
166 CHAPTER 4 SAMPLING AND ALIASING
P-4.27 In the MATLAB code below, determine the values of ALPHA ,BETA , andfsin
the deﬁnition of the FM signal whose spectrogram shown in Fig. P-4.27 is produced by
theplotspec function, which is available on the website. Notice that both the positive
and negative frequency regions are shown by adding a tiny imaginary part to the realsignal
xn.
%
fs = ????;tt = 0:1/fs:2;psi = ALPHA*pi*tt.ˆ4 + BETA*pi*tt;xn = cos(psi);plotspec(xn+j*1e-11, fs, 128), grid on %-- make a spectrogram
NOTE
DSP-First M-Files
Time (s)Frequency (Hz)
0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 201000200030004000
1000
2000
3000
Figure P-4.27
CHAPTER
5
FIR Filters
Up to this point, we have focused our attention on signals and their mathematical
representations. In this chapter, we begin to emphasize systems orﬁlters. Strictly
speaking, a ﬁlter is a system that is designed to remove some component or modifysome characteristic of a signal, but often the two terms are used interchangeably. In thischapter, we introduce the class of ﬁnite impulse response (FIR) systems, or, as we often
refer to them, FIR ﬁlters. These ﬁlters are systems for which each output value is the
sum of a ﬁnite number of weighted values of the input sequence. We deﬁne the basicinput–output structure of the FIR ﬁlter as a time-domain computation based upon whatis often called a difference equation. The unit impulse response of the ﬁlter is deﬁned
and shown to completely describe the ﬁlter via the operation of convolution. The generalconcepts of linearity and time invariance will also be presented. These two propertiescompletely characterize a wide class of ﬁlters that are exceedingly important in boththe continuous-time and the discrete-time cases.
Our purpose in this chapter is to introduce the basic ideas of discrete-time systems
and to provide a starting point for further study. The analysis of both discrete-timeand continuous-time systems is a rich subject of study that is necessarily based on
167
168 CHAPTER 5 FIR FILTERS
Discrete-Time
System Operator
Tg Input Outputx yDTfxg
Figure 5-1 Block-diagram representation of
a discrete-time system.
mathematical representations and manipulations.1The systems that we introduce in this
chapter are the simplest to analyze. The remainder of the text is concerned with extending
the ideas of this chapter to other classes of systems and with developing tools for theanalysis of these systems.
5-1 Discrete-Time Systems
A discrete-time system is a computational process for transforming one sequence, called
theinput signal, into another sequence called the output signal. As we have already
mentioned, systems are often depicted by block diagrams such as the one in Fig. 5-1. InChapter 4, we used similar block diagrams to represent the operations of sampling andreconstruction. In the case of sampling, the input signal is a continuous-time signal andthe output is a discrete-time signal, while for reconstruction the opposite is true. Nowwe want to begin to study discrete-time systems where the input and output are bothdiscrete-time signals. Such systems are important because they can be implemented withdigital computation and because they can be designed to modify signals in many usefulways.
In general, we represent the operation of a system by the notation
x[n]
T/mapsto−→y[n]
which states concisely that the output sequence2yis related to the input sequence xby a
computational process (or mapping) that can be described mathematically by an operatorT.
3Since a discrete-time signal is a sequence of values, such operators can be described
by giving a formula for computing the values of the output sequence from the values ofthe input sequence. For example, the relation
y[n]=(x [n])
2
deﬁnes a very simple system for which the output sequence values are the square of thecorresponding input sequence values. In this case the output at time index ndepends
1Systems can be analyzed effectively by mathematical methods called transforms, such as the Fourier
transform and the z-transform, which are introduced in Chapters 7, 9, and 10, and are covered extensively
in more advanced signals and systems texts.
2The term sequence is equivalent to a discrete-time signal, so the two terms will be used interchangeably.
3An operator is a mathematical concept that is analogous to the concept of a function. Instead of mapping
a number into another number, a discrete-time operator Tmaps an entire sequence (the input) into another
sequence (the output).
5-2 THE RUNNING-A VERAGE FILTER 169
only on the input value at the same time n. A more complicated example would be the
following deﬁnition of a maximum-of-three system:
y[n]=max {x[n],x[n−1],x[n−2]}
In this case, the output value depends on three consecutive input values, the “current
value,” indexed by n, and two “previous values” indexed by n−1 andn−2. As these two
simple examples illustrate, a system deﬁnition is often given as a formula or computationalprocess for transforming a sequence x[n]into another sequence y[n].
Since inﬁnite possibilities exist for deﬁning discrete-time systems, it is necessary
to limit the range of possibilities by placing some restrictions on the properties of thesystems that we study. Therefore, we begin our study of discrete-time systems in thischapter by introducing a very important class of discrete-time systems called FIR ﬁlters.
Speciﬁcally, we will discuss the representation, implementation, and analysis of discrete-time FIR systems, and illustrate how such systems can be used to modify signals.
5-2 The Running-Average Filter
A simple but useful transformation of a discrete-time signal is to compute a running
average of two or more consecutive values of the sequence, thereby forming a
new sequence of the average values.4Averaging is commonly used whenever data
ﬂuctuate and must be smoothed prior to interpretation. For example, stock-marketprices ﬂuctuate noticeably from day to day, or hour to hour. Therefore, one mighttake an average of the stock price over several days before looking for any trend.
Another everyday example concerns credit-card balances where interest is charged on
theaverage daily balance. The FIR ﬁlter is a generalization of the idea of a running
average.
In order to motivate the general deﬁnition of the class of FIR systems, let us consider
the simple running average as an example of a system that processes an input sequence toproduce an output sequence. To be speciﬁc, consider a 3-point running average where eachsample of the output sequence is the sum of three consecutive input sequence samplesdivided by three.
5If we apply this algorithm to the triangularly shaped sequence shown
in Fig. 5-2(a), we can compute a new sequence called y[n], which is the output of the
averaging operator. The sequence in Fig. 5-2(a) is an example of a ﬁnite-length signal.
Thesupport of such a sequence is the set of indices over which the sequence is nonzero; in
this case, the support of the sequence is the ﬁnite interval 0 ≤n≤4. A 3-point average
of the values {x[0],x[1],x[2] }={ 2,4,6}gives the answer1
3(2+4+6)=4. This
result deﬁnes one of the output values. The next output value is obtained by averaging{x[1],x[2],x[3] }={ 4,6,4}, which yields an average value of 14/3. Before going any
further, we should decide on the output indexing. For example, the values 4 and 14/3
4The running average is often called a moving average.
5It is common practice to refer to signal values as points or samples. The term samples is short for sample
values which are signal values since many signals arise from sampling.
170 CHAPTER 5 FIR FILTERS
0123456246
4
2… …
0123456244
2… …(a)
(b)2
32
314
3
nn
11
22xŒ
yŒFigure 5-2 (a) Finite-length input signal, x[n].
(b) Output of running-average ﬁlter, y[n].
could be assigned to y[0]andy[1],but this is only one of many possibilities. With this
indexing, the equations for computing the output from the input are
y[0]=1
3(x[0]+x[1]+x [2])
y[1]=1
3(x[1]+x [2]+x[3])
which generalizes to the following input–output equation:
y[n]=1
3(x[n]+x [n+1]+x [n+2]) (5.1)
The equation given in (5.1) is called a difference equation. It is a complete description of
the FIR system because we can use (5.1) to compute the entire output signal for all index
values −∞<n<∞. For the input of Fig. 5-2(a), the output from (5.1) is the signal
y[n]tabulated as follows:
nn<−2 −2−1 012345n>5
x[n] 0 0 0246420 0
y[n] 02
32414
3422
30 0
Note that the values in orange type in the x[n]row are the numbers involved in the
computation of y[2]. Also note that y[n]=0 outside of the ﬁnite interval −2≤n≤4;
so, the output also has ﬁnite support. The output sequence is also plotted in Fig. 5-2(b).Observe that the support of the output sequence is longer (has more nonzero values) thanthe input sequence, which is typical for an FIR ﬁlter.
The choice of the output indexing is arbitrary, but it does matter when speaking about
properties of the ﬁlter because nis often a time index. For example, the ﬁlter deﬁned
5-2 THE RUNNING-A VERAGE FILTER 171
0… …Future Past
Sliding WindowxŒ
Present: `Dn`Figure 5-3 Filter calculation at
thepresent time(/lscript=n)uses
values within a sliding window.
Gray shading indicates the past( /lscript<n );orange shading, the
future ( /lscript>n ) . Here, the sliding
window encompasses valuesfrom both the future and thepast.
in (5.1) has the property that its output starts (becomes nonzero) before the input starts.
This would certainly be undesirable if the input signal values came directly from an
A-to-D converter, as is common in audio signal-processing applications. In this case, n
would stand for time, and we can interpret y[n]in (5.1) as the computation of the present
value of the output based on three input values. Since these inputs are indexed as n,n+1,
andn+2, two of them are “in the future.” This form of the 3-point running-average ﬁlter
can be represented compactly by the summation notation on the right-hand side of the
following equation:
y[n]=1
3(x[n]+x [n+1]+x [n+2])=1
3n+2/summationdisplay
/lscript=nx[/lscript] (5.2)
In this representation, /lscriptis a “dummy” counting index for the sum and ndenotes the index
of the nthsample of the output sequence. When we represent the input sequence as x[/lscript],
with−∞</lscript<∞, we are considering the sequence in its entirety. If we denote nas
the current time,6then (5.2) states that the output at nis the average of the input at n(i.e.,
x[n]) and two future values x[n+1]andx[n+2].
In general, sample values from either the past or the future or both may be used in the
computation of the running average. Figure 5-3 depicts a case when both past and futuresamples of the input are involved in computing the present value of the output sequence.In all cases of a 3-point running average, a sliding window of three samples determines
which three samples are used in the computation of y[n]. Figure 5-3 also depicts the case
when more than three samples are averaged to produce the output sample.
A ﬁlter that uses only the present and past values of the input is called a causal
ﬁlter, implying that the cause does not precede the corresponding effect. Therefore, aﬁlter that uses future values of the input is called noncausal . Noncausal systems cannot
be implemented in a real-time application because the input is not yet available whenthe output has to be computed. In other cases, where stored data blocks are manipulatedinside a computer, the issue of causality may not be a crucial limitation.
6Oftentimes, we will not be so careful about our notation as in this discussion. When the meaning is
clear, we may simply refer to “the sequence x[n]” even when we mean the entire sequence, not just the value
of the sequence at n.
172 CHAPTER 5 FIR FILTERS
An alternative output indexing scheme can produce a 3-point averaging ﬁlter that is
causal. In this case, the output value y[n]is the average of input values at n(the present),
n−1 (one sample previous), and n−2 (two samples previous). The difference equation
for this ﬁlter7is
y[n]=1
3(x[n]+x [n−1]+x [n−2])=n/summationdisplay
/lscript=n−21
3x[/lscript] (5.3)
where now the upper limit is nso the index of summation does not include future values,
and the sliding averaging interval is n−2t on. The form given in (5.3) is a causal running
averager, or it may well be called a backward average. By a straightforward manipulation
of the sum, (5.3) can also be expressed as
y[n]=1
3(x[n]+x [n−1]+x [n−2])=2/summationdisplay
k=01
3x[n−k] (5.4)
In (5.4), the counting index of the sum is denoted kto distinguish it from /lscriptin (5.3),
even though this is really not necessary. The indices /lscriptandkare “dummy” indices in the
sense that they are used only to count through the terms being summed—hence, they are
replaced by numbers as in the expressions on the left in (5.3) and (5.4). Therefore, both/lscriptandkcould be replaced by any convenient symbol distinct from n.
Using the causal difference equation (5.3) or (5.4), we can make a table of all output
values.
nn<−2 −2−1 01234567n>7
x[n] 0 0 024642000 0
y[n] 0 0 02
32414
3422
30 0
Notice that now the orange-colored values of x[n]are used to compute y[4]instead of
y[2]. The resulting signal y[n]has the same values as before, but its support is now
the index interval 0 ≤n≤6. Observe that the output of the causal ﬁlter is simply
a shifted version of the output of the previous noncausal ﬁlter. This ﬁlter is causalbecause the output depends on only the present and two previous (i.e., past) values ofthe input. Therefore, the output does not change from zero until the input changes fromzero.
EXERCISE 5.1 Determine the output of a centralized running averager
y[n]=1
3(x[n+1]+x [n]+x [n−1])
for the input in Fig. 5-2(a). Is this ﬁlter causal or noncausal? What is the support ofthe output for this input? How would the plot of the output compare to Fig. 5-2(b)?
7The divide by 3 needed for the 3-pt running averager has been incorporated into a coefﬁcient of 1/3 for
each term in the sums (5.3) and (5.4).
5-3 THE GENERAL FIR FILTER 173
0bM;bM1;:::;b 2;b1;b0Running
onto the
signalWeighted sum
ofMC1samplesRunning off
the signal
Zero outputxŒ
Present: `Dn nM` N1
Figure 5-4 Operation of the Mth-order causal FIR ﬁlter showing various positions of the (gray) sliding window of
M+1 samples over which the weighted average is calculated. When the input signal x[/lscript]has ﬁnite length (N samples),
the sliding window runs onto and off of the input data, so the resulting output signal also has ﬁnite length.
5-3 The General FIR Filter
The causal running average (5.4) is a special case of the general causal difference equation
y[n]=M/summationdisplay
k=0bkx[n−k]=b 0x[n]+b 1x[n−1]+··· + bMx[n−M] (5.5)
where the coefﬁcients bkare ﬁxed numbers. Usually the bkcoefﬁcients are not all
the same, and then we say that (5.5) deﬁnes a weighted running average ofM+1
samples. The 3-point running average (5.4) is the case where M=2 and bk=1/3in
(5.5). It follows from (5.5) that the computation of y[n]involves the samples x[/lscript]for
/lscript=n, n−1,n−2,...,n −M(i.e.,x[n],x[n−1],x[n−2], etc). Figure 5-4 illustrates
how the causal FIR ﬁlter uses x[n]and the past Msamples to compute the output. Since
the sum in (5.5) does not involve future samples of the input, the system is causal, and,
therefore, the output cannot start until the input becomes nonzero.8
A second general form of the FIR ﬁlter that reduces to (5.3) when M=2 andbk=1/3
fork=0,1,2 can be obtained from (5.5) by making the substitution /lscript=n−k(or
equivalently, k=n−/lscript) and adjusting the limits on the sum to obtain
y[n]=n/summationdisplay
/lscript=n−Mbn−/lscriptx[/lscript]=b Mx[n−M]+b M−1x[n−M+1]+···+ b0x[n] (5.6)
Equations (5.5) and (5.6) both show that the subscript index of the ﬁlter coefﬁcientsequence b
kis reversed with respect to the indexing of the input sequence. In (5.6)
b0multiplies the present value of the input x[n]while bMmultiplies the input value
farthest in the past, x[n−M]. This form gives rise to the sliding window visualization of
Fig. 5-4, where each gray bar contains the ﬁlter coefﬁcients listed in reverse order.
8Note that a noncausal system can be represented by altering (5.5) to include negative values of the
summation index k.
174 CHAPTER 5 FIR FILTERS
Figure 5-4 also shows what happens when the input signal is ﬁnite length with a
beginning and end. In this case, the input is zero for /lscript<0 and for N≤/lscriptso it can be
nonzero only when 0 ≤/lscript≤N−1. This possibly nonzero region is called the support
of the signal x[n]. When the input signal has ﬁnite support of length N, there is an
interval of Msamples at the beginning, where the computation involves fewer than M+1
nonzero samples as the sliding window of the ﬁlter engages with the input, and another
interval of Msamples at the end where the sliding window of the ﬁlter disengages from
the input sequence. Furthermore, Fig. 5-4 shows that when the ﬁlter runs off the inputsignal, additional output values are created, so the output sequence can have a supportthat is as much as Msamples longer than the input support. Thus, the length of the
output sequence would be N+Msamples, where Nis the length of the input signal.
These general statements about the input and output of an FIR ﬁlter are illustrated by the
following example.
EXAMPLE 5-1 Pulse Input to 3-Point Running Average
Consider a 3-point running average system expressed in the sliding window form of (5.6)
y[n]=n/summationdisplay
/lscript=n−21
3x[/lscript]
with input
x[n]=/braceleftbigg10 ≤n≤10
0 otherwise
as plotted in Fig. 5-5(a). We refer to this x[n]as a “pulse input” because it is nonzero and
constant over a short interval of length 11. The shaded regions in Fig. 5-5(a) highlight
0 2 4 6 8 10 12 14 16 1800.51
(a)
0 2 4 6 8 10 12 14 16 1800.51Output of 3-Point Running-Average Filter
(b)nD0n D6
nD14Pulse Input Signal
Time Index .n/Time Index for Sum .`/
22
44Figure 5-5 Computing the output of 3-point
running-average ﬁlter. (a) Input signal x[n]is a
length-11 pulse. Shown in gray are three
positions of the length-3 averaging intervalwhich is the sliding window of this FIR ﬁlter.(b) Corresponding output of 3-point runningaverager with values at n=0,6,13
highlighted (black dots).
5-3 THE GENERAL FIR FILTER 175
the three samples of x[/lscript]involved in the computation of the output at n=0,n=6,
andn=14. These speciﬁc cases illustrate how the causal sliding window interval of
length three scans across the input sequence moving sample-by-sample to produce the
output signal. Note the three highlighted samples of the output in Fig. 5-5(b) whichcorrespond to the three positions of the averaging interval in Fig. 5-5(a). Finally, notethat the output is zero when n<0 and n>12 because for these values of n, the
averaging interval includes only zero values of the input. Also note that the output forn=0,1,2 follows a straight line from 0 to 1 because the averaging interval includes
an additional unit sample as it moves to the right over the interval 0 ≤n≤2. A similar
taper occurs at the end of the pulse interval as the averaging interval includes fewernonzero samples as it moves to the right. The output is constant and equal to one in theinterval 2 ≤n≤10, where the averaging interval includes three samples of x[n]where
x[n]=1.
Example 5-1 illustrates the previous assertion about the support of the input
and output signals: If x[/lscript]is nonzero only in the interval 0 ≤/lscript≤N−1, then
for a causal FIR ﬁlter having M+1 coefﬁcients {bk}fork=0,1,...,M , the
corresponding output y[n]can be nonzero only when n≥0 andn−M≤N−1. Thus
the support of the output signal is the interval 0 ≤n≤N+M−1, and the length
of the output support is N+Msamples. This is true regardless of the values of the
M+1 coefﬁcients. In Example 5-1, N=11 and M=2 so the output is nonzero
in the interval 0 ≤n≤12 and the length of the output sequence is 13 samples.
Problem P-5.6 considers the general case where the signal x[n]begins at n=N1and
ends at n=N2.
EXAMPLE 5-2 FIR Filter Coefﬁcients
In general, the FIR ﬁlter is completely deﬁned once the set of ﬁlter coefﬁcients {bk}is
known. For example, if the coefﬁcients of a causal ﬁlter are
{bk}={ 3,−1, 2,1}
then we have a length-4 ﬁlter with M=3, and (5.5) expands into a 4-point difference
equation:
y[n]=3/summationdisplay
k=0bkx[n−k]=3x [n]−x [n−1]+2 x[n−2]+x[n−3]
The parameter Mis the order of the FIR ﬁlter. The number of ﬁlter coefﬁcients is
also called the ﬁlter length (L). Usually, the length is one greater than the order, i.e.,
L=M+1. The terminology “order” will make more sense after we have introduced the
z-transform in Chapter 9.
176 CHAPTER 5 FIR FILTERS
EXERCISE 5.2 Compute the output y[n]for the length-4 ﬁlter whose coefﬁcients are {bk}=
{3,−1, 2,1}. Use the input signal given in Fig. 5-2(a). Verify that the partial answer
tabulated here is correct, then ﬁll in the missing values.
nn<0 01 2345678n>8
x[n] 0 24 6420000 0
y[n] 0 610 18 ???820 0
5-3.1 An Illustration of FIR Filtering
To illustrate some of the things that we have learned so far, and to show how FIR ﬁlters
can modify sequences that vary in interesting ways, consider the signal
x[n]=/braceleftBigg
(1.02)n+1
2cos(2πn/8+π/4)0≤n≤40
0 otherwise
This signal, which is the sum of two components, is shown as the orange dots in Fig. 5-6(a).
We often have real signals of this form; where one component is the signal of interest
which, in this case, is the slowly varying exponential component (1.02)nand the other
component is often considered noise orinterference that degrades the observation of the
desired signal. In this case, we consider the sinusoidal component1
2cos(2πn/8+π/4)to
be an interfering signal that we wish to remove. The solid, exponentially growing curve
shown superimposed in each of the plots in Fig. 5-6 simply connects the sample valuesof the desired signal (1.02)
nby straight lines for reference in all three plots.
Now suppose that x[n]is the input to a causal 3-point running averager, that is,
y3[n]=2/summationdisplay
k=01
3x[n−k] (5.7)
In this case, M=2 and all the coefﬁcients are equal to1/3. The output of this ﬁlter is
shown in Fig. 5-6(b). We can notice several things about these plots.
(a) Observe that the input sequence x[n]is zero prior to n=0, and from (5.7) it follows
that the output must be zero for n<0.
(b) The output becomes nonzero at n=0, and the shaded interval9of length M=2
samples at the beginning of the nonzero part of the output sequence is the intervalwhere the 3-point averager “runs onto” the input sequence. For 2 ≤n≤40, the
input samples within the 3-point averaging window are all nonzero.
9In Example 5-1, shading was used to highlight the moving averaging interval relative to the input
sequence. In Fig. 5-6(b) and (c) shading is used on the output sequence to highlight the ﬁxed intervals at
the beginning and end of the output where the averaging interval engages with and disengages from theﬁnite-length input sequence.
5-3 THE GENERAL FIR FILTER 177
0 5 10 15 20 25 30 35 40 45 500123
0 5 10 15 20 25 30 35 40 45 500123
0 5 10 15 20 25 30 35 40 45 500123
(c)xŒD.1:02/nC1
2cos.2 =8C=4/for0n40
Time Index .n/(a)
(b)Output of 3-Point Averager, y3Œn
Output of 7-Point Averager, y7Œn
555
Figure 5-6 Illustration of running-average
ﬁltering. (a) Input signal; (b) output of
3-point averager; (c) output of 7-pointaverager.
(c) There is another shaded interval of length M=2 samples at the end (after sample
40), where the ﬁlter window “runs off of” the input sequence.
(d) Observe that the size of the sinusoidal component in y3[n]has been reduced slightly,
but that the component is not eliminated by the ﬁlter. The solid line showing the
values of the exponential component has been shifted to the right by M/2=1
sample to account for the shift introduced by the causal ﬁlter.
The 3-point running averager has barely reduced the size of the ﬂuctuations in the
input signal, so we have not recovered the desired component. Intuitively, we might thinkthat averaging over a longer interval might produce better results. The plot in Fig. 5-6(c)shows the output of a 7-point running averager as deﬁned by
y
7[n]=6/summationdisplay
k=01
7x[n−k] (5.8)
In this case, since M=6 and all the coefﬁcients are equal to1/7, we observe the following:
(a) The shaded regions at the beginning and end of the output are now M=6 samples
long.
178 CHAPTER 5 FIR FILTERS
(b) Now the size of the sinusoidal component is greatly reduced relative to the
input sinusoid, and the component of the output is very close to the exponential
component of the input (after a shift of M/2=3 samples).
What can we conclude from this example? First, it appears that FIR ﬁltering can
modify signals in ways that may be useful. Second, the length of the averaging intervalseems to have a big effect on the resulting output. Third, the running-average ﬁlters appearto introduce a shift equal to M/2 samples. All of these observations can be shown to apply
to more general FIR ﬁlters deﬁned by (5.5). However, before we can fully appreciate thedetails of this example, we must explore the properties of FIR ﬁlters in greater detail. Wewill gain full appreciation of this example only upon the completion of Chapter 6.
EXERCISE 5.3 Use MATLAB to implement an 8-point averager and process the composite signal in
Fig. 5-6(a). The output should have no sinusoidal interference in the region where thelength-8 sliding window completely overlaps the input signal. Verify that this is truein the MATLAB output and then explain why this is true by considering the effect ofthe 8-point averager on the sinusoid alone.
5-4 The Unit Impulse Response and Convolution
In this section, we introduce three new ideas: the unit impulse sequence, the unit impulseresponse, and the convolution sum. We show that the impulse response provides a
complete characterization of the FIR ﬁlter, because the convolution sum gives a formula
for computing the output from the input when the unit impulse response is known.
5-4.1 Unit Impulse Sequence
Theunit impulse is perhaps the simplest sequence because it has only one nonzero value,
which occurs at n=0. The mathematical notation is that of the Kronecker delta function
δ[n]=/braceleftBigg
1n=0
0n/negationslash=0(5.9)
It is tabulated in the second row of this table:
n ...−2−1 0123456...
δ[n] 0 0 010000000
δ[n−2]0 0 000100000
A shifted impulse such as δ[n−2]is nonzero when its argument is zero, that is, when
n−2=0, or equivalently n=2. The third row of the previous table gives the values of
the shifted impulse δ[n−2], and Fig. 5-7 shows a plot of that sequence.
5-4 THE UNIT IMPULSE RESPONSE AND CONVOLUTION 179
01234561
… …
n 1 2ıŒn
Figure 5-7 Shifted impulse
sequence, δ[n−2].
The shifted impulse is a concept that is very useful in representing signals and systems.
For example, we can show that the formula
x[n]=2 δ[n]+4 δ[n−1]+6δ [n−2]+4δ[n−3]+2 δ[n−4] (5.10)
is equivalent to deﬁning x[n]by tabulating its ﬁve nonzero values. To interpret (5.10),
we must observe that the appropriate deﬁnition of multiplying a sequence by a number
is to multiply each value of the sequence by that number; likewise, adding two or moresequences is deﬁned as adding the sequence values at corresponding positions (times).
The following table shows the individual sequences in (5.10) and their sum:
n ...−2−1 0123456...
2δ[n] 0 0 020000000
4δ[n−1] 0 0 004000000
6δ[n−2]0 0 000600000
4δ[n−3] 0 0 000040000
2δ[n−4]0 0 000002000
x[n] 0 0 024642000
Equation (5.10) is a compact mathematical representation of the signal in Fig. 5-2(a).
It turns out that any sequence can be represented in this way. The equation
x[n]=/summationdisplay
kx[k]δ[n−k]
=···+ x[−1]δ[n+1]+x [0]δ[n]+x [1]δ[n−1]+x [2]δ[n−2]+···(5.11)
is true if kranges over all the nonzero values of the sequence x[n]. Equation (5.11) states
the obvious: The sequence is formed by using scaled shifted impulses to place samplesof the right size at the correct index positions.
5-4.2 Unit Impulse Response Sequence
The output from a ﬁlter is often called the response to the input, so when the input
is the unit impulse, δ[n], the output is called the unit impulse response.10We reserve
the notation h[n] for this special output signal. To emphasize the impulse response in
10We usually shorten this to impulse response, with unitbeing understood.
180 CHAPTER 5 FIR FILTERS
block diagrams of systems, we show the impulse sequence δ[n]at the input and the
impulse response h[n] at a corresponding position on the output side. This is illustrated
in the block diagram of Fig. 5-8. In other words, it is always true that when the input to
the FIR ﬁlter (5.5) is a unit impulse sequence, x[n]=δ [n], the output is the (unit) impulse
response h[n]. Substituting x[n]=δ [n]in (5.5) gives the output y[n]=h[n]:
h[n]=M/summationdisplay
k=0bkδ[n−k]=/braceleftBigg
bnn=0,1,2,...,M
0 otherwise
As we have observed, the sum evaluates to a single term for each value of nbecause
eachδ[n−k]is nonzero only when n−k=0, orn=k. In tabular form, the impulse
response is
n n<0 0123...MM+1n>M
x[n]=δ [n] 0 100000 0 0
y[n]=h[n] 0b0b1b2b3...bM 0 0
In other words, the impulse response h[n] of the FIR ﬁlter is simply the sequence of
difference equation coefﬁcients. Since h[n]=0 for n<0 and for n>M , the length of
the impulse response sequence h[n] is ﬁnite. This is why the system (5.5) is called a FIR
system. Figure 5-9 illustrates a plot of the impulse response for the case of the causal3-point running-average ﬁlter. Since the impulse response is identical to the sequence ofdifference equation coefﬁcients, it follows that the FIR ﬁlter is completely deﬁned by theimpulse response. In Section 5-7, we show that this characterization is also true for themuch broader class of linear time-invariant (LTI) systems.
EXERCISE 5.4 Determine and plot the impulse response of the FIR system
y[n]=10/summationdisplay
k=0(k−3)x[n−k]
Discrete-Time
FIR FilterıŒxŒ yŒ Figure 5-8 Block diagram showing deﬁnition of the impulse
response. When the input signal is x[n]=δ [n], then by deﬁnition,
the output signal is called the impulse response, y[n]=h[n].
0123456… …
n 1 21
31
31
3
Figure 5-9 Impulse response of a
3-point running-average ﬁlter, h[n].
5-4 THE UNIT IMPULSE RESPONSE AND CONVOLUTION 181
5-4.2.1 The Unit-Delay System
One important system is the operator that performs a delay or shift by an amount n0
y[n]=x [n−n0] (5.12)
When n0=1, the system is called a unit delay. The output of the unit delay is particularly
easy to visualize. In a plot, the values of x[n]are moved to the right by one time index.
For example, y[4]takes on the value of x[3],y[5]takes on the value of x[4],y[6]isx[5],
and so on.
The delay system is actually the simplest of FIR ﬁlters; it has only one nonzero
coefﬁcient. For example, a system that produces a delay of 2 has ﬁlter coefﬁcients {bk}=
{0,0,1}. The order of this FIR ﬁlter is M=2, and its difference equation is
y[n]=b 0x[n]+b 1x[n−1]+b 2x[n−2]
=(0)x[n]+(0 )x[n−1]+(1)x [n−2]=x[n−2]
Note: The length of the delay-by-2 ﬁlter can be either L=3o rL =1, depending on the
situation. In MATLAB a length-3 vector [0,0,1] is needed to implement the ﬁlter. On
the other hand, there is only one nonzero ﬁlter coefﬁcient and, hence, only one term in
the difference equation.
Figure 5-10 shows the output of the delay-by-2 system for the input of Fig. 5-2(a)
on p. 170. The impulse response of the delay system is obtained by substituting δ[n]for
x[n]in (5.12). For the delay-by-2 case,
h[n]=δ [n−n0]=δ[n−2]=/braceleftBigg
1n=2
0n/negationslash=2
A plot of this impulse response would be the shifted impulse shown previously in Fig. 5-7.
5-4.3 FIR Filters and Convolution
A general expression for the FIR ﬁlter’s output (5.5) can be derived in terms of the impulse
response. Since the ﬁlter coefﬁcients in (5.5) are identical to the impulse response values,we can replace b
kin (5.5) by h[k]to obtain
y[n]=M/summationdisplay
k=0h[k]x[n−k] (5.13)
01234567246
4
2… …
n 1 2xŒn
Figure 5-10 Delayed ﬁnite-length
input signal, y[n]=x [n−2]for
the input of Fig. 5-2(a).
182 CHAPTER 5 FIR FILTERS
Now the relation between the input and the output of the FIR ﬁlter is expressed in terms
of the input and the impulse response. The sum in (5.13) is called a ﬁnite convolution
sum, and we say that the output is obtained by convolving the sequences h[n] andx[n].
This terminology emphasizes that convolution is an operation between two sequences.This point of view is formalized by introducing some new notation for the “convolution
operator.” We use a star (∗)to represent the operation of evaluating (5.13) for −∞<
n<∞ by writing
y[n]=h[n]∗x [n] (5.14)
which is read as “the output sequence y[n]is obtained by convolving the impulse response
h[n] with the input sequence x[n].”
Later, in Section 5-7, we will prove that convolution is the fundamental input–output
algorithm for a large class of very useful ﬁlters that includes FIR ﬁlters as a specialcase. We will show that a general form of convolution that also applies to inﬁnite-lengthsignals is
y[n]=h[n]∗x [n]=
∞/summationdisplay
k=−∞h[k]x[n−k] (5.15)
This convolution sum (5.15) has inﬁnite limits to accomodate impulse responses of inﬁnite
length, but reduces to (5.13) when h[n]=0 for n<0 and n>M .
5-4.3.1 Computing the Output of a Convolution
In Section 5-2, the output of the running average FIR ﬁlter was constructed by tabulatingvalues. This method works for short signals, but lacks the generality needed in morecomplicated problems—however, there is a simple interpretation of (5.13) that leads toan algorithm for doing numerical convolution. First of all, we describe the algorithm which
can be implemented using the table in Fig. 5-11 that tracks the relative position of thesignal values. The example in Fig. 5-11 shows how to convolve x[n]={ 2,4,6,4,2}
withh[n]={ 3,−1, 2,1}. The ﬁrst step is to write out the signal values of x[n]andh[n]
on separate rows. Then we use a method similar to what we call
11“synthetic polynomial
000 0
0
0 0
0 0
0 0
0 0x[n]n
h[n]
h[0]x[n]
h[1]x[n – 1]
h[2]x[n – 2]h[3]x[n – 3]
y[n]n < 0 n > 7
020
3
6
0
0
6041
−1
12
−2
0
10462
2
18
−4
0
18843
1
12
−6
2
161224
6
−4
4
18805
0
−2
6
12406
0
0
4
8007
0
0
2
2Figure 5-11 Numerical convolution of ﬁnite-
length signals via synthetic polynomial
multiplication.
11Our use of this term is motivated by analogy to the more well-known process of synthetic polynomial
division.
5-4 THE UNIT IMPULSE RESPONSE AND CONVOLUTION 183
multiplication” to form the output as the sum of shifted rows. Each shifted row is produced
by multiplying the x[n]row by one of the h[k]values and shifting the result to the right
so that it lines up with the h[k]position. The ﬁnal answer is obtained by summing down
the columns.
The justiﬁcation of this algorithm for evaluating the convolution sum (5.13) comes
from examining individual terms in the sum
y[n]=h[0 ]x[n]+h[1]x [n−1]+h[2 ]x[n−2]+···
A term such as x[n−2]is the x[n]signal with its values shifted two columns to the
right. The multiplier h[2]scales the shifted signal x[n−2]to produce the contribution
h[2]x[n−2], which is the highlighted row in the table. All the individual terms must be
added which is accomplished by summing down the columns.
EXERCISE 5.5 Use the “synthetic multiplication” convolution algorithm to compute the output y[n]
for the length-4 ﬁlter whose impulse response is h[n]=δ [n]−2 δ[n−1]+2δ[n−2]
−δ[n−3]. Use the input signal given in Fig. 5-2(a) on p. 170.
5-4.3.2 The Length of a Convolution
Using our new terminology, an FIR ﬁlter is a system whose output is the convolution ofthe ﬁnite-length impulse response of the system with the input to the system. From thisview point, Example 5-1 can be reconsidered as the convolution of the 3-point impulseresponse
h[n]=
1
3δ[n]+1
3δ[n−1]+1
3δ[n−2]
with a length-11 pulse signal. The ﬁlter’s output y[n]=h[n]∗x [n]shown in Fig. 5-5(b)
is nonzero for 0 ≤n≤12. This example illustrates the general principle that if x[n]
is nonzero only in the interval 0 ≤n≤Lx−1, then for a causal FIR ﬁlter having an
impulse response of length Lh=M+1 samples, the corresponding output y[n], which
is the convolution of h[n] withx[n], can be nonzero only when n≥0 andn−M≤Lx−1,
or equivalently, the support of y[n]is the interval 0 ≤n≤Lx+M−1. Thus the length
ofy[n]is
Ly=Lx+Lh−1, (5.16)
which is Ly=11+3−1=13 in Fig. 5-5(b).
Another example is the convolution in Fig. 5-11 which is the convolution of a
length-5 signal, x[n], with a length-4 signal, h[n]. The result y[n]starts at n=0 and
ends at n=7, so it is a length-8 signal. The same result is obtained by using the general
formula (5.16), because Ly=5+4−1=8 in Fig. 5-11.
When the signals start at n=0, it is possible to use the synthetic multiplication
table to prove that the formula (5.16) is true. Since the length of x[n]isLx, the last
184 CHAPTER 5 FIR FILTERS
nonzero signal value is x[Lx−1]. Likewise, for h[n] where h[Lh−1]is the last nonzero
value. In the ﬁgure, the row for h[0]x[n]starts at n=0 and ends at n=Lx−1, while
the row for h[Lh−1]x[n−(Lh−1)]ends at n=(Lx−1)+(Lh−1). After summing
down the columns, we see that the convolution result y[n]starts at n=0 and ends at
n=Lh+Lx−2, so the length of y[n]isLx+Lh−1. Problem P-5.6 considers the
general case where the signal x[n]begins at sample N1and ends at sample N2.
5-4.3.3 Convolution in MATLAB
In MATLAB, FIR systems can be implemented by using the conv function.12For
example, the following MATLAB statements
xn = sin(0.07*pi*(0:50));
hn = ones(11,1)/11;yn = conv(hn, xn);
evaluate the convolution of the 11-point sequence hnwith the 51-point sinusoidal
sequencexn. The particular choice for the MATLAB vector hnis actually the impulse
response of an 11-point running average system:
h[n]=/braceleftBigg
1/11n=0,1,2,...,10
0 otherwise
That is, all 11 ﬁlter coefﬁcients are the same and equal to1/11.
EXERCISE 5.6 In MATLAB, we can compute only the convolution of ﬁnite-length signals. Determine
the length of the output sequence computed by the MATLAB convolution above.
EXERCISE 5.7 Use MATLAB to duplicate the plots of Fig. 5-5 (without the shading) of Example 5-1.
5-4.3.4 Polynomial Multiplication in MATLAB
We have already hinted that this operation called convolution is equivalent to
polynomial multiplication. In Section 9-4 on z-transforms, we will prove that this
correspondence is true. At this point, we note that in MATLAB there is no function
for multiplying polynomials. Instead, we must know that convolution is equivalent topolynomial multiplication. Then we can represent the polynomials by sequences of theircoefﬁcients and use the
conv function to convolve them, thereby doing polynomial
multiplication.
12Note that MATLAB indexes all data vectors starting at 1, while our mathematical formulas index
sequences such as x[n]starting at n=0. This difference must be accounted for in MATLAB programs.
5-4 THE UNIT IMPULSE RESPONSE AND CONVOLUTION 185
EXERCISE 5.8 Use MATLAB’s conv function to compute the following product of polynomials:
P(x)=(1+2x+3x2+5x4)(1−3x−x2+x3+3x4)
5-4.3.5 Filtering the Unit-Step Signal
In previous sections, we have described the FIR ﬁltering of ﬁnite-length signals, but there
is no reason that the input signal cannot be inﬁnite duration. An example is the unit-step
signal which is zero for n<0 and “turns on” at n=0
u[n]=/braceleftBigg
0n<0
1n≥0(5.17)
Figure 5-12(a) shows a plot of u[n]. The symbol u[n] is reserved for the unit step, so
when we want the input signal to be the unit step we write x[n]=u[n], and the output
of anMth-order FIR ﬁlter would be
y[n]=n/summationdisplay
/lscript=n−Mbn−/lscriptu[/lscript] (5.18)
if we use the form in (5.6). Since the FIR ﬁlter is causal and the unit step starts at n=0,
the output is zero for n<0. Determining the output for n≥0 can be done by writing
out terms
0 2 4 6 8 10 12 14 1601
(a)
0 2 4 6 8 10 12 14 160123Output of 3-Point Running-Sum Filter
(b)nD0n D5n D10Unit-Step Input Signal
Time Index .n/Time Index for Sum .`/
22
44Figure 5-12 Filtering the unit-step signal with a
3-point running sum ﬁlter. (a) Input signal is a unit
step plotted versus /lscript, the dummy time index of the
convolution sum (5.18). Shown in gray are threepositions of the length-3 summing interval which isthe sliding window of this FIR ﬁlter.(b) Corresponding output of 3-point running sumwith values at n=0,5,10 highlighted (black dots).
186 CHAPTER 5 FIR FILTERS
y[0]=b 0u[0]=b 0
y[1]=b 1u[0]+b 0u[1]=b 0+b1
y[2]=b 2u[0]+b 1u[1]+b 0u[2]=2/summationdisplay
k=0bk
......
y[M]=M/summationdisplay
k=0bk
y[n]=M/summationdisplay
k=0bkforn>M
Thus there are three cases for the output: (1) when n<0, y[n]=0; (2) when 0 ≤n<M ,
y[n]is the sum of the ﬁrst n+1 ﬁlter coefﬁcients; and (3) when M≤n,y[n]is the sum
of allM+1 ﬁlter coefﬁcients.
When the FIR ﬁlter is an L-point running sum all the ﬁlter coefﬁcients are equal to
one, so the output signal for n≥0 has the values
y[n]={ 1,2,3,...,L −1/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
rising,L,L,L,.../bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
ﬂat plateau}
Figure 5-12(b) shows the result for L=3.
EXAMPLE 5-3 Pulse as the Difference of Two Shifted Unit Steps
Show that a length-5 pulse can be written as
x[n]=u[n −100]−u[n −105]
when the starting index of the pulse is at n=100.
5-4.3.6 Commutative Property of Convolution
The convolution operator point of view introduced in (5.14) turns out to be a very useful
way to think about FIR ﬁlters and the more general class of LTI systems to be discussed in
Sections 5-6 and 5-7. When thought of as an operator, convolution has many interestingproperties that are useful in the analysis and design of linear systems. For example,convolution is a commutative operation, that is,
y[n]=h[n]∗x [n]=x [n]∗h[n] (5.19)
5-4 THE UNIT IMPULSE RESPONSE AND CONVOLUTION 187
This property is suggested by the equivalence of (5.5) and (5.6) for the FIR ﬁlter. Since
the impulse response of an FIR ﬁlter is the sequence of ﬁlter coefﬁcients, (5.6) can be
rewritten as a convolution
y[n]=n/summationdisplay
k=n−Mx[k]h[n−k]=x[n]∗h[n] (5.20)
where h[n] is now ﬂipped within the summation. When x[n]is ﬁnite and nonzero only
for 0≤n≤Mx, the sum in (5.20) can be simpliﬁed further to
y[n]=Mx/summationdisplay
k=0x[k]h[n−k]=x[n]∗h[n] (5.21)
EXERCISE 5.9 Demonstrate that convolution is commutative by interchanging the x[n]andh[n] rows
in Fig. 5-11 and then carrying out the synthetic polynomial multiplication.
The commutative property of convolution is summarized as follows:
Convolution Is Commutative
y[n]=h[n]∗x [n]=x [n]∗h[n](5.22)
In Section 5-6, it is shown that the operation of convolution is also associative and thatconvolution distributes across addition. Thus, convolution for sequences displays thesame properties as multiplication of numbers.
EXERCISE 5.10 Demonstrate that convolution in MATLAB is commutative by adding to the program
in Section 5-4.3.3 the statement ync = conv(xn, hn); , running it again, and
comparing yntoync.
5-4.3.7 MATLAB GUI for Convolution
Figure 5-13 shows a screenshot of a MATLAB GUI that can generate examples ofconvolution with a variety of simple ﬁnite-length signals. The speciﬁc case shown inthe GUI is the convolution of a length-11 square pulse of amplitude 0.5 with an impulseresponse deﬁned by
DEMO
Discrete Convolution
h[n]=δ [n]−δ [n−1] (5.23)
When the length-2 impulse response values are used in the convolution equation (5.20)
withM=1 andh[n] given by (5.23), we obtain
188 CHAPTER 5 FIR FILTERS
Figure 5-13 Graphical user interface for dconvdemo which illustrates the sliding window nature of FIR ﬁltering (i.e.,
convolution). The impulse response h[n] is ﬂipped before sliding. The user can pick the input signal and the impulse
response, and then slide the ﬁlter over the input signal to observe how the output is constructed.
y[n]=n/summationdisplay
k=n−1x[k]h[n−k]
=x[n−1]h[n−(n−1)]+x [n]h[n −n]
=x[n−1]h[1]+x [n]h[0 ]
Therefore, the result can be expressed as the difference equation
y[n]=x [n]−x [n−1]
The impulse response is “ﬂipped” because h[1]=− 1 multiplies x[n−1]which is in the
past, while h[0]=1 multiplies x[0]which is the present value of the signal. Therefore, the
“ﬂiph[n]” button has to be selected in order to visualize the sliding window interpretation
of FIR ﬁltering. In Fig. 5-13, the pointer to the output index ncan be moved back and
forth along the horizontal axis in order to animate the sliding window concept. In the
screen shot, the pointer is at n=4 and the amplitude of the pulse is 1/2 at both n=4
andn=3, so the computation of y[4]is
y[4]= :1
2 1x[4]+ :−1
2 (−1)x [3]= 0
5-5 IMPLEMENTATION OF FIR FILTERS 189
In this GUI it is possible to ﬂip either x[n]orh[n]. This is an expression of
the commutativity property of convolution as discussed in Section 5-4.3.6. For the
convolution x[n]∗h[n] in (5.20), h[n] is ﬂipped in the GUI while for h[n]∗x [n]as
in (5.13), x[n]is ﬂipped in the GUI. Other properties of convolution are discussed in
Section 5-7.2.
EXERCISE 5.11 Use thedconvdemo GUI to repeat the example of Fig. 5-13 with the input “ﬂipped”
and thereby verify the commutativity of convolution. Pay close attention to how theﬂipped input now slides past the impulse response which is ﬁxed at indices 0 and 1.
5-5 Implementation of FIR Filters
Recall that the general deﬁnition of an FIR ﬁlter is
y[n]=M/summationdisplay
k=0bkx[n−k] (5.24)
In order to use (5.24) to compute the output of the FIR ﬁlter, we need the following: (1) ameans for multiplying delayed-input signal values by the ﬁlter coefﬁcients; (2) a meansfor adding the scaled sequence values; and (3) a means for obtaining delayed versionsof the input sequence. We ﬁnd it useful to represent the operations of (5.24) as a blockdiagram. Such representations lead to new insights about the properties of the system andabout alternative ways to implement the system.
5-5.1 Building Blocks
The three basic building-block systems we need are the multiplier, the adder, and the
unit-delay operator. These are depicted in Fig. 5-14.
5-5.1.1 Multiplier
The ﬁrst elementary system performs multiplication of a signal by a constant (see
Fig. 5-14(a)). The output signal y[n]is given by the rule
y[n]=βx [n]
(c) (b) (a)Unit
Delayx1Œn
x2ŒnxŒ xŒ yŒ yŒ yŒˇ
Figure 5-14 Building blocks for making any
LTI discrete-time system: (a) multiplier,
y[n]=βx [n]; (b) adder, y[n]=x 1[n]+x 2[n];
and (c) unit-delay, y[n]=x [n−1].
190 CHAPTER 5 FIR FILTERS
where the coefﬁcient βis a constant. This system can be the hardware multiplier unit
in a computer. For a DSP microprocessor, the speed of this multiplier is one of the
fundamental limits on the throughput of the digital ﬁltering process. In applications suchas image convolution, billions of multiplications per second may have to be performed toimplement a good ﬁlter, so quite a bit of engineering work has been directed at designingfast multipliers for DSP applications. Furthermore, since many ﬁlters require the samesequence of multiplications over and over, pipelining the multiplier also results in adramatic speed up of the ﬁltering process.
Notice, by the way, that the simple multiplier is also an FIR ﬁlter, with M=0, and
b
0=βin (5.5). The impulse response of the multiplier system is simply h[n]=βδ [n].
5-5.1.2 Adder
The second elementary system in Fig. 5-14(b) performs the addition of two signals. This is
a different sort of system because it has two inputs and one output. In hardware, the adderis simply the hardware adder unit in a computer. Since many DSP operations require amultiplication followed immediately by an addition, it is common in DSP microprocessorsto build a special multiply-accumulate unit, often called a “MADD” or “MAC”unit.
13
Noticethattheadderisapointwisecombinationofthevaluesofthetwoinputsequences.
It is not an FIR ﬁlter, because it has more than one input—however, it is a crucial buildingblock of FIR ﬁlters. With many inputs, the adder could be drawn as a multi-input adder,but, in digital hardware, the additions are typically done two inputs at a time.
5-5.1.3 Unit Delay
The third elementary system performs a delay by one unit of time. It is represented by
the block diagram in Fig. 5-14(c). In the case of discrete-time ﬁlters, the time dimensionis indexed by integers, so this delay is by one “count” of the system clock. The hardwareimplementation of the unit delay is actually performed by acquiring a sample value,storing it in memory for one clock cycle, and then releasing it to the output. The delaysby more than one time unit that are needed to implement (5.24) can be implemented (fromthe block-diagram point of view) by cascading several unit delays in a row. Therefore,anM-unit delay requires Mmemory cells conﬁgured as a shift register, which can be
implemented as a circular buffer in computer memory.
5-5.2 Block Diagrams
In order to create a graphical representation that is useful for hardware structures, we useblock-diagram notation, which deﬁnes the interconnection of the three basic buildingblocks to make more complex structures.
14In such a diagram, the nodes (i.e., junction
13For example, the Texas Instruments C667x DSP can perform up to 320 billion 16-bit ﬁxed-point and
160 billion 32-bit ﬂoating-point multiply-adds per second (ca. 2013).
14Such interconnections are called directed graphs.
5-5 IMPLEMENTATION OF FIR FILTERS 191
Unit
Delay
Unit
DelayUnit
Delayb0
b1
b2
b3
y[n]x[n]
x[n−1]
x[n−2]
x[n−3]Figure 5-15 Block-diagram
structure for the third-order FIR
ﬁlter.
points) are either summing nodes, splitting nodes, or input–output nodes. The connections
between nodes are either delay branches or multiplier branches. Figure 5-15 shows thegeneral block diagram for a third-order FIR digital ﬁlter (M=3). This structure shows
why the FIR ﬁlter is also called a feed-forward difference equation, since all paths lead
forward from the input to the output. There are no closed-loop paths in the block diagram.In Chapter 10, we discuss ﬁlters with feedback, where both input and past output values
are involved in the computation of the output.
Strictly speaking, the structure of Fig. 5-15 is a block-diagram representation derived
from grouping the ﬁlter computation as follows:
y[n]=(((b
0x[n]+b 1x[n−1])+b2x[n−2])+b3x[n−3])
which is equivalent to (5.24) with M=3. The input signal is delayed by the cascaded
unit delays, each delayed signal is multiplied by a ﬁlter coefﬁcient, and the productsare accumulated to form the sum. Thus, it is easy to see that there is a one-to-onecorrespondence between the block diagram and the difference equation (5.24) of theFIR ﬁlter, because both are deﬁned by the ﬁlter coefﬁcients {b
k}. A useful skill is to start
with one representation and then produce the other.
The structure in Fig. 5-15 displays a regularity that makes it simple to deﬁne longer
ﬁlters; the number of cascaded delay elements is increased to M, and then the ﬁlter
coefﬁcients {bk}are substituted into the diagram. This standard structure is called the
direct form. Going from the block diagram back to the difference equation is justas easy, as long as we stick to direct form. Here is a simple exercise to make thecorrespondence.
EXERCISE 5.12 Determine the difference equation for the block diagram of Fig. 5-16.
192 CHAPTER 5 FIR FILTERS
Unit
Delay
Unit
DelayUnit
Delay 23
−1
−2
y[n]x[n]
x[n−1]
x[n−2]
x[n−3]Figure 5-16 Third-order FIR ﬁlter
in direct form.
5-5.2.1 Other Block Diagrams
A block diagram of a discrete-time system is really just a pictorial representation of a
particular way to organize the computation of the output from the input. Many different
block diagrams implement the same FIR ﬁlter, in the sense that the external behavior
from input to output is the same, although the details of the internal computations mayvary. Direct form is just one possibility. Other block diagrams would represent a differentinternal computation, or a different order of computation. In some cases, the internalmultipliers might use different coefﬁcients. After we have studied the z-transform in
Chapters 9 and 10, we will have the tools to produce many different implementations.
When faced with an arbitrary block diagram, the following four-step procedure may
be used to derive the difference equation from the block diagram.
(a) Give a unique signal name to the input of each unit-delay block.
(b) Notice that the output of a unit delay can be written in terms of its input.
(c) At each summing node of the structure, write a signal equation. Use the signal
names introduced in steps 1 and 2.
(d) At this point, you have several equations involving x[n],y[n], and the internal
signal names. These can be reduced to one equation involving only x[n]andy[n]
by eliminating variables, as is done with simultaneous equations.
Let us try this procedure on the simple but useful example shown in Fig. 5-17. First of
all, we observe that the internal signal variables {v
1[n],v 2[n],v 3[n]}have been deﬁned
in Fig. 5-17 as the inputs to the three delays. Then the delay outputs are, from top tobottom, v
3[n−1],v2[n−1], and v1[n−1]. We also notice that v3[n]is a scaled version
5-5 IMPLEMENTATION OF FIR FILTERS 193
Unit
Delay
Unit
DelayUnit
Delayb3
b2
b1
b0 v3[n]
 v2[n]
 v1[n]
y[n]x[n]
Figure 5-17 Transposed form
block diagram structure for the
third-order FIR ﬁlter.
of the input x[n]. In addition, we write the three equations at the output of the three
summing nodes:
y[n]=b 0x[n]+v 1[n−1]
v1[n]=b 1x[n]+v 2[n−1]
v2[n]=b 2x[n]+v 3[n−1]
v3[n]=b 3x[n]
Now we have four equations in ﬁve “unknowns.” To show that this set of equations is
equivalent to the direct form, we can eliminate the vi[n]by combining the equations in
a pairwise fashion.
v2[n]=b 2x[n]+b 3x[n−1]
y[n]=b 0x[n]+b 1x[n−1]+v 2[n−2]
=b0x[n]+b 1x[n−1]+b 2x[n−2]+b 3x[n−3]
Thus, we have derived the same difference equation as before, so this new structure must
be a different way of computing the same thing. In fact, it is widely used and is calledthetransposed form
15for the FIR ﬁlter.
EXERCISE 5.13 For the ﬁlter in Fig. 5-16, draw the transposed form block diagram.
15This terminology is suggested by a comparison of Figs. 5-15 and 5-17. Transposition of a single-input-
single-output block diagram is explored in more detail in Section 10-4.3.
194 CHAPTER 5 FIR FILTERS
5-5.2.2 Internal Hardware Details
A block diagram shows dependencies among the different signal variables. Therefore,
different block diagrams that implement the same input–output operation may have
dramatically different characteristics as far as their internal behavior goes. Several issuescome to mind:
(a) The order of computation is speciﬁed by the block diagram. In high-speed
applications where parallelism or pipelining must be exploited, dependencies inthe block diagram represent constraints on the computation.
(b) Partitioning a ﬁlter for an ASIC or FPGA implementation would be done (at the
highest level) in terms of the block diagram. Likewise, algorithms that must bemapped onto special DSP architectures can be managed by using the block diagramwith special compilers that translate the block diagram into optimized code for theDSP chip.
(c) Finite word-length effects are important if the ﬁlter is constructed using ﬁxed-point
arithmetic in order to speed up computation and reduce power consumption. In suchcases, round-off error and overﬂow are important real-world problems that dependon the internal order of computation.
Now that we know something about convolution and the implementation of FIR
ﬁlters, it is time to consider discrete-time systems in a more general way. In the nextsection, we show that FIR ﬁlters are a special case of the general class of LTI systems.Much of what we have learned about FIR ﬁlters will apply to this more general class ofsystems.
5-6 Linear Time-Invariant (LTI) Systems
In this section, we discuss two general properties of systems. These properties, linearity
and time invariance, lead to greater insight and understanding of system behavior. To
facilitate the discussion of these general properties, it is useful to recall the block-diagramrepresentation of a general discrete-time system shown in Fig. 5-1 on p. 168. This blockdiagram used y[n]=T {x[n]}to mean that the system processes x[n]to produce y[n].
Alternatively, we can say that x[n]goes through the system Tandy[n]comes out, which
is captured by the notation
x[n]
T/mapsto−→y[n] (5.25)
In a speciﬁc case, the system is deﬁned by giving a formula or algorithm for computing allvalues of the output sequence from the values of the input sequence. A speciﬁc exampleis the square-law system (S ) deﬁned by the rule:
x[n]
S/mapsto−→(x[n])2(5.26)
5-6 LINEAR TIME-INV ARIANT (LTI) SYSTEMS 195
Another example is (5.12), which deﬁnes the general delay system—still another is (5.24),
which deﬁnes the general FIR ﬁlter and includes the delay system as a special case. These
FIR ﬁlters are both linear and time-invariant, while the square-law system is not linear,but is time-invariant.
5-6.1 Time Invariance
A discrete-time system is said to be time-invariant if, when an input is delayed (shifted)
byn0, the output is delayed by the same amount. The condition must be true for any
signal x[n]and for any choice of n0, the integer that determines the amount of time
shift. A block-diagram view of the time-invariance property is given in Fig. 5-18. In theupper branch, the input is shifted prior to the system; in the lower branch, the outputis shifted. Thus, a system can be tested for time-invariance by checking whether or notw[n]=y [n−n
0]in Fig. 5-18.
Consider the example of the square-law system (S ) deﬁned by (5.26). In the top
branch of Fig. 5-18, we use the delayed input as the input to the square-law system, sowe obtain
x[n]D/mapsto−→x[n−n0]S/mapsto−→(x[n−n0])2
where Ddenotes the delay operator. In the bottom branch, x[n]is the input to the square-
law system, so y[n]=(x [n])2and
x[n]S/mapsto−→(x[n])2 D/mapsto−→(x[n−n0])2
Since the two outputs are the same, the square-law system is time-invariant.
A second simple example is the time-ﬂip system (F), deﬁned by the mapping
x[n]F/mapsto−→x[−n]
The ﬂip system simply reverses the order of the input sequence about the origin. If we
delay the input and then reverse the order about the origin, we obtain
System S
under testSystem S
under test
Delay
byn0Delay
byn0
wŒ equals yŒn n0when
the system is Time-InvariantxŒn n0 wŒ
xŒxŒ
yŒ yŒn n0Figure 5-18 Testing the
time-invariance property of system
Sby checking the interchange of
operations.
196 CHAPTER 5 FIR FILTERS
x[n]D/mapsto−→x[n−n0]F/mapsto−→x[(−n) −n0]=w[n]
However, if we ﬁrst ﬂip the input sequence and then delay it, we obtain a different
sequence from w[n]. Since y[n]=x [−n], the output after delaying y[n]is
x[n]F/mapsto−→x[−n]D/mapsto−→x[−(n−n0)]=x [−n+n0]
Thus, the time-ﬂip system is nottime-invariant.
EXERCISE 5.14 Test the system deﬁned by x[n]T/mapsto−→nx[n]to discover that it is not a time-invariant
system.
5-6.2 Linearity
Linear systems have the property that if x1[n] /mapsto−→y1[n]andx2[n] /mapsto−→y2[n], then
x[n]=αx 1[n]+βx 2[n] /mapsto−→y[n]=αy 1[n]+βy 2[n] (5.27)
where, with no name speciﬁed, /mapsto−→ denotes the system under test. This mathematical
condition must be true for any choice of the constants αandβ, and for all signals x1[n]and
x2[n]. Equation (5.27) states that if the input consists of a sum of scaled sequences, then
the corresponding output is a sum of scaled outputs corresponding to the individual inputsequences. A block-diagram view of the linearity property is given in Fig. 5-19, whichshows that a system can be tested for the linearity property by checking whether or notw[n]=y [n].
The linearity condition in (5.27) is also called the principle of superposition: If the
input is the sum (superposition) of two or more scaled sequences, we can ﬁnd the outputdue to each sequence acting alone and then add (superimpose) the separate scaled outputs.Sometimes it is useful to separate (5.27) into two properties. Setting α=β=1w eg e t
theadditive property
x[n]=x
1[n]+x 2[n] /mapsto−→y[n]=y 1[n]+y 2[n] (5.28a)
and using β=0 there is only one input, which gives the scaling property
x[n]=αx 1[n] /mapsto−→y[n]=αy 1[n] (5.28b)
Both (5.28a) and (5.28b) must be true in order for (5.27) to be true.
5-6 LINEAR TIME-INV ARIANT (LTI) SYSTEMS 197
System S
under testSystem S
under testSystem S
under test
wŒ equals yŒ when
the system is Linearx1Œn
x1Œnx2Œn
x2Œny1Œn
y2Œn
xŒwŒ
yŒ˛
˛ˇ
ˇFigure 5-19 Testing linearity of
system Sby checking the
interchange of operations.
EXERCISE 5.15 Use (5.28b) to show that for linear systems, if x[n]=0 for all n, then y[n]=0 for
alln.
Reconsider the example of the square-law system deﬁned by (5.26). The output w[n]
in the upper part of Fig. 5-19 for this system is
w[n]=α(x 1[n])2+β(x 2[n])2
while, in the lower part, the output is
y[n]=(αx 1[n]+βx 2[n])2
=α2(x1[n])2+2αβx 1[n]x 2[n]+β2(x2[n])2
Thus,w[n] /negationslash= y[n], and the square-law system has been shown not to be linear. Systems
that are not linear are called nonlinear systems.
EXERCISE 5.16 Show that the time-ﬂip system y[n]=x [−n] is a linear system.
5-6.3 The FIR Case
FIR systems described by (5.5) satisfy both the linearity and time invariance conditions.A
mathematical proof of time-invariance can be constructed using the procedure in Fig. 5-18.
198 CHAPTER 5 FIR FILTERS
If we deﬁne the signal v[n]to bex[n−n0], then the difference equation relating v[n]to
w[n]in the upper branch of Fig. 5-18 is
w[n]=M/summationdisplay
k=0bkv[n−k]
=M/summationdisplay
k=0bkx[(n−k)−n0]
=M/summationdisplay
k=0bkx[(n−n0)−k]
For comparison, we construct y[n−n0]in the lower branch
y[n]=M/summationdisplay
k=0bkx[n−k]
⇒y[n−n0]=M/summationdisplay
k=0bkx[n−n0−k]
These two expressions are identical, so the output w[n]is equal to y[n−n0], and we have
proven that the FIR ﬁlter is time-invariant.
The linearity condition is simpler to prove. Substitute into the difference equation (5.5)
and collect terms with x1[n−k]andx2[n−k]:
y[n]=M/summationdisplay
k=0bkx[n−k]
=M/summationdisplay
k=0bk(αx 1[n−k]+βx 2[n−k])
=αM/summationdisplay
k=0bkx1[n−k]+βM/summationdisplay
k=0bkx2[n−k]
=αy1[n]+βy 2[n]
The FIR ﬁlter obeys the principle of superposition; therefore, it is a linear system.
A system that satisﬁes both properties is called a linear time-invariant system, or
simply LTI. It should be emphasized that the LTI condition is a general condition. The
FIR ﬁlter is an example of an LTI system. Not all LTI systems are described by (5.5), but
all systems described by (5.5) are LTI systems.
5-7 Convolution and LTI Systems
Consider an LTI discrete-time system as depicted in the block diagram of Fig. 5-8. Theimpulse response h[n] of the LTI system is simply the output when the input is the
5-7 CONVOLUTION AND LTI SYSTEMS 199
unit impulse sequence δ[n]. In this section, we will show that the impulse response
is a complete characterization for any LTI system, and that convolution is the general
formula that allows us to compute the output from the input for any LTI system. In our
initial discussion of convolution, we considered only ﬁnite-length input sequences and
FIR ﬁlters. Now, we give a completely general presentation that allows inﬁnite-lengthsignals and impulse responses.
5-7.1 Derivation of the Convolution Sum
We begin by recalling from the discussion in Section 5-4 that anysignal x[n]can be
represented as a sum of scaled and shifted impulse signals. Each nonzero sample ofthe signal x[n]multiplies an impulse signal that is shifted to the index of that sample.
Speciﬁcally, we can write x[n]as follows:
x[n]=/summationdisplay
/lscriptx[/lscript]δ[n−/lscript]=···+ x[−2]δ[n+2]+x[−1]δ[n+1] (5.29)
+x[0]δ[n]+x[1]δ[n−1]+x[2]δ[n−2]+···
In the most general case, the range of summation in (5.29) could be from −∞ to+∞.I n
(5.29) we have left the range indeﬁnite, realizing that the sum would include all nonzerosamples of the input sequence.
A sum of scaled sequences such as (5.29) is commonly referred to as a “linear
combination” or superposition of scaled sequences. Thus, (5.29) is a representation ofthe sequence x[n]as a linear combination of scaled, shifted impulses. Since LTI systems
respond in simple and predictable ways to sums of signals and to shifted signals, thisrepresentation is particularly useful for our purpose of deriving a general formula for theoutput of an LTI system.
Figure 5-8 reminds us that the output due to the input δ[n]is, by deﬁnition, the impulse
response h[n]. Time invariance gives us additional information, speciﬁcally, the response
due to δ[n−1]ish[n−1]. In fact, we can write a family of input–output pairs as follows:
δ[n] /mapsto−→h[n]
⇒δ[n−1] /mapsto−→h[n−1]
⇒δ[n−2]/mapsto−→h[n−2]
⇒δ[n−(−1)] /mapsto−→h[n−(−1)]=h[n +1]
⇒δ[n−/lscript] /mapsto−→h[n−/lscript]for any integer /lscript
Now we are in a position to use linearity, because (5.29) expresses a general input signalas a linear combination of shifted impulse signals. We can write out a few of the cases:
x[0]δ[n] /mapsto−→x[0]h[n]
x[1]δ[n−1]/mapsto−→x[1]h[n −1]
x[2]δ[n−2]/mapsto−→x[2]h[n−2]
x[/lscript]δ[n−/lscript]/mapsto−→x[/lscript]h[n −/lscript]for any integer /lscript
200 CHAPTER 5 FIR FILTERS
Then we use superposition to put it all together as
x[n]=/summationdisplay
/lscriptx[/lscript]δ[n−/lscript]/mapsto−→y[n]=/summationdisplay
/lscriptx[/lscript]h[n −/lscript] (5.30)
The derivation of (5.30) did not assume that either x[n]orh[n] was of ﬁnite duration,
so, in general, we may write the convolution sum with inﬁnite limits as
The Convolution Sum Formula
y[n]=x [n]∗h[n]=∞/summationdisplay
/lscript=−∞x[/lscript]h[n −/lscript](5.31)
This expression represents the convolution operation in the most general sense, so
we have proved for discrete-time systems that all LTI systems can be represented by a
convolution sum. The inﬁnite limits take care of all possibilities, including the special
cases where either or both of the sequences are ﬁnite in length.
5-7.2 Some Properties of LTI Systems
The properties of convolution are the properties of LTI systems. Here we examine some
properties of convolution that can be developed from well-known concepts in algebra.
As discussed in Section 5-4.3, convolution is a binary operation between two signals,
so it has an algebraic nature (like multiplication and addition). The convolution of twosequences x
1[n]andx2[n]is an operation that is denoted by ∗, that is,
y[n]=x 1[n]∗x 2[n]=∞/summationdisplay
/lscript=−∞x1[/lscript]x 2[n−/lscript] (5.32)
We say that the ﬁrst sequence x1[n]isconvolved with the second sequence x2[n]to
produce the result y[n]. In Section 5-4.3.6, we showed that convolution with a ﬁnite-
impulse response is a commutative operation, and this is true for inﬁnite sequences aswell. We now show that in the general case of inﬁnite-length sequences, the convolutionoperator is commutative, has an identity element, is associative, and has a distributiveproperty, and then we will relate each of these to properties of LTI systems.
Commutative Property of Convolution An operator is commutative if order does not
matter; in this case, convolving x
2[n]withx1[n]must give the same result as convolving
x1[n]withx2[n].
x2[n]∗x 1[n]=x 1[n]∗x 2[n] (5.33)
5-7 CONVOLUTION AND LTI SYSTEMS 201
Justifying (5.33) involves a simple algebraic manipulation of the convolution sum, where
we make the change of variables k=n−/lscriptand sum on the new dummy variable k:
y[n]=x 2[n]∗x 1[n] (5.34a)
=∞/summationdisplay
/lscript=−∞x2[/lscript]x 1[n−/lscript] (5.34b)
=−∞/summationdisplay
k=+∞x2[n−k]x1[k] (Note: k=n−/lscript) (5.34c)
=∞/summationdisplay
k=−∞x1[k]x2[n−k]=x 1[n]∗x 2[n] (5.34d)
On the third line (5.34c), the limits on the sum can be swapped without consequence,because a set of numbers can be added in any order. When convolution represents an LTIsystem, the commutative property (5.33) becomes
y[n]=x [n]∗h[n]=h[n]∗x [n] (5.35)
which means that the input signal is convolved with the impulse response, or vice versa.
As we have seen, the FIR ﬁlter can be written in two ways: the summation in (5.13) or
in (5.20). As pointed out in Exercise 5.9, both FIR summations are consistent with thecomputational algorithm in Fig. 5-11 on p. 182, because either x[n]orh[n] could be
written on the ﬁrst row, so x[n]andh[n] are interchangeable.
Identity Element of Convolution The unit impulse sequence δ[n]is the identity
element of the convolution operator, that is, a signal is unchanged after convolving withan impulse, x[n]∗δ[n]=x[n]. Justiﬁcation comes from considering the general case of
convolving with a shifted impulse.
Convolution with an Impulse
x[n]∗δ[n−n0]=x[n−n0](5.36)
To show this, recall that convolution is the representation of an LTI system, where we
convolve the input signal x[n]with the impulse response h[n],x[n]∗h[n]. The delay by
n0system is LTI, and its impulse response is known to be h[n]=δ [n−n0], as previously
discussed in Section 5-4.2.1. Thus we can write the input–output behavior of the LTIdelay system in terms of a convolution as
y[n]=x [n−n
0]=x[n]∗h[n]=x[n]∗δ[n−n0]
This is a very useful result because (5.36) states that “to convolve any sequence x[n]
with an impulse located at n=n0, all we need to do is translate the origin of x[n]ton0.”
For example, if x[n]starts at n=0, then x[n−n0]starts at n=n0. When n0=0, we get
the special case x[n]∗δ[n]=x[n]which can be stated succinctly as “δ [n]is the identity
element of convolution.”
202 CHAPTER 5 FIR FILTERS
Associative Property of Convolution The associative property states that, when
convolving three signals,
(x1[n]∗x 2[n])∗x3[n]=x 1[n]∗(x 2[n]∗x 3[n]) (5.37)
we can convolve any two of them and then convolve that result with the third signal.
Furthermore, the commutative property allows these convolutions to be performed in anyorder. The justiﬁcation of the associative property will be given when discussing cascadesystems in the next section.
Distributive Property of Convolution The distributive property states that convolution
distributes over addition
(x
1[n]+x 2[n])∗h[n]=x 1[n]∗h[n]+x 2[n]∗h[n] (5.38)
The convolution written in (5.38) with h[n] is, in fact, a restatement of the additive
property of superposition for an LTI system whose impulse response is h[n].
LAB
Sampling, Convolution,
and FIR Filtering5-8 Cascaded LTI Systems
In a cascade connection of two systems, the output of the ﬁrst system is the input to the
second system, and the overall output of the cascade system is taken to be the output ofthe second system. Figure 5-20(a) shows two LTI systems (LTI 1 and LTI 2) in cascade.
LTI systems have the remarkable property that two LTI systems in cascade can be
implemented in either order. This property is a direct consequence of the commutativeproperty applied to the impulse responses of LTI systems. In order to show that the orderof cascaded LTI systems doesn’t matter, we ﬁrst determine the impulse response of twosystems in cascade. In Fig. 5-20(a), the impulse input and the corresponding outputs are
Equivalent LTI
Dh1Œn h2ŒnLTI 1
h1Œn
LTI 1
h1ŒnLTI 2
h2Œn
LTI 2
h2ŒnıŒ
ıŒ
ıŒ h1Œn h2Œnh2Œn h1Œnh1Œn h2Œn h1Œn
h2ŒnwŒ
wŒxŒ
xŒ
xŒyŒ
yŒ
yŒ(a)
(b)
(c)Figure 5-20 Switching the order of
cascaded LTI systems. The single
LTI system in (c) is equivalent to thecascade connection of the twosystems in (a), and also to thecascade in (b).
5-8 CASCADED LTI SYSTEMS 203
shown below the arrows. When the input to the ﬁrst system is an impulse, the output of
LTI 1 is by deﬁnition its impulse response, h1[n], which then becomes the input to LTI 2.
Next, the output of LTI 2 is the convolution of LTI 2’s input h1[n]with its impulse response
h2[n]. Therefore, the overall impulse response of Fig. 5-20(a) is h1[n]∗h 2[n]according
to (5.31). In the same way, we can easily show that the overall impulse response of theother cascade system in Fig. 5-20(b) is h
2[n]∗h 1[n]. Since convolution is commutative,
the two cascade systems have the same impulse response
h[n]=h 1[n]∗h 2[n]=h 2[n]∗h 1[n] (5.39)
which could be used as the impulse response h[n] of a single system that is equivalent
to either cascade. Stated another way, if the same signal x[n]is the input to each of the
three systems in Fig. 5-20, the output is the same for all three systems, because the overallimpulse response is the same.
A by-product of this analysis of cascade systems is a proof of the associative property
of convolution. For the cascade in Fig. 5-20(a) the output y[n]for an input x[n]is
y[n]=v [n]∗h
2[n]= (x[n]∗h 1[n])∗h2[n]
and for the equivalent system in Fig. 5-20(c)
y[n]=x [n]∗h[n]=x [n]∗(h1[n]∗h 2[n])
The equality of these two expressions is precisely the associative property in (5.37).
EXAMPLE 5-4 Impulse Response of Cascaded Systems
To illustrate the utility of the results that we have obtained for cascaded LTI systems, we
derive a single system that is equivalent to the cascade of two systems deﬁned by
h1[n]=/braceleftBigg
10≤n≤3
0 otherwiseh2[n]=/braceleftBigg
11≤n≤3
0 otherwise
The equivalent system, as in Fig. 5-20(c), has an impulse response equal to h[n]=
h1[n]∗h 2[n]. Therefore, to ﬁnd the overall impulse response h[n] we must convolve
h1[n]withh2[n]. This can be done by using the synthetic polynomial multiplication
algorithm of Section 5-4.3.1. In this case, the computation is as follows:
nn<0 0123456 n>6
h1[n] 0 1111000 0
h2[n] 0 0111
h1[0]h2[n] 0 0000 000 0
h1[1]h 2[n−1] 0 011 1100 0
h1[2]h2[n−2] 0 001 1110 0
h1[3]h 2[n−3] 0 000 1111 0
h[n] 0 012 3321 0
204 CHAPTER 5 FIR FILTERS
The equivalent impulse response in the bottom row also deﬁnes the ﬁlter coefﬁcients {bk},
and we can express h[n] as a sum of weighted shifted impulses
h[n]=6/summationdisplay
k=0bkδ[n−k]
where {bk}is the sequence {0,1,2,3,3,2,1}. The system with this impulse response
h[n] can be implemented either by the single difference equation
y[n]=6/summationdisplay
k=0bkx[n−k] (5.40)
where {bk}is the above sequence, or by the pair of cascaded difference equations
v[n]=3/summationdisplay
k=0x[n−k]
y[n]=3/summationdisplay
k=1v[n−k](5.41)
Example 5-4 illustrates an important point. There is a difference between (5.40) and
(5.41) when doing computation. It can be seen that the cascade implementation in (5.41)
requires a total of only ﬁve additions to compute each value of the output sequence, while(5.40) requires ﬁve additions and an additional four multiplications by coefﬁcients thatare not equal to unity. On a larger scale (longer ﬁlters), such differences in the amountand type of computation can be very important in practical applications of FIR ﬁlters.
Thus, the existence of alternative equivalent implementations of the same ﬁlter provides
ﬂexibility in design choices.
EXERCISE 5.17 The two difference equations in (5.40) and (5.41) would be represented by two
distinctly different block diagrams of the type shown in Fig. 5-15. Construct thedetailed block diagrams of the direct form (5.40) and the cascade form (5.41) showingall multiplications and additions. (Multiplications by 1 do not need to be explicitlyshown as multiply operations.)
5-9 Example of FIR Filtering
We conclude this chapter with an example of the use of FIR ﬁltering on a real signal.
An example of sampled data that can be viewed as a signal is the Dow-Jones IndustrialAverage (DJIA). The DJIA is a sequence of numbers obtained by averaging the closing
prices of a selected number of representative stocks. It has been computed since 1897,
5-9 EXAMPLE OF FIR FILTERING 205
0 200 400 600 800 10000500010,00015,000
Time (in Weeks) Starting in 1993Filtered by Causal 51-Point Running Averager
Figure 5-21 DJIA weekly closings (December
1993 to October 2013) ﬁltered by a 51-point
running-average FIR ﬁlter. Input (orange) andoutput (black). The output samples are connectedto help distinguish them from the input samples.
and is used in many ways by investors and economists. The entire sequence dating back
to 1897 makes up a signal that has positive values and is exponentially growing over thelong term. In order to obtain an example where ﬁne detail is visible, we have selectedthe segment from the end of 1993 to 2013 of the weekly closing price average to be oursignal x[n].
16The raw DJIA signal is the one showing high variability in Fig. 5-21, where
each weekly value is plotted as a distinct point. The smoother curve in Fig. 5-21 is theoutput of a 51-point causal running averager, that is,
y[n]=1
5150/summationdisplay
k=0x[n−k]=h[n]∗x [n] (5.42)
where h[n] is the impulse response of the causal 51-point running averager.
Notice that, as we observed in Fig. 5-5 of Section 5-3.1, there are regions at the
beginning and end (50 samples each, in this case) where the ﬁlter is engaging anddisengaging the input signal. The left-hand region extends up to n=50, which is the
smallest value of nsuch that n−kin (5.42) is never a negative index—speciﬁcally, for
n≥50 no zero samples are included in the sum in (5.42). On the scale required to show the
input and output signals over the selected time interval, the output in this region appearsto rise at a constant rate. This is because the input signal varies only slightly around avalue of approximately 3800 over the interval 0 ≤n≤50, so the output of the running-
average ﬁlter increases approximately linearly as more and more samples of the input areincluded in the 51 sample averaging interval. Similarly, the output tapers down to zerowhenngoes past the last sample index in the input as fewer and fewer of the input samples
in the interval n−50 tonare nonzero. The nonzero portion of the output is 50 points
longer than the input because the ﬁlter eventually gives zero output after the index n−50
goes past the end of the input.
Also notice that much of the ﬁne-scale week-to-week variation has been removed
by the ﬁlter. Finally, notice that the output is shifted relative to the input. In
16The complete set of weekly sampled data for the period 1897–2014 would involve more than
6000 samples and would range in value from about 40 to above 17,000. A plot of the entire sequence
would not show the effects that we wish to illustrate.
206 CHAPTER 5 FIR FILTERS
Chapter 6, we will develop techniques that will explain why the shift introduced by
this ﬁlter is exactly M/2=50/2=25 samples. Because the sampling period is 1
week, the 51-point averaging is over 51 weeks, and the shift corresponds to a delay of25 weeks.
17
In this example, it is informative to compare the input and output without the
25-sample shift, which can be done if we use the noncausal centralized running averager
˜y[n]=1
5125/summationdisplay
k=−25x[n−k]=x[n]∗˜h[n]
where ˜h[n] is the impulse response of the centralized running averager. The output ˜y[n]
can be obtained by shifting (advancing) the output of the causal running averager y[n]
by 25 samples to the left. In terms of our previous discussion of cascaded FIR systems,we could think of the centralized system as a cascade of the causal system with a systemwhose impulse response is δ[n+25], because (5.36) says that convolution of y[n]with
an impulse shifts the origin of the sequence to the location of the impulse (in this case,ton=−25).
˜y[n]=y [n]∗δ [n+25]
=(x[n]∗h[n]) ∗δ[n+25]
=x[n]∗(h[n]∗δ [n+25])
=x[n]∗h[n +25]
Thus, we ﬁnd that the impulse response of the centralized running averager, ˜h[n]=
h[n+25], is a shifted version of the impulse response of the causal running averager. By
shifting the impulse response, we remove the delay introduced by the causal system.
LAB
Sampling, Convolution,
and FIR Filtering
EXERCISE 5.18 Determine the impulse response h[n] of the 51-point causal running averager and
determine the impulse response ˜h[n] for the 51-point centralized running averager.
The cascade representation of the centralized running averager is depicted in Fig. 5-22.
One way to describe the system in Fig. 5-22 is to say that the second system compensates
for the delay of the ﬁrst, that is, the centralized running averager is a zero-delay running-
average ﬁlter.
Figure 5-23 shows the input x[n]and output ˜y[n]for the delay-compensated running-
average ﬁlter. It now can be seen that corresponding features of the input and output are
well aligned.
17We use 51 weeks instead of 52, because a 52-week running average has a delay of 51 /2=25.5. The
interpretation of a half-sample delay as a shift is not as straightforward as when the delay is an integer
number of samples.
5-11 PROBLEMS 207
Centralized Averager51-point
Causal
AveragerAdvance
System
h2ŒnDıŒnCyŒ xŒ QyŒ
Figure 5-22 Cascade interpretation of
centralized running averager in terms of causal
running averager with delay compensation.
0 200 400 600 800 10000500010,00015,000
Time (in Weeks) Startin g in 1993Filtered by Noncausal 51-Point Running Averager
Figure 5-23 Input (orange) and output (black)
for delay-compensated 51-point runningaverager applied to DJIA weekly closings.
5-10 Summary and Links
This chapter introduced the concept of FIR ﬁltering along with the general concepts
of convolution, the impulse response, and linear time-invariant systems. Among the
laboratory projects on the Companion Website, the one entitled Sampling, Convolution,
and FIR Filtering deals with discrete convolution and the effects of sampling. This lab
also requires the use of two MATLAB GUIs, one for sampling, con2dis from Chapter 4,
the other for discrete convolution, dconvdemo .DEMO
Discrete Convolution
NOTE
Problems with Solutions5-11 Problems
The problems in this section address the major concepts of FIR ﬁltering, LTI systems
and convolution in this chapter. On the Companion Website there are many relatedhomework problems which can be used to review and practice. Most of them have detailedsolutions.
P-5.1 If the impulse response h[n] of an FIR ﬁlter is
h[n]=7δ [n]+δ [n−2]−6δ [n−5]
write the difference equation for the FIR ﬁlter.
208 CHAPTER 5 FIR FILTERS
P-5.2 Evaluate the expression G=13/summationdisplay
n=0(4δ[n−3]−4 δ[n−8])e−j(2π
3)n. Express the
numerical answer for Gas a complex number in polar form.
P-5.3 The length-L running sum is deﬁned as
y[n]=1
LL−1/summationdisplay
k=0x[n−k]
When the input x[n]is the unit-step signal, determine the output signal as follows:
(a) Compute the numerical values of y[n]over the time interval −5≤n≤10,
assuming that L=5.
(b) Make a sketch of the output over the time interval −5≤n≤10, assuming that
L=5. Use MATLAB if necessary, but learn to do it by hand also.
(c) Finally, derive a general formula for y[n]that will apply for any length Land for
the range n≥0.
P-5.4 An LTI system is described by the difference equation
y[n]=2 x[n]−3x [n−1]+2 x[n−2]
(a) When the input to this system is
x[n]=⎧
⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩0 n<0
n+1n=0,1,2
5−nn=3,4
1 n≥5
Compute the values of y[n], over the index range 0 ≤n≤10.
(b) For the previous part, plot both x[n]andy[n].
(c) Determine the response of this system to a unit impulse input, that is, ﬁnd the output
y[n]=h[n] when the input is x[n]=δ [n]. Plot h[n] as a function of n.
P-5.5 An LTI system is described by the difference equation
y[n]=4 x[n]−5x [n−1]+1.2 x[n−2]
(a) Draw the implementation of this system as a block diagram in direct form.
(b) Give the implementation as a block diagram in transposed direct form.
5-11 PROBLEMS 209
P-5.6 Consider a system deﬁned by
y[n]=M/summationdisplay
k=0bkx[n−k]
(a) Suppose that the input x[n]is nonzero only for 0 ≤n≤N−1. Show that y[n]
is nonzero at most over a ﬁnite interval of the form 0 ≤n≤P−1, which is the
support of y[n]. Determine Pin terms of the ﬁlter order Mand the input signal
length N.
(b) Suppose that the input x[n]is nonzero only for N1≤n≤N2. What is the length
ofx[n]? Show that y[n]is nonzero at most over a ﬁnite interval of the form N3≤
n≤N4, which is the support of y[n]. Determine N3andN4and also the length of
y[n]in terms of N1,N2, andM.Hint: Draw a sketch similar to Fig. 5-4 on p. 173.
P-5.7 The unit-step u[n] can be used to represent sequences that are zero for n<0.
(a) Plot the sequence x[n]=(−0 .5)nu[n] for−2≤n≤8.
(b) The L-point running sum is deﬁned as
y[n]=L−1/summationdisplay
k=0x[n−k]
For the input sequence x[n]=(−0 .5)nu[n], compute the values of y[n]over the
index range −2≤n≤8, assuming that L=2.
(c) For the input sequence x[n]=anu[n], derive a general formula for the output of
the running sum y[n]that applies for any value a, for any length L, and for the
index range n≥−2. In doing so, you may have use for the formula:
N/summationdisplay
k=Mαk=αM−αN+1
1−α
P-5.8 The impulse response h[n] of an FIR ﬁlter is shown in Fig. P-5.8. Determine
the ﬁlter coefﬁcients {bk}of the difference equation for the FIR ﬁlter. If an input x[n]=
{2,1,−1} is applied to it, obtain the output.
012345673713
9
5… …
1 2 3 n Figure P-5.8
210 CHAPTER 5 FIR FILTERS
P-5.9 If the ﬁlter coefﬁcients of an FIR system are {bk}={ − 10,10,10}and the input
signal is
x[n]=/braceleftBigg
0 for neven
1 for nodd
determine the output signal y[n]for all n. Give your answer as either a plot or a
formula.
P-5.10 For each of the following systems, determine whether or not the system is
(1) linear, (2) time-invariant, and (3) causal:
(a)y[n]=x [n]cos(0.2πn)
(b)y[n]=x [n]−x [n−1]
(c)y[n]=| x[n]|
(d)y[n]=Ax [n]+B , where AandBare nonzero constants.
P-5.11 Suppose that Sis an LTI system whose exact form is unknown. It is tested by
running some inputs into the system, and then observing the output signals. Suppose that
the following input–output pairs are the result of the tests:
Input: x[n] Output: y[n]
δ[n]−δ [n−1]δ[n]−δ [n−1]+2 δ[n−3]
cos(πn/2 ) 2 cos(πn/2 −π/4)
(a) Make a plot of the signal:
y[n]=δ [n]−δ [n−1]+2 δ[n−3].
(b) Use linearity and time invariance to ﬁnd the output of the system when the input is
x[n]=7δ [n]−7δ [n−2]
P-5.12 An LTI system has impulse response
h[n]=2 δ[n]−3δ [n−1]+δ [n−2]+4δ[n−5]
(a) Implement the above system in direct form and transposed direct form.
(b) If the difference equation was given instead, how would the implementations differ?
5-11 PROBLEMS 211
P-5.13 For a particular LTI system, when the input is the unit step, x1[n]=u[n], the
corresponding output is
y1[n]=δ [n]+2 δ[n−1]−δ [n−2]=⎧
⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩0n<0
1n=0
2n=1
−1n=2
0n≥3
(a) Determine the output when the input to the LTI system is x
2[n]=3u[n]−6u[n −2].
Give your answer as a formula expressing y2[n]in terms of known sequences, or
give a list of values for −∞<n<∞.
(b) It is possible to write the unit impulse as the difference of two unit steps. Determine
AandBso that the following is true:
δ[n]=Au[n]+Bu [n−1]
(c) Use the result of part (b) to determine the impulse response h[n] of the system.
P-5.14 For the FIR ﬁlter y[n]=x [n]−2 x[n−1], determine the output signal y[n]for
two similar cases.
(a) The inﬁnite-length input signal x[n]=2nu[n].
(b) The length-7 input signal x[n]=2n(u[n]−u[n −7]).
(c) For part (b), plot x[n]andy[n]for 0≤n≤10.
P-5.15 One form of the deconvolution process starts with the output signal and the
ﬁlter’s impulse response, from which it is sometimes possible to ﬁnd the input signal.
(a) If the output of an FIR ﬁlter with h[n]=δ [n−4]is
y[n]=3u[n −3]−7u[n −5]
determine the input signal, x[n].
(b) For the ﬁrst-difference ﬁlter deﬁned as
y[n]=x [n]−x [n−1]
determine the output signal when the input is u[n−3].
(c) If the output of a ﬁrst-difference FIR ﬁlter is
y[n]=δ [n−3]−δ [n−6],
determine the input signal, x[n].
212 CHAPTER 5 FIR FILTERS
(d) If the output of a 2-point running sum ﬁlter is
y[n]=− 6δ[n]−6δ [n−3],
determine the input signal, x[n].
P-5.16 Another form of the deconvolution process starts with the output signal and the
input signal, from which it may be possible to ﬁnd the impulse response.
(a) If the input signal is x[n]=u[n], ﬁnd the FIR ﬁlter that produces the output signal
y[n]=u[n −1].
(b) If the input signal is x[n]=u[n], ﬁnd the FIR ﬁlter that produces the output signal
y[n]=δ [n].
(c) If the input signal is x[n]=(1
2)nu[n], ﬁnd the FIR ﬁlter that produces the output
signal y[n]=δ [n−1].
P-5.17 It is not always possible to solve the deconvolution process for a given input–
output pair. For example, show that there is no FIR ﬁlter that can process the input
x[n]=δ [n]+δ [n−1]to give the output y[n]=δ [n].
P-5.18 Suppose that three systems are connected in cascade. In other words, the output
ofS1is the input to S2, and the output of S2is the input to S3. The three systems are
speciﬁed by the following difference equations:
S1:y1[n]=x 1[n]+x 1[n−1]
S2:y2[n]=x 2[n]−2 x2[n−2]
S3:y3[n]=x 3[n−1]−x 3[n−2]
We wish to determine the equivalent system that is a single operation from the input x[n]
(into S1) to the output y[n], which is the output of S3.
(a) Determine the impulse response h[n] of the overall system, that is, ﬁnd h[n] so
thaty[n]=x [n]∗h[n].
(b) Write one difference equation that deﬁnes the overall system in terms of x[n]and
y[n]only.
(c) If a new system is deﬁned as (S1+S2)∗S3determine its h[n]. Thus x1[n]=
x2[n]=x [n],x 3[n]=y 2[n]+y 1[n], and y[n]=y 3[n].
5-11 PROBLEMS 213
P-5.19 Consider a system implemented by the following MATLAB program:
% xx.mat is a binary file containing the
% vector of input samples called "xx"load xxyy1 = conv(ones(1,4),xx);yy2 = conv([1, -1, -1, 1],xx);ww = yy1 + yy2;yy = conv(ones(1,3),ww);
The overall system from input xxto outputyyis an LTI system composed of three
LTI systems.
(a) Draw a block diagram of the system that is implemented by the program given
above. Be sure to indicate the impulse responses and difference equations of each
of the component systems.
(b) The overall system is an LTI system. What is its impulse response, and what is the
difference equation that is satisﬁed by the input x[n]and the output y[n]?
CHAPTER
6
Frequency
Response of FIR
Filters
Chapter 5 introduced the class of FIR discrete-time systems. We showed that the weighted
running average of a ﬁnite number of input sequence values deﬁnes a discrete-time system,and that such systems are linear and time-invariant (LTI). We also showed that the impulseresponse of an FIR system completely deﬁnes the system. In this chapter, we introducethe concept of the frequency response of an LTI FIR ﬁlter and show that the frequency
response and impulse response are uniquely related.
It is remarkable that for LTI systems, when the input is a complex sinusoid, the
corresponding output signal is another complex sinusoid of exactly the same frequency,but with different magnitude and phase. All LTI systems possess this sinusoid-in
gives sinusoid-out property. The frequency-response function, when plotted over all
frequencies, summarizes the response of an LTI system by giving the magnitude and phasechange experienced by all possible sinusoids. Furthermore, since LTI systems obey the
214
6-1 SINUSOIDAL RESPONSE OF FIR SYSTEMS 215
principle of superposition, the frequency-response function is a complete characterization
of the behavior of the system for any input that can be represented as a sum of sinusoids.Since, as we will show in Chapter 7, almost any discrete-time signal can be representedby a superposition of sinusoids, the frequency response is sufﬁcient therefore to representthe system for almost any input signal.
6-1 Sinusoidal Response of FIR Systems
Linear time-invariant systems behave in a particularly simple way when the input is adiscrete-time complex exponential. To see this, consider an FIR system
y[n]= M/summationdisplay
k=0bkx[n−k] (6.1)
and assume that the input is a complex exponential signal1with normalized radian
frequency ˆω, amplitude A, and phase φ
x[n]=Aejϕejˆωn−∞<n<∞
For such inputs, the corresponding output is
y[n]=M/summationdisplay
k=0bkAejϕejˆω(n−k)
=/parenleftBiggM/summationdisplay
k=0bke−jˆωk/parenrightBigg
Aejϕejˆωn
=H(ˆω)Aejϕejˆωn−∞<n<∞ (6.2)
where
H(ˆω)=M/summationdisplay
k=0bke−jˆωk(6.3)
Because we have represented the frequency of the complex exponential signal as thegeneral symbol ˆω, we have obtained an expression (6.3) that is a function of ˆω. In other
words, (6.3) describes the response of the LTI system to a complex exponential signal ofanyfrequency ˆω. The quantity H(ˆω)deﬁned by (6.3) is therefore called the frequency-
response function for the system. Generally, we shorten this to frequency response.
However, there is an issue of notation for the frequency response that is dictated by
consistency with the z-transform (to be introduced in Chapter 9). In (6.3) the righthand
side contains powers of the complex exponential e
jˆω. This is true of many expressions
1Recall that this discrete-time signal could have been obtained by sampling the continuous-time signal
x(t)=Aejϕejωt.Ifx[n]=x(nT s), then ωandˆωare related by ˆω=ωTs, where Tsis the sampling period.
216 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
for the frequency response. Therefore, we elect to use the notation H(ejˆω)instead of
H(ˆω)to emphasize the ubiquity of ejˆω. The function H(ejˆω)still depends on the variable
ˆω. Furthermore, since the impulse response sequence of an FIR ﬁlter is the same as the
sequence of ﬁlter coefﬁcients, we can express the frequency response in terms of either
the ﬁlter coefﬁcients bkor the impulse response h[k], that is,
Frequency Response of an FIR System
H(ejˆω)=M/summationdisplay
k=0bke−jˆωk=M/summationdisplay
k=0h[k]e−jˆωk(6.4)
Several important points can be made about (6.2) and (6.4). First of all, the
precise interpretation of (6.2) is as follows: When the input is a discrete-timecomplex exponential signal, the output of an LTI FIR ﬁlter is also a discrete-time complex exponential signal with a different complex amplitude, but thesame frequency ˆω. The frequency response multiplies the complex exponential
input signal, thereby changing the complex amplitude. While it is tempting toexpress this fact by the mathematical statement y[n]=H(e
jˆω)x[n], it is strongly
recommended that this should never be done because it is too easy to forget that themathematical statement is true only for complex exponential signals of frequency ˆω.
The statement y[n]=H(e
jˆω)x[n]ismeaningless for any signal other than signals
of precisely the form x[n]=Aejϕejˆωn.It is very important to understand this
point.
A second important point is that the frequency response H(ejˆω)is complex-
valued so it can be expressed either as H(ejˆω)=|H(ejˆω)|ej∠H(ejˆω)or asH(ejˆω)=
/Rfractur{H(ejˆω)}+j /Ifractur{H(ejˆω)}. The magnitude and angle form of the frequency response
is the most convenient form, since the complex multiplication needed in (6.2) is mostconveniently accomplished in polar form. The effect of the LTI system on the magnitude(A)and phase (ϕ)of the input complex exponential signal is determined completely by
the frequency response H(e
jˆω). Speciﬁcally, if the input is x[n]=Aejϕejˆωn, then using
the polar form of H(ejˆω)gives the result
y[n]=/parenleftBig
|H(ejˆω)|ej∠H(ejˆω)/parenrightBig
Aejϕejˆωn
=(|H(ejˆω)|·A)ej(∠H(ejˆω)+ϕ)ejˆωn(6.5)
The magnitude of H(ejˆω)multiplies the signal amplitude (A)which changes the size of
the signal. Thus, |H(ejˆω)|is usually referred to as the gain of the system.2The angle
∠H(ejˆω)simply adds to the phase (ϕ)of the input, thereby producing additional phase
shift in the complex exponential signal.
2The gain can be less than or greater than 1, even though the word suggests greater than.
6-1 SINUSOIDAL RESPONSE OF FIR SYSTEMS 217
EXAMPLE 6-1 Formula for the Frequency Response
Consider an LTI system for which the difference equation coefﬁcients are
{bk}={ 1,2,1}. Substituting into (6.3) gives
H(ejˆω)=1+2e−jˆω+e−jˆω2
To obtain formulas for the magnitude and phase of the frequency response of this FIR
ﬁlter, we can manipulate the equation as follows:
H(ejˆω)=1+2e−jˆω+e−jˆω2
=e−jˆω/parenleftBig
ejˆω+2+e−jˆω/parenrightBig
=e−jˆω/parenleftbig
2+2 cosˆω/parenrightbig
Since (2+2 cosˆω)≥0 for frequencies −π< ˆω≤π, the magnitude is |H(ejˆω)|=
(2+2 cosˆω)and the phase is ∠H(ejˆω)=−ˆω.
EXAMPLE 6-2 Complex Exponential Input
Consider the complex input x[n]=2 ejπ/4ej(π/3)nwhose frequency is ˆω=π/3. If this
signal is the input to the system of Example 6-1, then we must evaluate the frequency
response at the input frequency in order to use the frequency-domain method deﬁned in(6.5). The evaluation gives: |H(e
jπ/3)|=2 +2 cos(π/3) =3and∠H(ejπ/3)=−π/3.
Therefore, the output of the system for the given input is
y[n]=3e−jπ/ 3·2ejπ/4ejπn/ 3
=(3·2)·e(jπ/ 4−jπ/ 3)ejπn/ 3
=6e−jπ/ 12ejπn/ 3=6ejπ/4ejπ(n−1)/3
Thus, for this system and the given input x[n], the output is equal to the input multiplied
by 3, and the phase shift of −π/ 3 corresponds to a delay of one sample.
EXERCISE 6.1 When the sequence of coefﬁcients is symmetrical ( b0=bM,b1=bM−1, etc.), the
frequency response can be manipulated as in Example 6-1. Following the style ofthat example, show that the frequency response of an FIR ﬁlter with coefﬁcients{b
k}={ 1,−2,4,−2,1}can be expressed as
H(ejˆω)=[4−4 cos( ˆω)+2 cos(2 ˆω)]e−j2ˆω
218 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
6-2 Superposition and the Frequency Response
The principle of superposition makes it very easy to ﬁnd the output of an LTI system if
the input is a sum of complex exponential signals. This is why the frequency response is
so important in the analysis and design of LTI systems. As an example, suppose that theinput to an LTI system is a cosine wave with a speciﬁc normalized frequency ˆω
1plus a
DC level,
x[n]=A 0+A1cos(ˆω1n+ϕ1)
If we represent the signal in terms of complex exponentials, the signal is composed ofthree complex exponential signals, with frequencies ˆω=0,ˆω
1,and−ˆω1,s o
x[n]=A 0ej0n+A1
2ejϕ1ejˆω1n+A1
2e−jϕ 1e−jˆω1n
By superposition, we can determine the output due to each term separately and then addthem to obtain the output y[n]corresponding to x[n]. Because the components of the
input signal are all complex exponential signals, it is easy to ﬁnd their respective outputsif we know the frequency response of the system; we just multiply each component byH(e
jˆω)evaluated at the corresponding frequency to obtain
y[n]=H(ej0)A0ej0n+H(ejˆω1)A1
2ejϕ1ejˆω1n+H(e−jˆω1)A1
2e−jϕ 1e−jˆω1n
Note that we have used the fact that a constant signal is a complex exponential with ˆω=0.
If we express H(ejˆω1)asH(ejˆω1)=|H(ejˆω1)|ej∠H(ejˆω1), then the algebraic steps3in (6.6)
show that y[n]can ﬁnally be expressed as a modiﬁed cosine signal plus a constant.
y[n]=H(ej0)A0ej0n+H(ejˆω1)A1
2ejϕ1ejˆω1n+H∗(ejˆω1)A1
2e−jϕ 1e−jˆω1n
=H(ej0)A0+|H(ejˆω1)|ej∠H(ejˆω1)A1
2ejϕ1ejˆω1n
+|H(ejˆω1)|e−j∠H(ejˆω1)A1
2e−jϕ 1e−jˆω1n
=H(ej0)A0+|H(ejˆω1)|A1
2ej(ˆω1n+ϕ 1+∠H(ejˆω1))
+|H(ejˆω1)|A1
2e−j(ˆω1n+ϕ 1+∠H(ejˆω1))
=H(ej0)A0+|H(ejˆω1)|A 1cos/parenleftBig
ˆω1n+ϕ1+∠H(ejˆω1)/parenrightBig(6.6)
Notice that the magnitude and phase change of the cosine input signal are taken from thepositive frequency part of H(e
jˆω), but also notice that it was crucial to express x[n]as a
3It is assumed that H(ejˆω)has the conjugate-symmetry property H(e−jˆω)=H∗(ejˆω), which is always
true when the ﬁlter coefﬁcients are real. (See Section 6-4.3.)
6-2 SUPERPOSITION AND THE FREQUENCY RESPONSE 219
sum of complex exponentials and then use the frequency response to ﬁnd the output due
to each complex component separately.
EXAMPLE 6-3 Cosine Input
For the FIR ﬁlter with coefﬁcients {bk}={ 1,2,1}, ﬁnd the output when the input is
x[n]=3 cos/parenleftBigπ
3n−π
2/parenrightBig
The frequency response of the system was determined in Example 6-1 to be
H(ejˆω)=(2+2 cosˆω)e−jˆω
Note that H(e−jˆω)=H∗(ejˆω),s oH(ejˆω)has conjugate symmetry. Solution of this
problem requires just one evaluation of H(ejˆω)at the frequency ˆω=π/3:
H(ejπ/3)=e−jπ/ 3(2+2 cos(π/3) )
=e−jπ/ 3/parenleftbig
2+2(1
2)/parenrightbig
=3e−jπ/ 3
Therefore, the magnitude is |H(ejπ/3)|=3 and the phase is ∠H(ejπ/3)=−π/3,s ot h e
output is
y[n]=(3)(3) cos/parenleftBigπ
3n−π
3−π
2/parenrightBig
=9 cos/parenleftBigπ
3(n−1)−π
2/parenrightBig
Notice that the magnitude of the frequency response multiplies the amplitude of the cosinesignal, and the phase angle of the frequency response adds to the phase of the cosinesignal. This problem could also be studied and solved with the
dltidemo MATLAB
GUI.DEMO
DLTI Demo
LAB
Hearing Test via
Frequency ResponseIf the input signal consists of the sum of many complex exponential signals, the
frequency response can be applied to ﬁnd the output due to each component separately,
and the results added to determine the total output. This is the principle of superpositionat work. If we can ﬁnd a representation for a signal in terms of complex exponentials,the frequency response gives a simple and highly intuitive means for determining whatan LTI system does to that input signal. In the general case, if the input to an LTI systemis a real signal and can be represented as
x[n]=X
0+N/summationdisplay
k=1/parenleftbiggXk
2ejˆωkn+X∗
k
2e−jˆωkn/parenrightbigg
=X0+N/summationdisplay
k=1|Xk|cos(ˆωkn+∠Xk)
220 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
then the corresponding output is y[n]in (6.7), if H(e−jˆω)=H∗(ejˆω), which is true when
the ﬁlter coefﬁcients are real.
y[n]=H(ej0)X0+N/summationdisplay
k=1/parenleftbigg
H(ejˆωk)Xk
2ejˆωkn+H(e−jˆωk)X∗
k
2e−jˆωkn/parenrightbigg
=H(ej0)X0+N/summationdisplay
k=1|H(ejˆωk)||Xk|cos/parenleftBig
ˆωkn+∠Xk+∠H(ejˆωk)/parenrightBig(6.7)
Fory[n]in (6.7), each individual complex exponential component in x[n]has been
modiﬁed by the frequency response evaluated at the frequency of that component.
EXAMPLE 6-4 Three Sinusoidal Inputs
For the FIR ﬁlter with coefﬁcients {bk}={ 1,2,1}, ﬁnd the output when the input is
x[n]=4 +3 cos/parenleftBigπ
3n−π
2/parenrightBig
+3 cos/parenleftbigg7π
8n/parenrightbigg
(6.8)
There are three freqeuencies, 0, π/3, and 7π/ 8, so the output has three sinusoids
at those same frequencies. The frequency response of the system was determined in
Example 6-1, and is the same as the frequency response in Example 6-3. The input in thisexample differs from that of Example 6-3 by the addition of a constant (DC) term andan additional cosine signal of frequency 7π/ 8. The solution by superposition therefore
requires that we evaluate H(e
jˆω)at frequencies 0, π/3, and 7π/ 8, giving
H(ej0)=4
H(ejπ/3)=3e−jπ/ 3
H(ej7π/8)=0.1522e−j7π/8
Therefore, the output is
y[n]=4 ·4+3·3 cos/parenleftBigπ
3n−π
3−π
2/parenrightBig
+0.1522 ·3 cos/parenleftbigg7π
8n−7π
8/parenrightbigg
=16+9 cos/parenleftBigπ
3(n−1)−π
2/parenrightBig
+0.4567 cos/parenleftbigg7π
8(n−1)/parenrightbigg
Notice that, in this case, the DC component is multiplied by 4, the component at frequency
ˆω=π/3 is multiplied by 3, but the component at frequency ˆω=7π/8 is multiplied
by 0.1522. Because the frequency-response magnitude (gain) is so small at frequency
ˆω=7π/8, the component at this frequency is essentially ﬁltered out of the input
signal.
6-3 STEADY-STATE AND TRANSIENT RESPONSE 221
The examples of this section illustrate an approach to solving problems that is often
called the frequency-domain approach. As these examples show, we do not need to deal
with the time-domain description (i.e., the difference equation or impulse response) of
the system when the input is a complex exponential signal. We can work exclusively
with the frequency-domain description (i.e., the frequency response), if we think abouthow the spectrum of the signal is modiﬁed by the system rather than considering whathappens to the individual samples of the input signal. We will have ample opportunity tovisit both the time domain and the frequency domain in the remainder of this chapter.
DEMO
Introduction to FIR
Filtering
6-3 Steady-State and Transient Response
In Section 6-1, we showed that if the input is
x[n]=Xejˆωn−∞<n<∞ (6.9)
where X=Aejϕ, then the corresponding output of an LTI FIR system is
y[n]=H(ejˆω)Xejˆωn−∞<n<∞ (6.10)
where
H(ejˆω)=M/summationdisplay
k=0bke−jˆωk(6.11)
In (6.9), the condition that x[n]be a complex exponential signal existing over
−∞<n<∞ is important. Without this condition, we cannot obtain the simple result
of (6.10). However, this condition appears to be somewhat impractical. In any practical
implementation, we surely would not have actual input signals that exist back to −∞!
Fortunately, we can relax the condition that the complex exponential input be deﬁnedover the doubly inﬁnite interval and still take advantage of the convenience of (6.10).
To see this, consider the following “suddenly applied” complex exponential signal that
starts at n=0 and is nonzero only for 0 ≤n:
x[n]=Xe
jˆωnu[n]=/braceleftBigg
Xejˆωn0≤n
0 n<0(6.12)
Note that multiplication by the unit-step signal is a convenient way to impose the suddenlyapplied condition. The output of an LTI FIR system for this input is obtained by usingthe deﬁnition of x[n]in (6.12) in the FIR difference equation:
y[n]=
M/summationdisplay
k=0bkXejˆω(n−k)u[n−k]/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
x[n−k](6.13)
222 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
By considering different values of nand the fact that u[n−k]=0 for k>n , it follows
that the sum in (6.13) can be expressed as three cases
y[n]=⎧
⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎩0 n<0/parenleftbigg
n/summationdisplay
k=0bke−jˆωk/parenrightbigg
Xejˆωn0≤n<M
/parenleftbiggM/summationdisplay
k=0bke−jˆωk/parenrightbigg
XejˆωnM≤n(6.14)
That is, when the complex exponential signal is suddenly applied, the output can be
considered to be deﬁned over three distinct regions. In the ﬁrst region, n<0, the input is
zero, and therefore the corresponding output is zero, too. The second region is a transition
region whose length is Msamples (i.e., the order of the FIR system). In this region, the
complex multiplier of ejˆωndepends upon n. This region is often called the transient part
of the output. In the third region, M≤n, the output is identical to the output that would
be obtained if the input were deﬁned over the doubly inﬁnite interval, that is,
y[n]=H(ejˆω)XejˆωnM≤n (6.15)
This part of the output is generally called the steady-state part. While we have speciﬁed
that the steady-state part exists for all n≥M, it should be clear that (6.15) holds only
as long as the input remains equal to Xejˆωn. If, at some time n>M , the input changes
frequency or the amplitude becomes zero, another transient region occurs.
EXAMPLE 6-5 Steady-State Output
A simple example illustrates the above discussion. Consider the system of Exercise 6.1,
whose ﬁlter coefﬁcients are the sequence {bk}={ 1,−2,4,−2,1}. The frequency
response of this system is
H(ejˆω)=[4−4 cos( ˆω)+2 cos(2 ˆω)]e−j2ˆω
If the input is the suddenly applied cosine signal
x[n]=cos(0 .2πn−π)u[n]
we can represent it as the sum of two suddenly applied complex exponential signals.
Therefore, the frequency response can be used as discussed in Section 6-2 to determine
the corresponding steady-state output. Since H(ejˆω)atˆω=0.2πis
H(ejˆω)=[4−4 cos(0 .2π)+2 cos(0 .4π)]e−j2(0.2π)=1.382e−j(0.2π)2
andM=4, the steady-state output is
y[n]=1.382 cos(0 .2π(n−2)−π) 4≤n
6-4 PROPERTIES OF THE FREQUENCY RESPONSE 223
0 5 10 15 2001
(a)
0 5 10 15 2001
(b)Time Index .n/xŒ
yŒ
11
2
3
55
Figure 6-1 (a) Input x[n]= cos(0.2πn−π)u[n]
and (b) corresponding output y[n]for the FIR
ﬁlter with coefﬁcients {1,−2,4,−2,1}. The
transient region is the shaded area in (b). (Note
the different vertical scales.)
The frequency response has allowed us to ﬁnd a simple expression for the output
everywhere in the steady-state region. If we desire the values of the output in the transient
region, we could compute them using the difference equation for the system.
The input and output signals for this example are shown in Fig. 6-1. Since M=4
for this system, the transient region is 0 ≤n≤3 (indicated by the shaded region), and
the steady-state region is n≥4. Also note that, as predicted by the steady-state analysis
above, the signal in the steady-state region is simply a scaled (by 1.382) and shifted (bytwo samples) version of the input.
6-4 Properties of the Frequency Response
The frequency response H(ejˆω)is a complex-valued function of the normalized fre-
quency variable ˆω. This function has interesting properties that often can be used to
simplify analysis.
6-4.1 Relation to Impulse Response and Difference Equation
H(ejˆω)can be calculated directly from the ﬁlter coefﬁcients {bk}. If (6.1) is compared to
(6.4), we see that, given the difference equation, it is simple to write down an expressionforH(e
jˆω)by noting that each term bkx[n−k]in (6.1) corresponds to a term bke−jˆωkor
h[k]e−jˆωkin (6.4), and vice versa. Likewise, H(ejˆω)can be determined directly from the
impulse response since the impulse response of the FIR system consists of the sequenceof ﬁlter coefﬁcients (i.e., h[k]=b
kfork=0,1,...,M ). To emphasize this point, we
can write the correspondence
Time Domain ←→ Frequency Domain
h[n]=M/summationdisplay
k=0h[k]δ[n−k]← →H(ejˆω)=M/summationdisplay
k=0h[k]e−jˆωk
224 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
The process of going from the FIR difference equation, or impulse response, to the
frequency response is straightforward. It is also simple to go from the frequency
response to the FIR difference equation or to the impulse response if we expressH(e
jˆω)in terms of powers of e−jˆω. These points are illustrated by the following two
examples.
EXAMPLE 6-6 h[n]← →H(ejˆω)
Consider the FIR ﬁlter deﬁned by the impulse response
h[n]=− δ[n]+3δ [n−1]−δ [n−2]
The values of h[n] are the ﬁlter coefﬁcients {bk}={ − 1,3,−1}, so the difference equation
corresponding to this impulse response is
y[n]=− x[n]+3x [n−1]−x [n−2]
Thus, the frequency response of this system is
H(ejˆω)=−1+3e−jˆω−e−j2ˆω
EXAMPLE 6-7 Difference Equation from H(ejˆω)
Often the frequency response is given by an equation containing sines or cosines, forexample,
H(e
jˆω)=e−jˆω/parenleftbig
3−2 cosˆω/parenrightbig
To obtain the FIR difference equation, it is necessary to write H(ejˆω)using powers of
e−jˆω. In this example, we can use the inverse Euler formula cos ˆω=1
2(ejˆω+e−jˆω), and
then obtain
H(ejˆω)=e−jˆω/bracketleftBigg
3−2/parenleftBigg
ejˆω+e−jˆω
2/parenrightBigg/bracketrightBigg
=−1+3e−jˆω−e−jˆω2
Now, it should be easy to see that H(ejˆω)corresponds to the following FIR difference
equation:
y[n]=− x[n]+3x [n−1]−x [n−2]
The impulse response, likewise, is easy to determine directly from H(ejˆω), when
expressed in terms of powers of e−jˆω.
EXERCISE 6.2 Use the inverse Euler formula for sines to ﬁnd the impulse response and difference
equation for H(ejˆω)=2jsin(ˆω/2)e−jˆω/2.
6-4 PROPERTIES OF THE FREQUENCY RESPONSE 225
6-4.2 Periodicity of H(ejˆω)
An important property of a discrete-time LTI system is that its frequency response H(ejˆω)
is always a periodic function with period 2 π. This can be seen by considering a frequency
ˆω+2πwhere ˆωis any frequency. Substituting into (6.3) gives
H(ej(ˆω+2π))=M/summationdisplay
k=0bke−j(ˆω+2π)k
=M/summationdisplay
k=0bke−jˆωke−j2πk
/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
=1=H(ejˆω)
sincee−j2πk=1 when kis an integer. It is not surprising that H(ejˆω)should have this
property, since, as we have seen in Chapter 4, a change in the frequency of a discrete-time
complex exponential by 2 πis not detectable, that is,
x[n]=Xej(ˆω+2π)n=Xejˆωn *1
ej2πn=Xejˆωn
In other words, two complex exponential signals with frequencies differing by 2 πhave
identical time samples, so there is no reason to expect a discrete-time system to behavedifferently for two such frequencies. For this reason, it is always sufﬁcient to specify thefrequency response only over an interval of one period, usually, −π< ˆω≤π.
6-4.3 Conjugate Symmetry
The frequency response H(ejˆω)is complex valued, but usually has a symmetry in its
magnitude and phase that allows us to focus on just the interval 0 ≤ˆω≤πwhen plotting.
This is the property of conjugate symmetry
H(e−jˆω)=H∗(ejˆω) (6.16)
which is true whenever the ﬁlter coefﬁcients are real (i.e., bk=b∗
k, or, equivalently h[k]=
h∗[k]). We can prove this property for the FIR case as follows:
H∗(ejˆω)=/parenleftBiggM/summationdisplay
k=0bke−jˆωk/parenrightBigg∗
=M/summationdisplay
k=0b∗
ke+jˆωk
=M/summationdisplay
k=0bke−j(−ˆω)k=H(e−jˆω)
226 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
The conjugate-symmetry property implies that the magnitude function is an even
function of ˆωand the phase is an odd function, so we write
|H(e−jˆω)|=|H(ejˆω)|
∠H(e−jˆω)=−∠H(ejˆω)
Similarly, the real part is an even function of ˆωand the imaginary part is an odd function, so
/Rfractur{H(e−jˆω)}=/Rfractur { H(ejˆω)}
/Ifractur{H(e−jˆω)} = −/Ifractur{H(ejˆω)}
As a result, plots of the frequency response are often shown only over half a period,
0≤ˆω≤π, because the negative frequency region can be constructed by symmetry.
These symmetries are illustrated by the plots in Section 6-5.
EXERCISE 6.3 Prove that the magnitude is an even function of ˆωand the phase is an odd function of ˆω
for a conjugate-symmetric frequency response. Start by proving that the magnitude-
squared H(ejˆω)H∗(ejˆω)is an even function.
6-5 Graphical Representation of the Frequency Response
Two important points should be emphasized about the frequency response of an LTI
system. First, since the frequency response usually varies with frequency, sinusoids ofdifferent frequencies are treated differently by the system. Second, by appropriate choiceof the coefﬁcients, b
k, a wide variety of frequency response shapes can be realized. In order
to visualize the variation of the frequency response with frequency, it is useful to plot themagnitude |H(e
jˆω)|and phase ∠H(ejˆω)versus ˆω. Two plots are needed because H(ejˆω)
is complex valued. We will see that the plots tell us at a glance what the system does tocomplex exponential signals and sinusoids of different frequencies. Several examples areprovided in this section to illustrate the value of plotting the frequency response.DEMO
Introduction to FIR
Filtering
6-5.1 Delay System
The delay system is a simple FIR ﬁlter given by the difference equation
y[n]=x [n−n0]
where the integer n0is the amount of delay. It has only one nonzero ﬁlter coefﬁcient,
bn0=1, so its frequency response is
H(ejˆω)=e−jˆωn0(6.17)
6-5 GRAPHICAL REPRESENTATION OF THE FREQUENCY RESPONSE 227
O!†H.ejO!/
2 20
Figure 6-2 Phase response of pure delay (n0=2)
system, H(ejˆω)=e−j2ˆω.
For this system, the two plots of the frequency response are easy to visualize: The
magnitude response is one for all frequencies because |e−jˆωn0|=1. The phase plot is
a straight line with a slope equal to −n 0, as in Fig. 6-2, because ∠H(ejˆω)=−n0ˆω.
As a result, we can associate the slope of a linear phase versus frequency with time
delay as a general rule in all ﬁlters. Since time delay shifts a signal plot horizontally butdoes not change its shape, we often think of linear phase as an ideal phase response.
6-5.2 First-Difference System
As another simple example, consider the ﬁrst-difference system
y[n]=x [n]−x [n−1]
which forms its output by subtracting adjacent values of the input sequence. The frequencyresponse of this LTI system is
H(e
jˆω)=1−e−jˆω
SinceH(ejˆω)=1−(cos(ˆω)−jsin(ˆω))=(1−cosˆω)+jsinˆω, the magnitude and phase
can be written from the real and imaginary parts
|H(ejˆω)|=[(1−cosˆω)2+sin2ˆω]1/2
=[2(1−cosˆω)]1/2=2|sin(ˆω/2)|
∠H(ejˆω)=arctan/parenleftbiggsinˆω
1−cosˆω/parenrightbigg
The magnitude and phase are plotted in Fig. 6-3 for −3π< ˆω< 3π. These extended
plots allow us to verify that H(ejˆω)is periodic with period 2 π, and to see the conjugate-
symmetry properties discussed in Section 6-4.3. Normally, we would plot the frequencyresponse of a discrete-time system only for −π< ˆω≤π, or, when there is conjugate
symmetry, 0 ≤ˆω≤π.
The utility of the magnitude and phase plots of H(e
jˆω)can be seen even for this simple
example. In Fig. 6-3 H(ej0)=0, so we conclude that the system completely removes
components with ˆω=0 (i.e., DC). Furthermore, in the magnitude plot (Fig. 6-3(a)) we
can see that the system boosts components at higher frequencies (near ˆω=π) relative to
the lower frequencies. This sort of ﬁlter is called a highpass ﬁlter. This sort of behavior
228 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
2
(a)
(b)O!O!
†H.ejO!/ˇˇH.ejO!/ˇˇ
2
200
Figure 6-3 (a) Magnitude and (b) phase for
H(ejˆω)=1−e−jˆωover three periods showing
periodicity and conjugate symmetry of H(ejˆω).
of a ﬁlter in low frequency and high frequency bands is another typical way of thinking
about systems in the frequency domain.
The real and imaginary parts and the magnitude and phase can always be derived by
standard manipulations of complex numbers. However, there is a simpler approach forgetting the magnitude and phase when the sequence of coefﬁcients is either symmetricor antisymmetric about a central point. The following algebraic manipulation of H(e
jˆω)
is possible because the {bk}coefﬁcients satisfy the antisymmetry condition:
bk=−bM−k (6.18)
where M=1 for the ﬁrst-difference ﬁlter. The trick, which we used previously in
Example 6-1 on p. 217, is to factor out an exponential whose phase is half of the ﬁlterorder(M/2)times ˆω, and then use the inverse Euler formula to combine corresponding
positive- and negative-frequency complex exponentials. For the ﬁrst-difference ﬁlter, weexploit (6.18) to write
H(e
jˆω)=1−e−jˆω
=e−jˆω/2/parenleftBig
ejˆω/2−e−jˆω/2/parenrightBig
=2je−jˆω/2sin(ˆω/2)
=2 sin(ˆω/2)/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
Magnitude?exp(j (π/2 −ˆω/2)/bracehtipupleft/bracehtipdownright/bracehtipdownleft /bracehtipupright
Phase?)
The form derived for H(ejˆω)is almost a valid polar form, but since sin (ˆω/2)is negative
for−π< ˆω< 0, we must write the magnitude as |H(ejˆω)|=2 |sin(ˆω/2)|, and then
6-5 GRAPHICAL REPRESENTATION OF THE FREQUENCY RESPONSE 229
absorb the negative sign4into the phase response for −π< ˆω< 0. Thus the correct
phase in polar form is
∠H(ejˆω)=/braceleftBigg
π/2−ˆω/20 <ˆω≤π
−π+π/2−ˆω/2 −π≤ˆω< 0
This formula for the phase is consistent with the phase plot in Fig. 6-3(b), which exhibits
several straight line segments, but has discontinuities at ˆω=0 and ˆω=±2π. The size
of these discontinuities is π, since they correspond to sign changes in H(ejˆω).
EXAMPLE 6-8 First-Difference Removes DC
Suppose that the input to a ﬁrst-difference system is x[n]=4 +2 cos(0 .3πn−π/4). Since
the output is related to the input by the difference equation y[n]=x [n]−x [n−1],i t
follows that
y[n]=4 +2 cos(0 .3πn−π/4)−4−2 cos(0 .3π(n −1)−π/4)
=2 cos(0 .3πn−π/4)−2 cos(0 .3πn−0.55π)
From this result, we see that the ﬁrst-difference system removes the constant value and
leaves two cosine signals of the same frequency, which could be combined by phasoraddition. However, the solution using the frequency-response function is simpler. Sincethe ﬁrst-difference system has frequency response
H(e
jˆω)=2 sin(ˆω/2)ej(π/ 2−ˆω/2)
the output of this system for the given input can be obtained more quickly via
y[n]= 4H(ej0)+2|H(ej0.3π)|cos(0.3πn−π/4+∠H(ej0.3π))
In other words, we need to evaluate the frequency response only at ˆω=0 and ˆω=0.3π.
SinceH(ej0)=0 and
H(ej0.3π)=2 sin(0.3π/ 2)ej(0.5π−0.15π)
=0.908ej0.35π
the output is
y[n]=(0 .908)(2 )cos(0.3πn−π/4+0.35π)
=1.816 cos(0 .3πn+0.1π)
6-5.3 A Simple Lowpass Filter
In Examples 6-1, 6-3, and 6-4, the system had frequency response
H(ejˆω)=1+2e−jˆω+e−j2ˆω=(2+2 cosˆω)e−jˆω
4Remember that −1=e±jπ, so we can add either +πor−πto the phase for −π< ˆω< 0. In this case,
we add −πso that the resulting phase curve remains between −πand+πradians for all ˆω.
230 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
0
(a)4
(b)O!O!
†H.ejO!/ˇˇH.ejO!/ˇˇ
22
22
33
33 8
8
88
0Figure 6-4 Magnitude (a) and phase (b) of system
with frequency response H(ejˆω)=(2+2 cosˆω)e−jˆω.
Gray dots indicate points where the frequency
response is evaluated to calculate the sinusoidalresponse in Example 6-9.
Since the factor (2+2 cosˆω)≥0 for all ˆω, it follows that
|H(ejˆω)|=(2 +2 cosˆω)
and
∠H(ejˆω)=−ˆω
These functions are plotted in Fig. 6-4 for −π< ˆω≤π. The phase response (Fig. 6-4(b))
is linear (a straight line) with a slope of −1, so we know that the system introduces a
delay of one sample. The magnitude response (Fig. 6-4(a)) shows that the system tends to
favor the low frequencies (close to ˆω=0) with high gain, while it tends to suppress high
frequencies (close to ˆω=π). In this case, there is a gradual decrease in gain from ˆω=0
toˆω=π, so that the midrange frequencies receive more gain than the high frequencies,
but less than the low frequencies. Filters with magnitude responses that suppress the highfrequencies of the input are called lowpass ﬁlters.
EXAMPLE 6-9 Lowpass Filter
If we repeat Example 6-4, we can show how the plot of H(ejˆω)in Fig. 6-4 makes it easy
to ﬁnd the ﬁlter’s output for sinusoidal inputs. In Example 6-4, the input was
x[n]=4 +3 cos/parenleftBigπ
3n−π
2/parenrightBig
+3 cos/parenleftbigg7π
8n/parenrightbigg
(6.19)
6-5 GRAPHICAL REPRESENTATION OF THE FREQUENCY RESPONSE 231
as shown in Fig. 6-5(a), and the ﬁlter coefﬁcients were {bk}={ 1,2,1}. In order to get
the output signal, we must evaluate H(ejˆω)at frequencies 0, π/3, and 7π/ 8 giving
H(ej0)=4
H(ejπ/3)=3e−jπ/ 3
H(ej7π/8)=0.1522e−j7π/8
These values are the points indicated with gray dots on the graphs of Fig. 6-4. As in
Example 6-4, the output is
y[n]=4 ·4+3·3 cos/parenleftBigπ
3n−π
3−π
2/parenrightBig
+0.1522 ·3 cos/parenleftbigg7π
8n−7π
8/parenrightbigg
=16+9 cos/parenleftBigπ
3(n−1)−π
2/parenrightBig
+0.4567 cos/parenleftbigg7π
8(n−1)/parenrightbigg
We can see two features in the output signal y[n]. The sinusoid with ˆω=7π/8 has a
very small magnitude because the magnitude response around ˆω=πis relatively small.
Also, the linear phase slope of −1 means that the ﬁlter introduces a time delay of one
sample which is evident in the second and third terms of y[n].
The output of the simple lowpass ﬁlter is the time waveform shown in Fig. 6-5(b).
Note that the DC component is indicated in both parts of the ﬁgure as a gray horizontal
line. The output appears to be the sum of a constant level of 16 plus a cosine that hasamplitude 9 and seems to be periodic with period 6. Closer inspection reveals that this isnot exactly true because there is a third output component at frequency ˆω=7π/8, which
is just barely visible in Fig. 6-5(b). Its size is about 5% of the size of the component withfrequency ˆω=π/3.
0 5 10 15 20 25 300510
(a)
0 5 10 15 20 25 3001020
(b)Time Index .n/xŒ
yŒFigure 6-5 Input and output of a system with
frequency response H(ejˆω)=(2+2 cosˆω)e−jˆω.
(a) Segment of the input signal x[n]given by (6.19),
and (b) the corresponding segment of the output.
232 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
6-6 Cascaded LTI Systems
The cascade connection of systems allows us to treat small systems as building blocks
in two ways: several low-order systems can be cascaded to create a more complicated
high-order system, or a high-order system can be broken down into a few simple low-order systems that are easier to design and analyze. In Section 5-8, we showed that if twoLTI systems are connected in cascade (output of the ﬁrst is input to the second), then theoverall impulse response is the convolution of the two individual impulse responses. Inother words, the cascade system is equivalent to a single system whose impulse responseis the convolution of the two individual impulse responses. In this section, we show thatthe frequency response of a cascade connection of two LTI systems is simply the productof the individual frequency responses.
DEMO
Cascading FIR Filters
Figure 6-6(a) shows the cascade connection of two LTI systems. To ﬁnd the frequency
response of the overall system (from input x[n]to output y1[n]), we let
x[n]=ejˆωn
where ˆωis a ﬁxed frequency. Then, the output of the ﬁrst LTI system is
w1[n]=H 1(ejˆω)ejˆωn
The signal w1[n]is a complex exponential and the term H1(ejˆω)is acomplex constant
that determines its magnitude and phase. Thus, the output of the second system is
y1[n]=H 2(ejˆω)/parenleftBig
H1(ejˆω)ejˆωn/parenrightBig
=H2(ejˆω)H1(ejˆω)ejˆωn
From a similar analysis of Fig. 6-6(b), it follows that
y2[n]=H 1(ejˆω)/parenleftBig
H2(ejˆω)ejˆωn/parenrightBig
=H1(ejˆω)H2(ejˆω)ejˆωn
(c)(b)(a)
LTI Equivalent
H.ejO!/DH1.ejO!/H2.ejO!/LTI 1
H1.ejO!/
LTI 1
H1.ejO!/LTI 2
H2.ejO!/
LTI 2
H2.ejO!/ejO!n
ejO!n
ejO!nH.ejO!/ejO!nH1.ejO!/ejO!n
H2.ejO!/ejO!nH1.ejO!/H2.ejO!/ejO!nH2.ejO!/H1.ejO!/ejO!nw1Œn
w2ŒnxŒ
xŒ
xŒ yŒy1Œn
y2ŒnFigure 6-6 Frequency response of three
equivalent cascaded LTI systems. All three
systems have the same frequency response so thaty[n]=y
1[n]=y 2[n]for the same input x[n].
6-6 CASCADED LTI SYSTEMS 233
Since ˆωis a ﬁxed frequency, the multiplication of frequency response values,
H2(ejˆω)H1(ejˆω)orH1(ejˆω)H2(ejˆω), must give the same answer because complex
multiplication is commutative, and it follows that y1[n]=y 2[n]. Thus, the two cascade
systems are equivalent for the same complex exponential input, and both of them are
equivalent to a single LTI system with frequency response
H(ejˆω)=H1(ejˆω)H2(ejˆω) (6.20)
The output y[n]of any system with frequency response H(ejˆω)given by (6.20) is the
same as either y1[n]ory2[n]. This is depicted in Fig. 6-6(c).
DEMO
Cascading FIR FiltersRecall from Section 5-8 on p. 202 that the overall impulse response is h1[n]∗h 2[n].W e
can conclude therefore that “convolution in the time domain is equivalent to multiplicationin the frequency domain.” For cascaded systems, convolution of impulse responsescorresponds to multiplication of the frequency responses.
Convolution ←→ Multiplication
h1[n]∗h 2[n]← →H 1(ejˆω)H2(ejˆω)(6.21)
The correspondence shown in (6.21) is useful because it provides another way of
representing and manipulating LTI systems. This is illustrated by the following example.
EXAMPLE 6-10 Frequency Responses in Cascade
Suppose that the ﬁrst system in a cascade of two FIR LTI systems is deﬁned by the set ofcoefﬁcients {2,1,2}and the second system is deﬁned by the coefﬁcients {0,3,0,−3}.
Therefore, the frequency responses of the individual systems are
H
1(ejˆω)=2+e−jˆω+2e−jˆω2
and
H2(ejˆω)=3e−jˆω−3e−jˆω3
The overall frequency response is obtained by carrying out the multiplication of terms:
H(ejˆω)=H1(ejˆω)H2(ejˆω)
=/parenleftBig
2+e−jˆω+2e−jˆω2/parenrightBig/parenleftBig
3e−jˆω−3e−jˆω3/parenrightBig
=6e−jˆω+3e−jˆω2+(6−6)e−jˆω3−3e−jˆω4−6e−jˆω5
Thus, the overall equivalent impulse response is
h[n]=6δ [n−1]+3δ [n−2]−3δ [n−4]−6δ [n−5]
and the ﬁlter coefﬁcients of the equivalent FIR system are {0,6,3,0,−3,−6}.
234 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
This example illustrates that convolving two impulse responses is equivalent
to multiplying their frequency responses. For FIR systems, the frequency response
is a polynomial in the variable e−jˆω. Thus, multiplying two frequency responses
requires polynomial multiplication. This result provides the theoretical basis for the“synthetic” polynomial multiplication algorithm discussed in Section 5-4.3.1 on p. 182.
EXERCISE 6.4 Suppose that two systems are cascaded. The ﬁrst system is deﬁned by the set
of coefﬁcients {1,2,3,4}, and the second system is deﬁned by the coefﬁcients
{−1, 1,−1}. Determine the frequency response and the impulse response of the
overall cascade system.
6-7 Running-Sum Filtering
Another common LTI system is deﬁned by the difference equation
y[n]=L−1/summationdisplay
k=0x[n−k] (6.22)
=x[n]+x [n−1]+···+ x[n−L+1]
This system (6.22) is called an L-point running sum because the output at time nis
computed as the sum of x[n]and the L−1 previous samples of the input. The system
deﬁned by (6.22) can be implemented in MATLAB for L=11 by the statements:
bb = ones(11,1);
yy = conv(bb, xx);
wherexxis a vector containing the samples of the input. The vector bbcontains the 11
ﬁlter coefﬁcients, which are all equal to one in this case.
Using (6.4) on p. 216, the frequency response of the L-point running sum is
H(ejˆω)=L−1/summationdisplay
k=0e−jˆωk(6.23)
We can derive a simple formula for the magnitude and phase of the running sum by
making use of the formula for the sum of the ﬁrst Lterms of a geometric series,
L−1/summationdisplay
k=0αk=1−αL
1−α(forα/negationslash=1) (6.24)
6-7 RUNNING-SUM FILTERING 235
First of all, we identify e−jˆωasα, and then do the following steps:
H(ejˆω)=L−1/summationdisplay
k=0e−jˆωk=/parenleftBigg
1−e−jˆωL
1−e−jˆω/parenrightBigg
=/parenleftBigg
e−jˆωL/2(ejˆωL/2−e−jˆωL/2)
e−jˆω/2(ejˆω/2−e−jˆω/2)/parenrightBigg
=/parenleftbiggsin(ˆωL/2)
sin(ˆω/2)/parenrightbigg
e−jˆω(L−1)/2(6.25)
The numerator and denominator in the second line are simpliﬁed by using the inverse
Euler formula for sines. We ﬁnd it convenient to express (6.25) in the form
H(ejˆω)=DL(ˆω)e−jˆω(L−1)/2(6.26)
where
DL(ˆω)=sin(ˆωL/2)
sin(ˆω/2)(6.27)
We refer to the function DL(ˆω)as aDirichlet form,5and the subscript Lindicates that
it comes from an L-point running sum. In MATLAB, a scaled version of DL(ˆω)can be
evaluated with the diric function.
6-7.1 Plotting the Frequency Response
The frequency response of an 11-point running-sum ﬁlter is given by the equation
H(ejˆω)=D11(ˆω)e−jˆω5(6.28)
where, in this case, D11(ˆω)is the Dirichlet form deﬁned by (6.27) with L=11, that is,
D11(ˆω)=sin(11ˆω/2)
sin(ˆω/2)(6.29)
As (6.28) makes clear, the frequency-response function, H(ejˆω), can be expressed as the
product of the real amplitude function D11(ˆω)and the complex exponential term e−j5ˆω.
The latter has a magnitude of 1 and a phase angle −5ˆω. Figure 6-7(a) shows a plot of
theamplitude function, D11(ˆω); the phase function −5ˆωis shown in Fig. 6-7(b). We
use the terminology amplitude rather than magnitude, because D11(ˆω)can be negative.
We can make the plot of the magnitude |H(ejˆω)|by taking the absolute value of D11(ˆω).
5We cannot use the terminology “Dirichlet function” because it has a different well-deﬁned meaning in
mathematics. In Fourier analysis, DL(ˆω)is called the Dirichlet kernel.
236 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
(a)
(b)O!O!
Linear PhaseD11.O!/
22
22 11 11
0011
Figure 6-7 (a)Amplitude and (b) phase functions
for frequency response of 11-point running-sum
ﬁlter. The amplitude is aDirichlet form, b u ti ti sn o t
the magnitude since it has negative values.
Figure 6-7 shows only one period, −π< ˆω≤π, but the frequency response is, of course,
periodic with period 2 π, so the plots in Fig. 6-7 would simply repeat with that period.
In the case of the 11-point running sum, the phase factor is easy to plot, since it is a
straight line with slope of −5. The amplitude factor is somewhat more involved, but the
following properties of the function D11(ˆω)will aid in plotting:
(a)D11(ˆω)is an even function of ˆωthat is periodic with period62π.
(b)D11(ˆω)has a maximum value of 11 at ˆω=0. In general, the max value is L.
(c)D11(ˆω)has zeros at nonzero integer multiples of 2 π/11. (In general, the zeros of
DL(ˆω)are at nonzero multiples of 2 π/L.)
(d)D11(ˆω)decays as ˆωincreases; the local extrema between the zeros (called
sidelobes ) decrease when going from ˆω=0t oˆω=±π.
To show evenness, note that D11(ˆω)is the ratio of two sine functions. The ratio of
two odd functions (i.e., sines) is an even function, so D11(−ˆω)=D11(ˆω). Since D11(ˆω)
is even and periodic with period 2 π, we need only to consider its values in the interval
0≤ˆω≤π. All others can be inferred from symmetry and periodicity.
The behavior for ˆω=0 is of particular interest because, at this frequency, D11(ˆω)
appears to be indeterminate, because the numerator and denominator are zero and,
D11(0)=0
0
By L’Hˆ opital’s rule, however, it is easily shown that lim
ˆω→0D11(ˆω)=11.
6The Dirichlet form DL(ˆω)has a period of 4 πwhenLis even.
6-7 RUNNING-SUM FILTERING 237
The numerator is sin (11ˆω/2), which oscillates between +1 and −1 and is zero
whenever 11 ˆω/2=πk, where kis an integer; solving for ˆω,D11(ˆω)is zero at frequencies
ˆωk=2πk/11 where kis a nonzero integer. The ﬁrst zeros at ±2π/11 deﬁne the width
of the mainlobe.
The denominator of D11(ˆω)is sin(ˆω/2), which is zero at ˆω=0 and increases
monotonically to a maximum of one at ˆω=π. Therefore, D11(ˆω)is large around ˆω=0,
where the denominator is small, and it oscillates with decreasing amplitude as ˆωincreases
toπ.
Together, the amplitude and phase plots of Fig. 6-7 completely deﬁne the frequency
response of the 11-point running-sum ﬁlter. Normally, however, the frequency response
is represented in polar form
H(ejˆω)=|H(ejˆω)|ej∠H(ejˆω)
This would require plotting |H(ejˆω)|and∠H(ejˆω)as functions of ˆω. It is easy to see from
(6.28) that |H(ejˆω)|=|D11(ˆω)|. Figure 6-8(a) shows a plot of |H(ejˆω)|=|D11(ˆω)|for
the 11-point running-sum ﬁlter, and we see that the negative sidelobes have been ﬂippedto be positive. On the other hand, the phase response, ∠H(e
jˆω), in Fig. 6-8(b) is more
complicated to plot than the linear function shown in Fig. 6-7(b). There are two reasonsfor this:
(a) The algebraic sign of D
11(ˆω)must be represented in the phase function, since
|H(ˆω)|=|D11(ˆω)|discards the sign of D11(ˆω).
(b) The plot of the phase function is usually a plot of the principal value between −π
and+π.
The sign of D11(ˆω)can be incorporated into the phase by noting that D11(ˆω)=
|D11(ˆω)|e±jπwhenever D11(ˆω) < 0. The principal value of the angle of a complex
number is deﬁned to be the angle between −πand+πradians. Using the result
ej(θ±2πk)=ejθe±j2πk=ejθ
where kis any integer, we see that we can add or subtract integer multiples of 2 πfrom
the angle of a complex number without changing the value of the complex number. Infact, we can always ﬁnd a multiple of 2 π, which, when added to or subtracted from θ,
produces a result in the range −π<θ≤+ π.
This is called reducing θmodulo 2π. The principal value is generally what is
computed when an inverse-tangent function is evaluated on a scientiﬁc calculator, inMATLAB, or in other computer languages. In Fig. 6-7(b), we were able to plot anglevalues outside the principal value range simply because we had an equation for thephase angle.
238 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
(a)
(b)O!O!
†H.ejO!/ˇˇH.ejO!/ˇˇ
2
2 22 11 11
0011
Figure 6-8 (a) Magnitude and (b) phase functions
for frequency response of the 11-point running-sum
ﬁlter. Magnitude is equal to the absolute value of theamplitude in Fig. 6-7(a). Phase has jumps of π
whenever the magnitude is zero.
A plot like Figure 6-8 could be produced using the following MATLAB code:
omega = -pi:(pi/500):pi;bb = ones(1,11)/11;HH = freqz(bb,1,omega);subplot(2,1,1), plot(omega,abs(HH))subplot(2,1,2), plot(omega,angle(HH))
The MATLAB function angle uses the 4-quadrant arctangent function to return the
principal value of the angle determined by the real and imaginary parts of the elements
of the vector HH.
In Fig. 6-8, the phase curve is seen to have discontinuities that occur at the zeros of
D11(ˆω). These discontinuities arise from the multiples of πradians added to the phase due
to the negative sign of D11(ˆω)in the intervals 2 π/11<|ˆω|<4π/11, 6π/ 11<|ˆω|<
8π/11, and 10 π/11<|ˆω|<π, as well as multiples of 2 πthat are added implicitly in the
computation of the principal value. The equation for the phase curve plotted in Fig. 6-8 isdominated by the linear term (−5ˆω), but has the following special cases for frequencies
0≤ˆω≤π:
∠H(e
jˆω)=⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩−5ˆω 0≤ˆω<2π/11
−5ˆω+π 2π/11<ˆω<4π/11
−5ˆω+2π 4π/11<ˆω<6π/11
−5ˆω+π+2π 6π/11<ˆω<8π/11
−5ˆω+4π 8π/11<ˆω<10π/11
−5ˆω+π+4π 10π/11<ˆω≤π
The values for negative frequency, −π<ˆω< 0, can be ﬁlled in using the fact that the
phase is an odd function (i.e., ∠H(e
−jˆω)=−∠H(ejˆω)).
6-7 RUNNING-SUM FILTERING 239
EXERCISE 6.5 Test yourself to see whether you understand the principal value of ∠H(ejˆω)by
plotting (the principal value of) the phase of H(ejˆω)=e−j4ˆωfor−π< ˆω≤π.
6-7.2 Cascade of Magnitude and Phase
It can be seen from (6.25) that H(ejˆω)is the product of two functions, H(ejˆω)=
H2(ejˆω)H1(ejˆω), where
H1(ejˆω)=e−jˆω(L−1)/2(6.30)
and
H2(ejˆω)=DL(ˆω)=sin(ˆωL/2)
sin(ˆω/2)(6.31)
which is the Dirichlet form deﬁned earlier. The component H1(ejˆω)contributes only to
the phase of H(ejˆω), and this phase contribution is a linear function of ˆω. Earlier, we
saw that a linear phase such as ∠H 1(ejˆω)=−ˆω(L−1)/2 corresponds to a time delay
of(L−1)/2 samples. For L=11 the linear-phase slope of −(L−1)/2=−5 is clearly
in evidence in Fig. 6-7(b). The frequency response of the second system H2(ejˆω)is real.
It contributes to the magnitude of H(ejˆω), and when it is negative, it also contributes ±π
to the phase of H(ejˆω)causing the discontinuities at multiples of 2 π/11 in Fig. 6-8(b).
The product representation suggests the block diagram of Fig. 6-9, which shows
that the running sum can be viewed as a cascade combination of a delay followed by
a “lowpass ﬁlter” that accentuates low frequencies relative to high frequencies. Thisdecomposition is useful for thinking about how the system affects the input. On the otherhand, an implementation that conforms to the block diagram of Fig. 6-9 consists of acausal delay system followed by a noncausal ﬁlter H
2(ejˆω)=DL(ˆω). Strictly speaking,
we have not treated the implementation of noncausal ﬁlters in this chapter. Therefore,the overall causal moving average system would still be implemented by the difference
equation (6.22) on p. 234.
Finally, there are issues with the implementation of the causal delay system in Fig. 6-9
as well. When (L−1)/2 is a integer, w[n]=x [n−(L−1)/2]is a delay of the input
samples. The case when (L−1)/2 is not an integer requires special interpretation, which
will be provided in Section 6-8.2.
H1.ejO!/DejO!.L 1/=2H2.ejO!/Dsin.O!L=2/
sin.O!=2/
Delay =1
2.L1/ DirichletwŒ xŒ yŒFigure 6-9 Representation of L-point running sum
as the cascade of a delay and a real frequency
response.
240 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
Running L-pt. Sum
G1.ejO!/Multiply by 1=L
G2.ejO!/wŒ xŒ yŒFigure 6-10 Representation of L-point
running-average ﬁlter as the cascade of a running
sum and a multiplier.
6-7.3 Frequency Response of Running Averager
The running sum and running-average ﬁlters are nearly the same because the running
averager involves adding up Lconsecutive signal samples and dividing by L.
y[n]=1
L(x[n]+x [n−1]+···+ x[n−L+1])/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
Running Sum(6.32)
In hardware the divide-by-L operation would be done with a multiplier, so the running
averager can be expressed as the cascade of two LTI systems as shown in Fig. 6-10.
From this cascade representation, it is easy to write the frequency response of the L-pt.
averager as
G2(ejˆω)G1(ejˆω)=1
LDL(ˆω)e−jˆω(L−1)/2(6.33)
6-7.4 Experiment: Smoothing an Image
As a simple experiment to show the ﬁltering effect of the running-average system,
consider the image in Fig. 6-11. The image is a two-dimensional discrete signal thatcan be represented as a two-dimensional array of samples x
i[m, n]. In an image, each
sample value is called a pixel, which is shorthand for picture element. A single horizontal
scan line (at m=40) was extracted from the image yielding the one-dimensional signal
x[n]=x i[40,n], plotted in Fig. 6-12. The position in the image from which x[n]was
extracted is shown by the orange line in the image. The values in the image signal are all
positive integers in the range 0 ≤xi[m, n]≤255. These numbers can be represented by
8-bit binary numbers.7If you compare the one-dimensional plot to the gray levels in the
region around the line, you can see that dark regions in the image have large values (near255), and bright regions have low values (near zero). This is actually a “negative” image,but that is appropriate since it is a scan of black ink written on a white background.
An 11-point running averager was applied to x[n], and the input and output were
plotted on the same graph (Fig. 6-13(a)). Notice that the output y[n]appears to be a
smoother version of x[n]with a slight shift to the right. The smoothness is a result of
the lowpass Dirichlet ﬁlter that attenuates the higher frequencies in the signal, whichcorrespond to the edges of the handwritten characters in the image. The shift is the5-sample delay that we expect for an 11-point running averager. To verify the effect ofthis delay, Fig. 6-13(b) shows a plot of w[n]=x [n−5]andy[n]. Now we see that the
output appears to be aligned perfectly with the input.
7We often say that the total dynamic range of such image values is 8 bits.
6-7 RUNNING-SUM FILTERING 241
  0 50 100 150 200 250 300 350  0
20
40
60
80
100
120
140Original Black & White Homework Image
Column Index .n/Row Index .m/
Figure 6-11 “Homework” image
with row 40 indicated by the orange
line.
0  50 100 150 200 250 300 3500128256Row #40 of the Homework Image
Column Index .n/Figure 6-12 Signal values x[n]along row 40
in the “homework” image.
The 11-point running averager is applied over all the rows of the image to get a visual
assessment of the lowpass ﬁltering operation.8The result is shown in Fig. 6-14, where it
is obvious that the lowpass ﬁlter has blurred the image only in the horizontal dimension.
There is no blurring in the vertical dimension as can be veriﬁed by examining the equals
signs in Fig. 6-14. As we have seen, the ﬁlter attenuates the high-frequency components
of the image. Thus, we can conclude that sharp edges in an image must be associatedwith high frequencies.
As another example of the effect of ﬁltering, the “homework” image signal was
corrupted by adding a cosine signal plus a constant to each row of the image. Along onerow of the image the signal is now:
x
1[n]=x [n]+128 cos(2 πn/11)+128
The cosine is the corrupting interference signal, while the constant (DC value) of 128 is
needed to keep the image values positive. For line 40 of the image, this corrupted signalx
1[n]was ﬁltered with the 11-point running averager. The delayed input x1[n−5]and
the corresponding output are shown in Fig. 6-15. By comparing Figs. 6-13(b) and 6-15,it is clear that the output is the same
9forx[n]andx1[n]except for the offset of 128. The
8In MATLAB, the function filter2( ) does this two-dimensional ﬁltering without using for loops.
9A careful comparison reveals that there is a small difference over the transient region 0 ≤n≤9.
242 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
 0 50 100 150 200 250 300 3500128256Filtering with 11-Point Averager
(a)
 0 50 100 150 200 250 300 350012825611-Point Averager: 5-Sample Delay Equalization
Column Index .n/
(b)Figure 6-13 (a) Output y[n]of 11-point
running averager (solid orange line) and input
(thin gray line). (b) Output of 11-point running
averager (orange line) and input delayed by 5
samples (thin gray line).
  0 50 100 150 200 250 300 350  0
20
40
60
80
100
120
140Homework Image Blurred Along Rows with LPF
Column Index .n/Row Index .m/
Figure 6-14 Result of ﬁltering the rows of the
“homework” image with an 11-point runningaverager. Note that the blurring is only in thehorizontal dimension.
reason is clear: ˆω=2π/11 is one of the frequencies that is completely removed by the
averaging ﬁlter, because H(ej2π/11)=0. Since the system is LTI and obeys superposition,
the output due to x1[n]must be the same as the output due to x[n]alone. If the cosine is
added to each row of an image, it appears visible as vertical stripes (Fig. 6-16(a)). When
each row is processed with an 11-point running-average ﬁlter, the cosine is removed, butthe image will still be blurred horizontally (Fig. 6-16(b)).
6-7 RUNNING-SUM FILTERING 243
 0 50 100 150 200 250 300 350012825638451211-pt Averaging Filter: CosineW aveAdded to Input
Column Index.n/Figure 6-15 Output of an 11-point running averager
with 128 cos(2 πn/11)added to the image scan line.
The solid orange line is the output; the thin gray line
is the input delayed by ﬁve samples. Note that the
vertical scale is twice that of Fig. 6-13(b).
  0 50 100 150 200 250 300 350  0
20
40
60
80
100
120
140
 0 50 100 150 200 250 300 340  0
20
40
60
80
100
120
140(a) Homework plus Cosine
(b) Remove Cosine Stripe with Averaging Filter
Column Index .n/Column Index .n/Row Index .m/ Row Index .m/
Figure 6-16 (a) “Homework plus cosine” input
image. The periodic nature of the cosine across eachrow causes a vertical striping. (b) After ﬁltering therows of the “homework plus cosine” image with an11-point running averager, the processed image isblurred, but has no traces of the cosine stripes. Theﬁlter transient on the left edge was removed ,reducing the horizontal width by ten pixels. (Bothinput and output were rescaled for 8-bit imagedisplay.)
244 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
6-8 Filtering Sampled Continuous-Time Signals
Discrete-time ﬁlters can be used to ﬁlter bandlimited continuous-time signals that have
been sampled. In this section, we study the relationship between the frequency responseof the discrete-time ﬁlter and the effective frequency response applied to the continuous-
time signal. When the input to a discrete-time system is a sequence derived by samplinga continuous-time signal, we can use our knowledge of sampling and reconstruction torelate the frequency response of the discrete-time ﬁlter to the effect of the ﬁlter on thespectrum of the original continuous-time signal.
Consider the system depicted in Fig. 6-17, and assume that the input is the complex
sinusoid
x(t)=Xe
jωt
withX=Aejϕ. After sampling, the input sequence to the discrete-time ﬁlter is
x[n]=x(nT s)=XejωnT s=Xejˆωn
The relationship between the discrete-time frequency ˆωand continuous-time frequencies
ωandfis
ˆω=ωTs=2πf
fs(6.34)
If the frequency of the continuous-time complex exponential satisﬁes the condition ofthe sampling theorem (i.e., |ω|<π / T
s), then there is no aliasing, and the normalized
discrete-time frequency in (6.34) satisﬁes |ˆω|<π.
The frequency response of the discrete-time system gives us a quick way to calculate
the output y[n]in Fig 6-17.
y[n]=H(ejˆω)Xejˆωn
If we now make the substitution ˆω=ωTs, then we can write y[n]in terms of the analog
frequency ωas
y[n]=H(ejωTs)XejωTsn
Finally, since no aliasing occurred in the original sampling, the ideal D-to-C converter
reconstructs the original complex exponential, but with a new complex amplitude, giving
y(t)=H(ejωTs)Xejωt(6.35)
This formula for y(t)is correct only for frequencies such that −π/T s<ω<π/T s, because
the ideal D-to-C converter reconstructs all digital frequency components in the band
Ideal
C-to-DIdeal
D-to-CLTI System
H.ejO!/;x.t/ xŒ y.t/ yŒ
fsD1
TsfsD1
TsFigure 6-17 System for doing discrete-time
ﬁltering of bandlimited continuous-time signals.
6-8 FILTERING SAMPLED CONTINUOUS-TIME SIGNALS 245
|ˆω|<π as analog frequencies in the band |ω|<π / T s. As long as there is no aliasing,
the frequency band of the input signal x(t) matches the frequency band of the output
y(t). Thus, the overall system of Fig. 6-17 behaves as though it is an LTI continuous-time
system whose frequency response is H(ej(ωT s)), but only for |ω|<π / T s.
When the system of Fig. 6-17 is used to implement LTI ﬁltering operations on
bandlimited continuous-time signals, there are two factors that control the effective
frequency reponse. First, we can change the discrete-time system H(ejˆω)to vary the
overall effective frequency response, for a ﬁxed sampling period.Alternatively, for a ﬁxed
discrete-time system H(ejˆω), we can change the sampling period Ts(avoiding aliasing of
the input) and obtain a new effective frequency response. Usually we select a sampling rateclose to the Nyquist rate to avoid aliasing, and then design a discrete-time LTI ﬁlter whoseeffective frequency response H(e
jωTs)has the desired frequency-selective properties.
6-8.1 Example: A Lowpass Averager for Continuous-Time Signals
As an example, we use the 11-point running averager
y[n]=1
1110/summationdisplay
k=0x[n−k]
as the ﬁlter in Fig. 6-17. The frequency response of this discrete-time system is
H(ejˆω)=sin(ˆω11/2)
11 sin(ˆω/2)e−jˆω5
The magnitude of this frequency response is shown in Fig. 6-18(a).
1
(a)
250 500 10001
(b)Analog Frequency .f /in HzfDiscrete-Time Frequency .O!/O!ˇˇH.ejO!/ˇˇ
ˇˇH.e j2 Ts/ˇˇ2 2
00
1000 500Figure 6-18 (a) Frequency response
(magnitude) of an 11-point running averager
and (b) effective analog-frequency response,when the system in Fig. 6-17 is used to ﬁlterbandlimited analog signals with sampling ratef
s=1000 Hz. The black dots at f=25 Hz
andf=250 Hz indicate two values of the
frequency response needed for the input x(t) in
the example.
246 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
When the 11-point running averager is used as the discrete-time system in Fig. 6-17
with sampling frequency fs=1000, we want to answer two questions: What is the
effective analog-frequency response, and how would the signal
x(t)=cos(2π(25)t)+sin(2π(250)t)
be processed by the system?
The frequency-response question is easy. The effective continuous-time frequency
response is
H(ejωTs)=H(ejω/1000)=H(ej2πf/1000)
for|f|<500 Hz where fis in hertz. A plot of the effective continuous-time frequency
response versus fis shown in Fig. 6-18(b). Note that the frequency response of the overall
system stops abruptly at |f|=f s/2=500 Hz, since the ideal D-to-C converter does not
reconstruct frequencies above fs/2.
The second question is also easy to answer if we track the two frequencies of the
input signal through the three systems of Fig. 6-17 by using the effective continuous-
time frequency response (6.35). The input x(t) contains two sinusoids with frequencies
atω=2π(25)and 2π(250). Since fs=1000>2(250)>2(25), there is no aliasing,10
so the same frequency components appear in the output signal y(t). The magnitude and
phase changes are found by evaluating the effective frequency response at 25 and 250 Hz.
H(ej2π(25)/1000)=sin(π(25)(11)/1000 )
11 sin(π(25)/1000 )e−j2π(25)(5)/1000=0.8811e−jπ/ 4
H(ej2π(250)/1000)=sin(π(250 )(11)/1000 )
11 sin(π(250 )/1000 )e−j2π(250)(5)/1000=0.0909e−jπ/ 2
These values are marked on the plot in Fig. 6-18(b). Thus the ﬁnal output is
y(t)=0.8811 cos(2π(25)t−π/4)+0.0909 sin(2π(250)t−π/2)
The lowpass nature of the running-average ﬁlter has greatly attenuated the 250-Hz
component, while the 25-Hz component suffered only slight attenuation because it liesin the passband of the ﬁlter near 0 Hz.
EXERCISE 6.6 Assuming the same input signal and the same discrete-time system, work the example
of this section again, but use a sampling rate of fs=750 Hz.
6-8.2 Interpretation of Delay
We have seen that a frequency response of the form H(ejˆω)=e−jˆωn0implies a time
delay of n0samples. For n0, an integer, the interpretation of this is straightforward. If the
10When there is aliasing, this sort of problem is less straightforward because the output signal y(t) has
different frequency components from the input.
6-8 FILTERING SAMPLED CONTINUOUS-TIME SIGNALS 247
input to the system is x[n], the corresponding output is y[n]=x [n−n0]. However, if n0
is not an integer, the interpretation is less obvious. An example of where this can occur
is theL-point running-average system whose frequency response is
H(ejˆω)=1
LDL(ˆω)e−jˆω(L−1)/2
where DL(ˆω)is the Dirichlet form deﬁned in (6.27). The exponential term tells us that
theL-point running averager includes a delay of1
2(L−1)samples. If Lis an odd integer,
this delay causes the output to be shifted1
2(L−1)samples with respect to the input.
However, if Lis an even integer, then1
2(L−1)is not an integer. The analyis of this
section provides an interpretation of this non-integer delay factor.
Suppose that the input to the ideal C-to-D converter is
x(t)=Xejωt
where ω<π / T sso that there is no aliasing. Then the sampled input to the L-point
running averager is
x[n]=XejωnT s=Xejˆωn
where ˆω=ωTs, and the output is
y[n]=H(ejˆω)Xejˆωn=1
LDL(ˆω)e−jˆω(L−1)/2Xejˆωn
Finally, since ω<π / T s, the ideal D-to-C converter reconstructs y(t) as a complex
exponential signal which can be written as
y(t)=1
LDL(ˆω)Xe−jˆω(L−1)/2ejωt
=1
LDL(ωTs)Xe−jωT s(L−1)/2ejωt
=1
LDL(ωTs)Xejω(t−Ts(L−1)/2 )
The term (t−Ts(L−1)/2)in the exponent indicates that the complex exponential has
a time shift of1
2(L−1)Tsseconds with respect to continuous-time signals sampled with
sampling period Ts, and this is true regardless of whether or not1
2(L−1)is an integer.
Note that the exact1
2(L−1)Tssecond delay is a result of using an ideal D-to-C converter
that performs perfect bandlimited reconstruction.
EXAMPLE 6-11 Time Delay of FIR Filter
To illustrate the effect of noninteger delay with the running-average ﬁlter, consider the
cosine signal x[n]=cos(0 .2πn), which could have resulted in Fig 6-17 from sampling
the signal x(t)=cos(200 πt)with sampling rate fs=1000 Hz. Figure 6-19(a) shows
x(t) andx[n].I fx [n]is the input to a 5-point running-average ﬁlter, the steady-state part
of the output is
y5[n]=sin(0.2π(5/2))
5 sin(0.2π/2)cos(0.2πn−0.2π(2))=0.6472 cos(0 .2π(n−2))
248 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
For this ﬁlter output, the output of the ideal D-to-C converter in Fig. 6-17(b) would be
y5(t)=y5[n]/vextendsingle/vextendsingle
n=1000 t=0.6472 cos (200π(t−0.002))
The delay is 2 samples. On the other hand, if the same signal x[n]is the input to a 4-point
running-average system, the steady-state part of the output (Fig. 6-19(c)) is
y4[n]=sin(0.2π(4/2))
4 sin(0.2π/2)cos(0.2πn−0.2π(3/2))=0.7694 cos(0 .2π(n−3/2))
Now the delay is3/2samples, so we cannot write y4[n]as an integer shift with respect
to the input sequence. In this case, the “3/2samples” delay introduced by the ﬁlter can
be interpreted in terms of the corresponding output of the ideal D-to-C converter in
Fig. 6-17(c), which in this case would be
y4(t)=y4[n]/vextendsingle/vextendsingle
n=1000 t=0.7694 cos (200π(t−0.0015) )
Figure 6-19 shows the input and the corresponding outputs y5[n]andy5(t)andy4[n]and
y4(t). In all cases, the solid gray curve is the continuous-time cosine signal that would
be reconstructed by the ideal D-to-C converter for the given discrete-time signal.
0 5 10 15 20 2501
(a)
0 5 10 15 20 2501
(b)
0 5 10 15 20 2501
(c)dD2
dD3
2
111
555
Time Index .n/xŒ
x.t/
y5Œn
y5.t /
y4Œn
y4.t /Figure 6-19 (a) Input signal sampled at
fs=1000 Hz, (b) output of 5-point running
averager, and (c) output of 4-point running
averager. The solid gray curve is thecorresponding continuous-time signal: (a) x(t),
(b)y
5(t), and (c) y4(t).
6-9 SUMMARY AND LINKS 249
The following speciﬁc points are illustrated by this example:
1. Both outputs are smaller than the input. This is because DL(0.2π) < 1 for both
cases.
2. The gray vertical lines in Fig. 6-19(b,c) show the peaks of the output cosine signals
that correspond to the peak of the input at n=0. Note that the delay is (5−1)/2=2
for the 5-point averager and (4−1)/2=1.5 for the 4-point running averager.
3. When the ideal D-to-C converter processes the fractional delay of 1.5, it has to
implement an interpolation of the cosine signal at points halfway between the
original samples.
6-9 Summary and Links
This chapter introduced the concept of the frequency response for the class of FIR ﬁlters.The frequency response applies to any LTI system, as we will see in upcoming chapters.The MATLAB GUI shown in Fig. 6-20 embodies the “sinusoid-in gives sinusoid-
out” concept which is the primary result of this chapter. It shows that one evaluationof the frequency response is sufﬁcient to predict how a sinusoid is processed by anLTI system. When the ﬁlter changes, the frequency response changes so sinusoidal
Figure 6-20 Screen shot of the dltidemo GUI which illustrates the sinusoid-in gives sinusoid-out concept.
The user can change the LTI system as well as the input sinusoidal frequency, amplitude, and phase.
250 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
frequency components are treated differently. The speciﬁc case shown in Fig. 6-20 is
from Example 6-11 when x[n]=cos(0 .2πn)is ﬁltered with a 4-point running averager.
The frequency response is shown in the middle with dots indicating the values of H(ejˆω)
needed to determine the new amplitude and phase of the output sinusoid. The outputsignal on the right is exactly the same as y
4[n]in Fig. 6-19(c).DEMO
DLTI: Sinusoid-in gives
Sinusoid-out
EXERCISE 6.7 Use thedltidemo GUI in MATLAB to ﬁnd a case where the input sinusoid is nulled
outby the 4-point running-average ﬁlter. In other words, determine a frequency ˆω1
for the input x[n]=cos( ˆω1n)such that the output signal is y[n]=0.
This chapter extends the discussion of Chapter 5, which introduced the basics of FIR
ﬁltering. The labs, in particular, require the student to be familiar with both chapters. The
lab entitled Bandpass and Nulling Filters is an experiment with the frequency response
of two classes of useful FIR ﬁlters.LAB
Bandpass and Nullling
Filters Three other labs involving FIR ﬁltering and the frequency response require the
implementation of complete processing systems. These are: (1) a system to decode Touch-
Tone signals, (2) an octave-band system that determines automatically which note isplayed on a piano, and (3) a ﬁlter bank system that simulates a cochlear implant deviceused to restore intelligible hearing for a patient with complete hearing loss. Each of theseimplementations involves many ﬁlters with a variety of frequency responses. Thus, theseprojects become easier to attack once the ideas of Chapters 7–10 are studied, but theprojects rely primarily on the concept of the frequency response.
LAB
Encoding and Decoding
Touch-Tones
LAB
Octave Band FilteringThe Companion Website also contains the following demonstrations of lowpass and
highpass ﬁltering: ﬁltering photographic images to show that lowpass ﬁltering is blurring,and that highpass ﬁltering enhances edges in images, cascade processing of images toshow that a highpass ﬁlter can undo the blurring effects of a lowpass ﬁlter, and ﬁlteringof sound signals to illustrate bass and treble emphasis.
DEMO
Cascading FIR Filters
NOTE
Problems with Solutions6-10 Problems
The problems in this section address the major concepts of this chapter. On the Companion
Website there are many related homework problems which can be used for review and
practice. Most of them have detailed solutions.
P-6.1 Suppose the input signal to an FIR system is
x[n]=ej(0.2πn−0.7π)
If we deﬁne a new signal y[n]to be the ﬁrst difference y[n]=x [n]−x [n−1],i ti s
possible to express y[n]in the form
y[n]=Aej(ˆω0n+ϕ)
Determine the numerical values of A,ϕ, andˆω0.
6-10 PROBLEMS 251
P-6.2 Suppose that the input to a discrete-time system is the complex signal
x[n]=ej0.2πn+ej0.5πn
(a) Determine the output when the system is a 2-point running sum ﬁlter
(b) Explain why the output can be written as the sum of two complex exponential
signals
y[n]=A 1ejϕ1ejˆω1n+A2ejϕ2ejˆω2n
Determine the values of A1,ϕ1,A2,ϕ2by using the frequency response of the
system.
(c) Determine the output when the system is a 3-point running sum ﬁlter.
P-6.3 Suppose that a discrete-time system is described by the input–output relationship
y[n]=(x [n])2
(a) Determine the output when the input is the sum of two complex exponential signals
x[n]=ej0.2πn+ej0.6πn
(b) Explain why the output cannot be written as the sum of two complex exponential
signals.
y[n] /negationslash= A1ejϕ1ejˆω1n+A2e(jϕ2)ejˆω2n
(c) Explain why this example is sufﬁcient to conclude that this is not an LTI
system.
P-6.4 An LTI system is described by the difference equation
y[n]=x [n]−√
2x[n−1]+x [n−2]
(a) Determine an equation for the frequency response H(ejˆω)and express it in the
form
H(ejˆω)=R(ejˆω)e−jˆωn0
where R(ejˆω)is a real function and n0is an integer.
(b)H(ejˆω)is a periodic function of ˆω; determine the period.
(c) Plot the magnitude of H(ejˆω)as a function of ˆωforπ<ˆω< 3π. Do this by hand,
and then check with the MATLAB function freqz .
(d) Find all frequencies ˆωin the interval −π< ˆω≤π, for which the output response
to the input e−jˆωnis zero.
252 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
(e) When the input to the system is x[n]=cos(πn/3), determine the output signal
and express it in the form y[n]=A cos(ˆω0n+ϕ).
P-6.5 An LTI ﬁlter is described by the difference equation
y[n]=2 x[n]+x [n−1]+3x [n−2]
(a) Obtain an expression for the frequency response of this system.
(b) Determine the output when the input is x[n]=1 +4 cos(0 .6πn+0.2π)for
−∞<n<∞.
(c) Determine the step response, which is the output when the input is the unit-step
sequence, u[n].
(d) As n→∞ the step response is a constant. Explain why that constant is equal to
the DC value of the frequency response.
P-6.6 A linear time-invariant ﬁlter is described by the difference equation
y[n]=x [n]−x [n−2]
(a) Obtain an expression for the frequency response of this system.
(b) Sketch the frequency response (magnitude and phase) as a function of frequency.
(c) Determine the output if the input signal is x[n]=4 +cos(0.25πn −π/4).
(d) The signal x1[n]= (4+cos(0.25πn −π/4))u[n] is zero for n<0, so it “starts”
atn=0. If the input signal is x1[n], for which values of nwill the corresponding
output be equal to the output obtained in (c)?
P-6.7 For each of the following frequency responses determine the corresponding
impulse response
(a)H(ejˆω)=4−e−j3ˆω
(b)H(ejˆω)=6e−j4ˆωcos(3ˆω)
(c)H(ejˆω)=e−j3.5ˆωsin(4ˆω)
sin(ˆω/2)
P-6.8 The frequency response of an LTI ﬁlter is given by the formula
H(ejˆω)=(1−e−jˆω)(1−ej2π/3e−jˆω)(1−e−j2π/3e−jˆω)
6-10 PROBLEMS 253
(a) Write the difference equation that gives the relation between the input x[n]and the
output y[n].
(b) Determine the step response of this ﬁlter (i.e., the output when the input is x[n]=
u[n]).
(c) If the input is of the form x[n]=Aejϕejˆωn, for what values of −π< ˆω≤πis
y[n]=0 for all n?
P-6.9 The frequency response of an LTI ﬁlter is given by the formula
H(ejˆω)=(1−e−j3ˆω)(2−4e−jˆω+3e−j3ˆω)
(a) Write the difference equation and determine the impulse response of this LTI ﬁlter.
(b) If the input is of the form x[n]=Aejϕejˆωn, for what values of −π< ˆω≤πis
y[n]=0 for all n?
(c) If y[n]=0 .3, what was the input x[n]?
P-6.10 Suppose that Sis an LTI system whose exact form is unknown. It has been tested
by observing the output signals corresponding to several different test inputs. Suppose
that the following input–output pairs were the result of the tests:
Input: x[n] Output: y[n]
δ[n] δ[n]−δ [n−3]
cos(2πn/3) 0
cos(πn/3 +π/2)2 cos(πn/3 +π/2)
(a) Make a plot of the signal x[n]=3δ [n]−2 δ[n−2]+δ[n−3].
(b) When the input is x[n]=3δ [n]−2 δ[n−2]+δ[n−3], determine the output of
the system and make a plot of it.
(c) Determine the output when the input is x[n]=cos(π(n −3)/3).
(d) Is the following statement true or false? Explain.
H(ej(π/ 2))=0
P-6.11 TheDirichlet form is deﬁned in (6.27) as
DL(ˆω)=sin(Lˆω/2)
sin(ˆω)
For the case L=6:
254 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
(a) Make a plot of D6(ˆω)over the range −3π< ˆω≤3π.
(b) Determine the period and maximum magnitude of D6(ˆω).
(c) Determine the period of H(ejˆω)=D6(ˆω)e−j2.5ˆω.
P-6.12 An LTI ﬁlter is described by the difference equation
y[n]=x [n]−3x [n−1]+3x [n−2]−x[n−3]
(a) Obtain an expression for the frequency response of this system, and, using the fact
that(1−a)3=1−3a+3a2−a3, show that H(ejˆω)can be expressed in the form
H(ejˆω)=8 sin3(ˆω/2)ej(−π/ 2−3ˆω/2)
(b) Sketch the frequency response magnitude as a function of ˆω.
(c) What is the output if the input is x[n]=5 +6 cos(0 .5π(n −2))?
(d) Determine the impulse response of this LTI ﬁlter.
(e) Use superposition to ﬁnd the output when x[n]=5 +6 cos(0 .5πn) +9δ[n−3].
P-6.13 Suppose that three systems are connected in cascade, where the output of S1is
the input to S2, and the output of S2is the input to S3. The three systems are speciﬁed as
follows:
S1:y1[n]=x 1[n]+x 1[n−1]
S2:y2[n]=x 2[n]−x 2[n−2]
S3:y3[n]=x 3[n−2]−x 3[n−3]
where the output of Siisyi[n]and its input is xi[n].
(a) Determine the frequency responses of the three individual systems.
(b) Determine the overall frequency response of the cascade system as a simple
formula.
(c) Determine the difference equation of the equivalent system that is a single operation
from the input x[n](into S1) to the overall output y[n], which is the output of S3.
Thus, x[n]isx1[n]andy[n]isy3[n].
P-6.14 An LTI ﬁlter is described by the difference equation
y[n]=1
4/parenleftBig
x[n]+x [n−1]+x [n−2]+x[n−3]/parenrightBig
(a) What is the impulse response h[n] of this system?
6-10 PROBLEMS 255
(b) Obtain an expression for the frequency response of this system.
(c) Suppose that the input is
x[n]=5 +4 cos(0 .2πn)+3 cos(0 .5πn)
for−∞<n<∞. Obtain an expression for the output in the form
y[n]=A +Bcos(ˆω0n+φ0).
(d) Suppose that the input is
x1[n]=/bracketleftbig
5+4 cos(0 .2πn)+3 cos(0 .5πn)/bracketrightbig
u[n]
where u[n] is the unit-step sequence. For what values of nwill the output y1[n]be
equal to the output y[n]in (d)?
P-6.15 A system for ﬁltering continuous-time signals is shown in Fig. P-6.15.
Ideal
C-to-DLTI
SystemIdeal
D-to-Cy[n]
H(ejωˆ), h[n]x(t) x[n] y(t)
fs=1
Tsfs=1
Ts Figure P-6.15
The input to the C-to-D converter in this system is
x(t)=10+8 cos(200 πt)+6 cos(500 πt+π/4)
for−∞<t<∞. The impulse response of the LTI system is
h[n]=1
43/summationdisplay
k=0δ[n−k]
Iffs=1000 samples/sec, determine an expression for y(t), the output of the D-to-C
converter.
Hint: The results of Problem P-6.14 can be applied here.
P-6.16 The input to the C-to-D converter in Fig. P-6.15 is
x(t)=10+20 cos(ω 0t+π/3) −∞<t<∞
(a) Suppose that the impulse response of the LTI system is h[n]=δ [n].I f
ω0=2π(500), for what values of fs=1/Tsis it true that y(t)=x(t)?
256 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
(b) Now suppose that the impulse response of the LTI system is changed to h[n]=
δ[n−10]. Determine the sampling rate fs=1/Tsand a range of values for ω0so
that the output of the overall system is
y(t)=x(t−0.001)=10+20 cos(ω 0(t−0.001)+π/3)
for−∞<t<∞.
(c) Suppose that the LTI system is a 5-point moving averager whose frequency response
is
H(ejˆω)=sin(5ˆω/2)
5 sin(ˆω/2)e−jˆω2
If the sampling rate is fs=2000 samples/sec, determine all values of ω0such that
the output is equal to a constant (i.e., y(t)=Afor−∞<t<∞). Also, determine
the constant Ain this case.
P-6.17 The diagram in Fig. P-6.17 depicts a cascade connection of two linear time-
invariant systems, where the ﬁrst system is a 3-point moving averager and the second
system is a ﬁrst difference.
LTI 1 LTI 2 x[n] y[n] v[n]
H1(ejωˆ), h1[n] H2(ejωˆ), h2[n]
Figure P-6.17
(a) If the input is of the form x[n]=10 +x1[n], the output, y[n], of the overall system
will be of the form y[n]=y 1[n], where y1[n]is the output due only to x1[n].
Explain why this is true.
(b) Determine the frequency-response function of the overall cascade system.
(c) Sketch the frequency-response (magnitude and phase) functions of the individual
systems and the overall cascade system for −π< ˆω≤π.
(d) Obtain a single-difference equation that relates y[n]tox[n]for the overall cascade
system.
P-6.18 A linear time-invariant system is described by the difference equation
y[n]=− x[n]+2 x[n−2]−x[n−4]
(a) Find the impulse response h[n] and plot it.
6-10 PROBLEMS 257
(b) Determine an equation for the frequency response H(ejˆω)and express it in the
form
H(ejˆω)=R(ejˆω)e−jˆωn0
where R(ejˆω)is a real function and n0is an integer.
(c) Carefully sketch and label a plot of |H(ejˆω)|for−π< ˆω<π .
(d) Carefully sketch and label a plot of the principal value of ∠H(ejˆω)for
−π< ˆω≤π.
P-6.19 For the cascade conﬁguration in Fig. P-6.17, the two systems are deﬁned by
H1(ejˆω)=1+2e−jˆω+e−jˆω2and
h2[n]=δ [n]−δ [n−1]+δ [n−2]−δ[n−3]
(a) Determine the frequency response H(ejˆω)for the overall cascade system (i.e., from
inputx[n]to output y[n]). Simplify your answer as much as possible.
(b) Determine and plot the impulse response h[n] of the overall cascade system.
(c) Write down the difference equation that relates y[n]tox[n].
P-6.20 An LTI system whose frequency response has a ﬁrst-order term such as
H(ejˆω)=(1−ejˆω0e−jˆω)
completely nulls out the input signal of the form ejˆω0n. The concept of cascading systems
can be used to null out additional complex exponential signals.
(a) Design an FIR ﬁlter that nulls out the signal x[n]=3 +7 cos(0 .2πn−0.4π)by
determining the ﬁlter coefﬁcients of the difference equation for the nulling ﬁlter.
(b) Design the minimum-order FIR ﬁlter that nulls out the signal
x[n]=5/summationdisplay
k=0(k2+9)cos(0.2πkn)
by determining the ﬁlter coefﬁcients of the difference equation for the nulling ﬁlter.
P-6.21 The input to the C-to-D converter in Fig. P-6.15 is
x(t)=10 cos(120 πt)+20 cos(240 πt+π/3) −∞<t<∞
(a) If the sampling rate is fs=1000 Hz, determine the two normalized frequencies in
the sampled signal x[n]=x(n/f s).
258 CHAPTER 6 FREQUENCY RESPONSE OF FIR FILTERS
(b) Design the FIR ﬁlter H(ejˆω)so that the output y(t) is zero. In other words, ﬁnd
the ﬁlter coefﬁcients of the lowest possible order FIR system.
(c) Check your design by using MATLAB to plot the frequency response (magnitude)
versus ˆω, and also versus the analog frequency fin hertz where the frequencies
60 Hz and 120 Hz should be nulled out.
P-6.22 The frequency response of a ﬁrst-difference system is plotted in Fig. 6-3.
(a) Use these plots to ﬁnd the output of the system if the input is x[n]=
10+10 cos(0 .5πn) .
(b) Explain why the phase-response curve is discontinuous at frequencies around ˆω=
0 and at multiples of 2 π.
P-6.23 The frequency response of an LTI system is plotted in Fig. P-6.23
(a) Use these plots to ﬁnd the output of the system if the input is
x[n]=10 +10 cos(0 .2πn)+10 cos(0 .5πn)
(b) Explain why the phase-response curve is discontinuous at frequencies around ˆω=
2π(0.17) and also around ˆω=0.5π.
00.20.40.60.81Magnitude
0Phase
Frequency .O!/2
2
0Figure P-6.23
CHAPTER
7
Discrete-Time
Fourier Transform
In Chapter 3 and Appendix C, we showed that interesting continuous-time waveforms
x(t) can be synthesized by summing sinusoids, or complex exponential signals, having
different frequencies fkand complex amplitudes ak. We also introduced the concept
of the spectrum of a signal as the collection of information about the frequencies
and corresponding complex amplitudes {fk,ak}of the complex exponential signals,
and found it convenient to display the spectrum as a plot of spectrum lines versusfrequency, each labeled with amplitude and phase. This spectrum plot is a frequency-
domain representation that tells us at a glance “how much of each frequency is present
in the signal.”
In Chapter 4, we extended the spectrum concept from continuous-time signals x(t)
to discrete-time signals x[n]obtained by sampling x(t). In the discrete-time case, the
line spectrum is plotted as a function of normalized frequency ˆω. In Chapter 6, we
developed the frequency response H(e
jˆω)which is the frequency-domain representation
of an FIR ﬁlter. Since an FIR ﬁlter can also be characterized in the time domain by itsimpulse response signal h[n], it is not hard to imagine that the frequency response is the
frequency-domain representation,o rspectrum, of the sequence h[n].
259
260 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
In this chapter we show that the frequency response is identical to the result of applying
the more general concept of the discrete-time Fourier transform (DTFT) to the impulse
response of the LTI system. The DTFT is a frequency-domain representation for a widerange of both ﬁnite- and inﬁnite-length discrete-time signals x[n]. The DTFT is denoted
asX(e
jˆω), which shows that the frequency dependence always includes the complex
exponential function ejˆω. The operation of taking the Fourier transform of a signal will
become a common tool for analyzing signals and systems in the frequency domain.1
The application of the DTFT is usually called Fourier analysis, or spectrum analysis or
“going into the Fourier domain or frequency domain.” Thus, the words spectrum, Fourier
transform, and frequency-domain representation become equivalent, even though each
one retains its own distinct character.
7-1 DTFT: Fourier Transform for Discrete-Time Signals
The concept of frequency response discussed in Chapter 6 emerged from analysis
showing that if an input to an LTI discrete-time system is of the form x[n]=ejˆωn,
then the corresponding output has the form y[n]=H(ejˆω)ejˆωn, where H(ejˆω)is called
the frequency response of the LTI system. This fact, coupled with the principle ofsuperposition for LTI systems leads to the fundamental result that the frequency responsefunction H(e
jˆω)is sufﬁcient to determine the output due to any linear combination of
signals of the form ejˆωnor cos( ˆωn+θ). For discrete-time ﬁlters such as the causal
FIR ﬁlters discussed in Chapter 6, the frequency response function is obtained from thesummation formula
H(e
jˆω)=M/summationdisplay
n=0h[n]e−jˆωn=h[0]+h[1]e−jˆω+···+ h[M]e−jˆωM(7.1)
where h[n] is the impulse response. In a mathematical sense, the impulse response h[n]
istransformed into the frequency response by the operation of evaluating (7.1) for each
value of ˆωover the domain −π< ˆω≤π. The operation of transformation (adding up the
terms in (7.1) for each value ˆω) replaces a function of a discrete-time index n(a sequence)
by a periodic function of the continuous frequency variable ˆω. By this transformation,
the time-domain representation h[n] is replaced by the frequency-domain representation
H(ejˆω). For this concept to be complete and useful, we need to know that the result of the
transformation is unique, and we need the ability to go back from the frequency-domainrepresentation to the time-domain representation. That is, we need an inverse transform
that recovers the original h[n] fromH(e
jˆω). In Chapter 6, we showed that the sequence
can be reconstructed from a frequency response represented in terms of powers of e−jˆω
as in (7.1) by simply picking off the coefﬁcients of the polynomial since h[n] is the
coefﬁcient of e−jˆωn. While this process can be effective if Mis small, there is a much
more powerful approach to inverting the transformation that holds even for inﬁnite-lengthsequences.
1It is common in engineering to say that we “take the discrete-time Fourier transform” when we mean
that we consider X(ejˆω)as our representation of a signal x[n].
7-1 DTFT: FOURIER TRANSFORM FOR DISCRETE-TIME SIGNALS 261
In this section, we present the general concept of the discrete-time Fourier transform
which gives the frequency response when applied to the impulse response of an LTI
system. We give an integral form for the inverse DTFT that can be used even whenH(e
jˆω)does not have a ﬁnite polynomial representation such as (7.1). Furthermore,
we show that the DTFT can be used to represent a wide range of sequences, includingsequences of inﬁnite length, and that these sequences can be impulse responses, inputsto LTI systems, outputs of LTI systems, or indeed, any sequence that satisﬁes certainconditions to be discussed in this chapter.
7-1.1 Forward DTFT
The DTFT of a sequence x[n]is deﬁned as
Discrete-Time Fourier Transform
X(ejˆω)=∞/summationdisplay
n=−∞x[n]e−jˆωn (7.2)
The DTFT X(ejˆω)that results from this deﬁnition is a function of frequency ˆω. Going
from the signal x[n]to its DTFT is referred to as “taking the forward transform,” and
going from the DTFT back to the signal is referred to as “taking the inverse transform.”
The limits on the sum in (7.2) are shown as inﬁnite so that the DTFT is deﬁned for
inﬁnitely long signals as well as ﬁnite-length signals.2However, a comparison of (7.2)
to (7.1) shows that if the sequence were a ﬁnite-length impulse response, then the DTFTof that sequence would be the same as the frequency response of the FIR system. Moregenerally, if h[n] is the impulse response of an LTI system, then the DTFT of h[n] is
the frequency response H(e
jˆω)of that system. Examples of inﬁnite-duration impulse
response ﬁlters will be given in Chapter 10.
EXERCISE 7.1 Show that the DTFT function X(ejˆω)deﬁned in (7.2) is always periodic in ˆωwith
period 2 π, that is,
X(ej(ˆω+2π))=X(ejˆω).
7-1.2 DTFT of a Shifted Impulse Sequence
Our ﬁrst task is to develop examples of the DTFT for some common signals. The simplestcase is the time-shifted unit-impulse sequence x[n]=δ [n−n
0]. Its forward DTFT is by
deﬁnition
X(ejˆω)=∞/summationdisplay
n=−∞δ[n−n0]e−jˆωn
2The inﬁnite limits are used to imply that the sum is over all n, where x[n] /negationslash= 0. This often avoids
unnecessarily awkward expressions when using the DTFT for analysis.
262 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
Since the impulse sequence is nonzero only at n=n0it follows that the sum has only
one nonzero term, so
X(ejˆω)=e−jˆωn0
To emphasize the importance of this and other DTFT relationships, we use the notation
DTFT←→ to denote the forward and inverse transforms in one statement:
DTFT Representation of δ[n−n0]
x[n]=δ [n−n0]DTFT←→ X(ejˆω)=e−jˆωn0(7.3)
7-1.3 Linearity of the DTFT
Before we proceed further in our discussion of the DTFT, it is useful to consider one of
its basic properties. The DTFT is a linear operation, that is, the DTFT of a sum of twoor more scaled signals results in the identical sum and scaling of their correspondingDTFTs. To verify this, assume that x[n]=ax
1[n]+bx 2[n], where aandbare (possibly
complex) constants. The DTFT of x[n]is by deﬁnition
X(ejˆω)=∞/summationdisplay
n=−∞(ax 1[n]+bx 2[n])e−jˆωn
If both x1[n]andx2[n]have DTFTs, then we can use the algebraic property that
multiplication distributes over addition to write
X(ejˆω)=a∞/summationdisplay
n=−∞x1[n]e−jˆωn+b∞/summationdisplay
n=−∞x2[n]e−jˆωn=aX 1(ejˆω)+bX2(ejˆω)
That is, the frequency-domain representations are combined in exactly the same way as
the signals are combined.
EXAMPLE 7-1 DTFT of an FIR Filter
The following FIR ﬁlter
y[n]=5x [n−1]−4 x[n−3]+3x [n−5]
has a ﬁnite-length impulse response:
h[n]=5δ [n−1]−4 δ[n−3]+3δ [n−5]
Each impulse in h[n] is transformed using (7.3), and then combined according to the
linearity property of the DTFT which gives
H(ejˆω)=5e−jˆω−4e−j3ˆω+3e−j5ˆω
7-1 DTFT: FOURIER TRANSFORM FOR DISCRETE-TIME SIGNALS 263
7-1.4 Uniqueness of the DTFT
The DTFT is a unique relationship between x[n]andX(ejˆω); in other words, two different
signals cannot have the same DTFT. This is a consequence of the linearity property
because if two different signals have the same DTFT, then we can form a third signal bysubtraction and obtain
x
3[n]=x 1[n]−x 2[n]DTFT←→ X3(ejˆω)=X1(ejˆω)−X2(ejˆω)/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
identical DTFTs=0
However, from the deﬁnition (7.2) it is easy to argue that x3[n]has to be zero if its DTFT
is zero, which in turn implies that x1[n]=x 2[n].
The importance of uniqueness is that if we know a DTFT representation such as
(7.3), we can start in either the time or frequency domain and easily write down thecorresponding representation in the other domain. For example, if X(e
jˆω)=e−jˆω3, then
we know that x[n]=δ [n−3].
7-1.5 DTFT of a Pulse
Another common signal is the L-point rectangular pulse, which is a ﬁnite-length time
signal consisting of all ones:
rL[n]=u[n]−u[n −L]=/braceleftBigg
1n=0,1,2,...,L −1
0 elsewhere
Its forward DTFT is by deﬁnition
RL(ejˆω)=L−1/summationdisplay
n=01e−jˆωn=1−e−jˆωL
1−e−jˆω(7.4)
where we have used the formula for the sum of Lterms of a geometric series to “sum”
the series and obtain a closed-form expression for RL(ejˆω). This is a signal that we
studied before in Chapter 6 as the impulse response of an L-point running-sum ﬁlter.
In Section 6-7, the frequency response of the running-sum ﬁlter was shown to be theproduct of a Dirichlet form and a complex exponential. Referring to the earlier results inSection 6-7 or further manipulating (7.4), we obtain another DTFT pair:
DTFT Representation of L-Point Rectangular Pulse
rL[n]=u[n]−u[n −L]DTFT←→ RL(ejˆω)=sin(Lˆω/2)
sin(ˆω/2)e−jˆω(L−1)/2 (7.5)
Since the ﬁlter coefﬁcients of the running-sum ﬁlter are Ltimes the ﬁlter coefﬁcients of
the running-average ﬁlter, there is no Lin the denominator of (7.5).
264 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
7-1.6 DTFT of a Right-Sided Exponential Sequence
As an illustration of the DTFT of an inﬁnite-duration sequence, consider a “right-sided”
exponential signal of the form x[n]=anu[n], where acan be real or complex. Such a
signal is zero for n<0 (on the left-hand side of a plot). It decays “exponentially” for
n≥0i f|a|<1; it remains constant at 1 if |a|=1; and it grows exponentially if |a|>1.
Its DTFT is by deﬁnition
X(ejˆω)=∞/summationdisplay
n=−∞anu[n]e−jˆωn=∞/summationdisplay
n=0ane−jˆωn
We can obtain a closed-form expression for X(ejˆω)by noting that
X(ejˆω)=∞/summationdisplay
n=0(ae−jˆω)n
which can now be recognized as the sum of all the terms of an inﬁnite geometric series,
where the ratio between successive terms is (ae−jˆω). For such a series there is a formula
for the sum that we can apply to give the ﬁnal result
X(ejˆω)=∞/summationdisplay
n=0(ae−jˆω)n=1
1−ae−jˆω
There is one limitation, however. Going from the inﬁnite sum to the closed-form result
is only valid when |ae−jˆω|<1o r|a |<1. Otherwise, the terms in the geometric series
either grow without bound or remain constant, and their sum is inﬁnite.
This DTFT pair is another widely used result, worthy of highlighting as we have done
with the shifted impulse and pulse sequences.
DTFT Representation of anu[n]
x[n]=anu[n]DTFT←→ X(ejˆω)=1
1−ae−jˆωif|a|<1(7.6)
EXERCISE 7.2 Use the uniqueness property of the DTFT along with (7.6) to ﬁnd x[n]whose DTFT is
X(ejˆω)=1
1−0.5e−jˆω
EXERCISE 7.3 Use the linearity of the DTFT and (7.6) to determine the DTFT of the following sum
of two right-sided exponential signals: x[n]=(0 .8)nu[n]+2 (−0.5)nu[n].
7-1 DTFT: FOURIER TRANSFORM FOR DISCRETE-TIME SIGNALS 265
7-1.7 Existence of the DTFT
In the case of ﬁnite-length sequences such as the impulse response of an FIR ﬁlter, the
sum deﬁning the DTFT has a ﬁnite number of terms. Thus, the DTFT of an FIR ﬁlteras in (7.1) always exists because X(e
jˆω)is always ﬁnite. However, in the general case,
where one or both of the limits on the sum in (7.2) are inﬁnite, the DTFT sum maydiverge (become inﬁnite). This is illustrated by the right-sided exponential sequence inSection 7-1.6 when |a|>1.
A sufﬁcient condition for the existence of the DTFT of a sequence x[n]emerges from
the following manipulation that develops a bound on the size of X(e
jˆω):
|X(ejˆω)|=/vextendsingle/vextendsingle/vextendsingle/vextendsingle/vextendsingle∞/summationdisplay
n=−∞x[n]e−jˆωn/vextendsingle/vextendsingle/vextendsingle/vextendsingle/vextendsingle
≤
∞/summationdisplay
n=−∞/vextendsingle/vextendsingle/vextendsinglex[n]e
−jˆωn/vextendsingle/vextendsingle/vextendsingle (magnitude of sum ≤sum of magnitudes)
≤∞/summationdisplay
n=−∞|x[n]|
 >1/vextendsingle/vextendsingle/vextendsinglee
−jˆωn/vextendsingle/vextendsingle/vextendsingle (magnitude of product =product of magnitudes)
≤∞/summationdisplay
n=−∞|x[n]|
If the sum of |x[n]|is ﬁnite, then the DTFT will exist.
Sufﬁcient Condition for Existence of the DTFT
/vextendsingle/vextendsingle/vextendsingleX(e
jˆω)/vextendsingle/vextendsingle/vextendsingle≤ ∞/summationdisplay
n=−∞|x[n]|<∞(7.7)
A sequence x[n]satisfying (7.7) is said to be absolutely summable, and when (7.7) holds,
the inﬁnite sum deﬁning the DTFT X(ejˆω)in (7.2) is said to converge to a ﬁnite result
for all ˆω.
EXAMPLE 7-2 DTFT of a Complex Exponential?
Consider a right-sided complex exponential sequence, x[n]=rnejˆω0nu[n] whenr=1.
Applying the condition of (7.7) to this sequence leads to
∞/summationdisplay
n=0|ejˆω0n|=∞/summationdisplay
n=01→∞
Thus, the DTFT of a right-sided complex exponential is not guaranteed to exist, and it
is easy to verify that |X(ejˆω0)|→∞ . On the other hand, if r<1, the DTFT of x[n]=
rnejˆω0nu[n] exists and is given by the result of Section 7-1.6 with a=rejˆω0. The non-
existence of the DTFT is also true for the related case of a two-sided complex exponential,
deﬁned as ejˆω0nfor−∞<n<∞.
266 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
7-1.8 The Inverse DTFT
Now that we have a condition for the existence of the DTFT, we need to address the
question of the inverse DTFT. The uniqueness property implies that if we have a tableof known DTFT pairs such as (7.3), (7.5), and (7.6), we can always go back and forthbetween the time-domain and frequency-domain representations simply by table lookupas in Exercise 7.2. However, with this approach, we would always be limited by the sizeof our table of known DTFT pairs.
Instead, we want to continue the development of the DTFT by studying a general
expression for performing the inverse DTFT. The DTFT X(e
jˆω)is a function of the
continuous variable ˆω, so an integral (7.8) with respect to normalized frequency ˆωis
needed to transform X(ejˆω)back to the sequence x[n].
Inverse DTFT
x[n]=1
2ππ/integraldisplay
−πX(ejˆω)ejˆωndˆω.(7.8)
Observe that nis an integer parameter in the integral, while ˆωnow is a dummy variable
of integration that disappears when the deﬁnite integral is evaluated at its limits. Thevariable ncan take on all integer values in the range −∞<n<∞, and hence, using
(7.8) we can extract each sample of a sequence x[n]whose DTFT is X(e
jˆω). We could
verify that (7.8) is the correct inverse DTFT relation by substituting the deﬁnition of theDTFT in (7.2) into (7.8) and rearranging terms.
Instead of carrying out a general proof, we present a simpler and more intuitive
justiﬁcation by working with the shifted impulse sequence δ[n−n
0], whose DTFT is
known to be
X(ejˆω)=e−jˆωn0
The objective is to show that (7.8) gives the correct time-domain result when operating
onX(ejˆω). If we substitute this DTFT into (7.8), we obtain
1
2ππ/integraldisplay
−πX(ejˆω)ejˆωndˆω=1
2ππ/integraldisplay
−πe−jˆωn0ejˆωndˆω=1
2ππ/integraldisplay
−πejˆω(n−n0)dˆω (7.9)
The deﬁnite integral of the exponential must be treated as two cases: ﬁrst, when n=n0,
1
2ππ/integraldisplay
−πejˆω(n−n0)dˆω=1
2ππ/integraldisplay
−πdˆω=1 (7.10a)
and then for n/negationslash=n0,
1
2ππ/integraldisplay
−πejˆω(n−n0)dˆω=1
2πejˆω(n−n0)
j(n−n0)/vextendsingle/vextendsingle/vextendsingle/vextendsingle/vextendsingleπ
−π=ejπ(n−n0)−e−jπ(n −n0)
j2π(n−n0)=0 (7.10b)
since the numerator is zero when n−n0is a nonzero integer.
7-1 DTFT: FOURIER TRANSFORM FOR DISCRETE-TIME SIGNALS 267
Equations (7.10a) and (7.10b) also show that the complex exponentials ejˆωnande−jˆωn0
(when viewed as periodic functions of ˆω) are orthogonal to each other.3
Putting these two cases together, we have
1
2ππ/integraldisplay
−πe−jˆωn0ejˆωndˆω=/braceleftBigg
1 n=n0
0 n/negationslash=n0/bracerightbigg
=δ[n−n0] (7.11)
Thus, we have shown that (7.8) correctly returns the sequence x[n]=δ [n−n0], when
the DTFT is X(ejˆω)=e−jˆωn0.
This example is actually strong enough to justify that the inverse DTFT integral
(7.8) will always work for ﬁnite-length sequences, because the DTFT of a general ﬁnite-
length sequence is always a ﬁnite linear combination of complex exponential terms likee
−jˆωn0. The linearity property of the DTFT, therefore, guarantees that the inverse DTFT
integral will recover a ﬁnite-length sequence that is the same linear combination of shiftedimpulses, which is the correct sequence for a ﬁnite-length signal. If the signal is of inﬁniteextent, it can be shown that if x[n]is absolutely summable as in (7.7) so that the DTFT
exists, then (7.8) recovers the original sequence from X(e
jˆω).
EXERCISE 7.4 Recall that X(ejˆω)deﬁned in (7.2) is always periodic in ˆωwith period 2 π. Use this
fact and a change of variables to argue that we can rewrite the inverse DTFT integralwith limits that go from 0 to 2 π, instead of −πto+π; that is, show that
1
2ππ/integraldisplay
−πX(ejˆω)ejˆωndˆω=1
2π2π/integraldisplay
0X(ejˆω)ejˆωndˆω
7-1.9 Bandlimited DTFT
Ordinarily we deﬁne a signal in the time domain, but the inverse DTFT integral enablesus to deﬁne a signal in the frequency domain by specifying its DTFT as a function offrequency. Once we specify the magnitude and phase of X(e
jˆω), we apply (7.8) and carry
out the integral to get the signal x[n]. An important example of this process is to deﬁne
anideal bandlimited signal, which is a function that is nonzero in the low frequency band
|ˆω|≤ ˆωband zero in the high frequency band ˆωb<|ˆω|≤π . If the nonzero portion of
the DTFT is a constant value of one with a phase of zero, then we have
X(ejˆω)=/braceleftBigg
1 |ˆω|≤ ˆωb
0 ˆωb<|ˆω|≤π
which is plotted in Fig. 7-1(a).
3This same property is used in Section C-1 of Appendix C to derive the Fourier series integral for periodic
continuous-time signals. Note, for example, the similarity between equations (C.1) and (7.8).
268 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
0
(a)
048 1 2
(b)n1
O!bO!
xŒX.ejO!/
O!b !b
Frequency .O!/
Time Index .n/4 8Figure 7-1 Bandlimited DTFT. (a) DTFT is a
rectangle bandlimited to |ˆω|<ˆωb. (b) Inverse DTFT is
a sampled sinc function with ˆωb=0.25π .
For this simple DTFT function, the integrand of (7.8) is a piecewise constant function
that is relatively easy to integrate after we substitute the deﬁnition of X(ejˆω)into the
inverse DTFT integral (7.8)
x[n]=1
2ππ/integraldisplay
−πX(ejˆω)ejˆωndˆω
=
 *0
1
2π−ˆωb/integraldisplay
−π0ejˆωndˆω+1
2πˆωb/integraldisplay
−ˆωb1ejˆωndˆω+
 *0
1
2ππ/integraldisplay
ˆωb0ejˆωndˆω
The integral has been broken into three cases for the three intervals, where X(ejˆω)is
either zero or one. Only the middle integral is nonzero, and the integration yields
x[n]=1
2πˆωb/integraldisplay
−ˆωb1ejˆωndˆω
=ejˆωn
2πjn/vextendsingle/vextendsingle/vextendsingle/vextendsingle/vextendsingleˆωb
−ˆωb=ejˆωbn−e−jˆωbn
(2j)πn=sin(ˆωbn)
πn
The last step uses the inverse Euler formula for sine.
The result of the inverse DTFT is the discrete-time signal
x[n]=sin(ˆωbn)
πn−∞<n<∞ (7.12)
7-1 DTFT: FOURIER TRANSFORM FOR DISCRETE-TIME SIGNALS 269
where 0 <ˆωb<π. This mathematical form, which is called a “sinc function,” is plotted
in Fig. 7-1(b) for ˆωb=0.25π . Although the “sinc function” appears to be undeﬁned at
n=0, a careful application of L’Hˆ opital’s rule, or the small angle approximation to the
sine function, shows that the value is actually x[0]= ˆωb/π. Since a DTFT pair is unique,
we have obtained another DTFT pair that can be added to our growing inventory.
DTFT Representation of a Sinc Function
x[n]=sin(ˆωbn)
πnDTFT←→ X(ejˆω)=/braceleftBigg
1 |ˆω|≤ ˆωb
0 otherwise(7.13)
We will revisit this transform as a frequency response in Section 7-3 when discussing
ideal ﬁlters.
Our usage of the term sinc function refers to a form, rather than a speciﬁc
function deﬁnition. The form of the “sinc function” has a sine function in thenumerator and the argument of the sine in the denominator. In signal processing,the normalized sinc function is deﬁned as
sinc(θ) =sinπθ
πθ
and this is the deﬁnition used in the MATLAB M-ﬁle sinc . If we expressed
x[n]in (7.12) in terms of this deﬁnition of the sinc function, we would write
x[n]=ˆωb
πsinc/parenleftbiggˆωb
πn/parenrightbigg
While it is nice to have the name sinc for this function, which turns up often in
Fourier transform expressions, it can be cumbersome to ﬁgure out the properargument and scaling. On the other hand, the term “sinc function” is widely usedas a convenient shorthand for any function of the general form of (7.12), so weuse the term henceforth in that sense.
The sinc signal is important in discrete-time signal and system theory, but it is
impossible to determine its DTFT by directly applying the forward transform summation(7.2). This can be seen by writing out the forward DTFT of a sinc function, which is theinﬁnite summation below.
X(e
jˆω)=∞/summationdisplay
n=−∞sin(ˆωbn)
πne−jˆωn=/braceleftBigg
1 |ˆω|≤ ˆωb
0 otherwise(7.14)
However, because of the uniqueness of the DTFT, we have already obtained the desiredDTFT transform pair by starting in the frequency domain with the correct transformX(e
jˆω)and taking the inverse DTFT of X(ejˆω)to get the sinc function sequence.
270 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
Another property of the sinc function sequence is that it is not absolutely summable.
If we recall from (7.7) that absolute summability is a sufﬁcient condition for the DTFT
to exist, then the sinc function must be an exception. We know that its DTFT exists
because the right-hand side of (7.14) is ﬁnite and well deﬁned. Therefore, the transformpair (7.13) shows that the condition of absolute summability is a sufﬁcient, but not anecessary condition, for the existence of the DTFT.
7-1.10 Inverse DTFT for the Right-Sided Exponential
Another inﬁnite-length sequence is the right-sided exponential signal x[n]=anu[n]
discussed in Section 7-1.6. In this case, we were able to use a familiar result for geometricseries to “sum” the expression for the DTFT and obtain a closed-form representation
X(e
jˆω)=1
1−ae−jˆω|a|<1 (7.15)
On the other hand, suppose that we want to determine x[n]given X(ejˆω)in (7.15).
Substituting this into the inverse DTFT expression (7.8) gives
x[n]=1
2ππ/integraldisplay
−πejˆωn
1−ae−jˆωdˆω (7.16)
Although techniques exist for evaluating such integrals using the theory of complex
variables, we do not assume knowledge of these techniques. Instead, we invoke theuniqueness property of the DTFT which tells us that we can always rely on the tabulatedresult in (7.6). In other words, we can write the inverse transform by “table lookup.” Theimportant point of this example and the sinc function example is that once a transformpair has been determined, by whatever means, we can use that DTFT relationship tomove back and forth between the time and frequency domains without integrals or sums.Furthermore, in Section 7-2 we will introduce a number of general properties of the DTFTthat can be employed to simplify forward and inverse DTFT manipulations even more.
7-1.11 The DTFT Spectrum
So far, we have not used the term “spectrum” when discussing the DTFT, but it should beclear at this point that it is appropriate to refer to the DTFT as a spectrum representation ofa discrete-time signal. Recall that we introduced the term spectrum in Chapter 3 to meanthe collection of frequency and complex amplitude information required to synthesizea signal using the Fourier synthesis equation (3.26) in Section 3-5. In the case of theDTFT, the synthesis equation is the inverse transform integral (7.8), and the analysisequation (7.2) provides a means for determining the complex amplitudes of the complexexponentials e
jˆωnin the synthesis equation. To make this a little more concrete, we can
7-2 PROPERTIES OF THE DTFT 271
4
O! O!3X.ejO!/;X.ejO!k/
0 2/EM /EM /NUL/EM! /c129O!
Figure 7-2 Riemann sum approximation to
the integral of the inverse DTFT. Here,
X(ejˆω)=2(1+cosˆω), which is the DTFT
ofx[n]=δ [n+1]+2 δ[n]+δ [n−1].
view the inverse DTFT integral as the limit of a ﬁnite sum by writing (7.8) in terms of
the Riemann sum deﬁnition4of the integral
x[n]=1
2π2π/integraldisplay
0X(ejˆω)ejˆωndˆω=lim
/Delta1ˆω→0N−1/summationdisplay
k=0/parenleftbigg1
2πX(ejˆωk)/Delta1ˆω/parenrightbigg
ejˆωkn(7.17)
where /Delta1ˆω=2π/N is the spacing between the frequencies ˆωk=2πk/N, with the
range of integration50≤ˆω< 2πbeing covered by choosing k=0,1,...,N −1. The
expression on the right in (7.17) contains a sum of complex exponential signals whose
spectrum representation is the set of frequencies ˆωktogether with the corresponding
complex amplitudes X(ejˆωk)/Delta1ˆω/(2π). This is illustrated in Fig. 7-2 which shows the
values X(ejˆωk)as gray dots and the rectangles have area equal to X(ejˆωk)/Delta1ˆω. Each one
of the rectangles can be viewed as a spectrum line, especially when /Delta1ˆω→0. In the limit
as/Delta1ˆω→0, the magnitudes of the spectral components become inﬁnitesimally small, as
does the spacing between frequencies. Therefore, (7.17) suggests that the inverse DTFTintegral synthesizes the signal x[n]as a sum of inﬁnitely small complex exponentials with
all frequencies 0 ≤ˆω< 2πbeing used in the sum. The changing magnitude of X(e
jˆω)
speciﬁes the relative amount of each frequency component that is required to synthesizex[n]. This is entirely consistent with the way we originally deﬁned and subsequently used
the concept of spectrum in Chapters 3–6, so we henceforth feel free to apply the termspectrum also to the DTFT representation.
7-2 Properties of the DTFT
We have motivated our study of the DTFT primarily by considering the problem of
determining the frequency response of a ﬁlter, or more generally the Fourier representationof a signal. While these are important applications of the DTFT, it is also important tonote that the DTFT also plays an important role as an “operator” in the theory of discrete-time signals and systems. This is best illustrated by highlighting some of the importantproperties of the DTFT operator.
4The Riemann sum approximation to an integral is/integraltextu
0q(t)dt ≈/summationtextNu−1
n=0q(tn)/Delta1t, where the integrand
q(t) is sampled at Nuequally spaced times tn=n/Delta1t, and/Delta1t=u/Nu.
5For convenience in indexing the sum, we have used the result of Exercise 7.4 to change the limits to
0t o2π.
272 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
7-2.1 Linearity Property
As we showed in Section 7-1.3, the DTFT operation obeys the principle of superposition
(i.e., it is a linear operation). This is summarized in (7.18)
Linearity Property of the DTFT
x[n]=ax 1[n]+bx 2[n]DTFT←→ X(ejˆω)=aX 1(ejˆω)+bX2(ejˆω)(7.18)
7-2.2 Time-Delay Property
When we ﬁrst studied sinusoids, the phase was shown to depend on the time-shift of
the signal. The simple relationship is “phase equals the negative of frequency times
time-shift.” This concept carries over to the general case of the Fourier transform. Thetime-delay property of the DTFT states that time-shifting results in a phase change in thefrequency domain:
Time-Delay Property of the DTFT
y[n]=x [n−nd]DTFT←→ Y(ejˆω)=X(ejˆω)e−jˆωnd(7.19)
The reason that the delay property is so important and useful is that (7.19) shows that
multiplicative factors of the form e−jˆωndin frequency-domain expressions always signify
time delay.
EXAMPLE 7-3 Delayed Sinc Function
Lety[n]=x [n−10], where x[n]is the sinc function of (7.13):
y[n]=sinˆωb(n−10)
π(n−10)
Using the time-delay property and the result for X(ejˆω)in (7.13), we can write down the
following expression for the DTFT of y[n]with virtually no further analysis:
Y(ejˆω)=X(ejˆω)e−jˆω10=/braceleftBigg
e−jˆω100≤|ˆω|≤ ˆωb
0 ˆωb<|ˆω|≤π
Notice that the magnitude plot of |Y(ejˆω)|is still a rectangle as in Fig. 7-1(a); time delay
only changes the phase in the frequency domain.
To prove the time-delay property, consider a sequence y[n]=x [n−nd], which is
simply a time-shifted version of another sequence x[n]. We need to compare the DTFT
ofy[n]to the DTFT of x[n]. By deﬁnition, the DTFT of y[n]is
Y(ejˆω)=∞/summationdisplay
n=−∞x[n−nd]/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
y[n]e−jˆωn(7.20)
7-2 PROPERTIES OF THE DTFT 273
If we make the substitution m=n−ndfor the index of summation in (7.20), we obtain
Y(ejˆω)=∞/summationdisplay
m=−∞x[m]e−jˆω(m+nd)=∞/summationdisplay
m=−∞x[m]e−jˆωme−jˆωnd(7.21)
Since the factor e−jˆωnddoes not depend on mand is common to all the terms in the sum
on the right in (7.21), we can write Y(ejˆω)as
Y(ejˆω)=/parenleftBigg∞/summationdisplay
m=−∞x[m]e−jˆωm/parenrightBigg
e−jˆωnd=X(ejˆω)e−jˆωnd(7.22)
Therefore, we have proved that time-shifting results in a phase change in the frequency
domain.
7-2.3 Frequency-Shift Property
Consider a sequence y[n]=ejˆω0nx[n]where the DTFT of x[n]isX(ejˆω). The
multiplication by a complex exponential causes a frequency shift in the DTFT of y[n]
compared to the DTFT of x[n]. By deﬁnition, the DTFT of y[n]is
Y(ejˆω)=∞/summationdisplay
n=−∞ejˆω0nx[n]/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
y[n]e−jˆωn(7.23)
If we combine the exponentials in the summation on the right side of (7.23), we obtain
Y(ejˆω)=∞/summationdisplay
n=−∞x[n]e−j(ˆω−ˆω0)n=X(ej(ˆω−ˆω0)) (7.24)
Therefore, we have proved the following general property of the DTFT:
Frequency-Shift Property of the DTFT
y[n]=ejˆω0nx[n]DTFT←→ Y(ejˆω)=X(ej(ˆω−ˆω0))(7.25)
7-2.3.1 DTFT of a Finite-Length Complex Exponential
An excellent illustration of the frequency-shifting property comes from studying the
DTFT of a ﬁnite-duration complex exponential. This is an important case for bandpass
ﬁlter design and for spectrum analysis. In spectrum analysis, we would expect the DTFTto have a large value at the frequency of the ﬁnite-duration complex exponential signal,and the frequency-shifting property makes it easy to see that fact.
Consider a length-L complex exponential signal
x
L[n]=Aej(ˆω0n+ϕ)forn=0,1,2,...,L −1
274 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
10
2420
/EM
2
/EM/EM
–/EM
2–/EM
2
–/EM–/EM
0:4/EM 00
00
(a)
(b)jD20.ejO!/j jX20.ejO!/j
Frequenc y.O!/Figure 7-3 Illustration of DTFT frequency-shifting
property. (a) DTFT magnitude for the length-20 unit
amplitude rectangular pulse. (b) DTFT of alength-20 complex exponential with amplitudeA=0.2, and whose frequency is ˆω
0=0.4π.
which is zero for n<0 and n≥L. An alternative representation for xL[n]is the product
of a length-L rectangular pulse times the complex exponential.
xL[n]=Aejϕej(ˆω0n)rL[n]/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
frequency shift
where the rectangular pulse rL[n]is equal to one for n=0,1,2,...,L −1, and zero
elsewhere.
To determine an expression for the DTFT of xL[n], we use the DTFT of rL[n]
which is known to contain a Dirichlet form6as in (7.5) (also see Table 7-1 on p. 293).
Figure 7-3(a) shows the DTFT magnitude for a length-20 rectangular pulse (i.e.,
|R20(ejˆω)|=|D20(ˆω)|). The peak value of the Dirichlet magnitude is 20 at ˆω=0, and
there are zeros at integer multiples of 2 π/20=0.1π, when L=20.
Then the DTFT of xL[n]is obtained with the frequency-shifting property:
XL(ejˆω)=AejϕRL(ej(ˆω−ˆω0)) (7.26a)
=AejϕDL(ˆω−ˆω0)e−j(ˆω−ˆω0)(L−1)/2(7.26b)
where DL(ˆω−ˆω0)is a frequency-shifted version of the Dirichlet form
DL(ˆω−ˆω0)=sin((ˆω−ˆω0)L/2)
sin((ˆω−ˆω0)/2)(7.27)
Since the exponential terms in (7.26b) only contribute to the phase, this result says that
the magnitude |XL(ejˆω)|=A|D L(ˆω−ˆω0)|is a frequency-shifted Dirichlet that is scaled
byA.F o r ˆω0=0.4π,A=0.2, and L=20, the length-20 complex exponential, x20[n]=
0.2e x p(j0.4πn)r 20[n]has the DTFT magnitude shown in Fig. 7-3(b). Notice that the
peak of the shifted Dirichlet envelope is at the frequency of the complex exponential,
ˆω0=0.4π. The peak height is the product of the Dirichlet peak height and the amplitude
of the complex exponential, AL=(0.2)(20)=4.
6The Dirichlet form was ﬁrst deﬁned in Section 6-7 on p. 235.
7-2 PROPERTIES OF THE DTFT 275
12
/EM –/EM 0:4/EM –0:4/EM 00jS20.ejO!/j
Frequenc y.O!/Figure 7-4 DTFT of a length-20 sinusoid with
amplitude A=0.2, and frequency ˆω0=0.4π.
7-2.3.2 DTFT of a Finite-Length Real Cosine Signal
A sinusoid is composed of two complex exponentials, so the frequency-shifting property
has to be applied twice to obtain the DTFT. Consider a length-L sinusoid
sL[n]=A cos(ˆω0n+ϕ) forn=0,1,...,L −1 (7.28a)
which we can write as the sum of complex exponentials at frequencies +ˆω0and−ˆω0as
follows:
sL[n]=1
2Aejϕejˆω0n+1
2Ae−jϕe−jˆω0nforn=0,1,...,L −1 (7.28b)
Using the linearity of the DTFT and (7.26b) for the two frequencies ±ˆω0leads to the
expression
SL(ejˆω)=1
2AejϕDL(ˆω−ˆω0)e−j(ˆω−ˆω0)(L−1)/2
+1
2Ae−jϕDL(ˆω+ˆω0)e−j(ˆω+ˆω0)(L−1)/2(7.29)
where the function DL(ˆω)is the Dirichlet form in (7.27). In words, the DTFT is the sum
of two Dirichlets: one shifted up to +ˆω0and the other down to −ˆω0.
Figure 7-4 shows |S20(ejˆω)|as a function of ˆωfor the case ˆω0=0.4πwithA=0.2
andL=20. The DTFT magnitude exhibits its characteristic even symmetry, and the
peaks of the DTFT occur near ˆω0=±0.4π. Furthermore, the peak heights are equal to
approximately1
2AL. This approximation comes from evaluating (7.29) for ˆω0=0.4π,
and assuming that the value of |S20(ejˆω0)|is determined entirely by the ﬁrst term in (7.29).
In Section 8-7, we will revisit the fact that isolated spectral peaks are often indicative
of sinusoidal signal components. Knowledge that the peak height depends on both the
amplitude Aand the duration Lis useful in interpreting spectrum analysis results for
signals involving multiple frequencies.
7-2.4 Convolution and the DTFT
Perhaps the most important property of the DTFT concerns the DTFT of a sequence thatis the discrete-time convolution of two sequences. The following property says that theDTFT transforms convolution into multiplication.
Convolution Property of the DTFT
y[n]=x [n]∗h[n]DTFT←→ Y(ejˆω)=X(ejˆω)H(ejˆω)(7.30)
276 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
To illustrate the convolution property, consider the convolution of two signals
h[n]∗x [n], where x[n]is a ﬁnite-length signal with three nonzero values
x[n]=3δ [n]+4 δ[n−1]+5δ [n−2] (7.31)
andh[n] is a signal whose length may be ﬁnite or inﬁnite. When the signal x[n]is
convolved with h[n], we can write
y[n]=M/summationdisplay
k=0x[k]h[n−k]
=x[0]h[n]+x [1]h[n −1]+x [2]h[n−2]+x[3]h[n −3]+···/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
these terms are zero(7.32)
If we then take the DTFT of (7.32), we obtain
Y(ejˆω)=x[0]H(ejˆω)+x[1]e−jˆωH(ejˆω)+x[2]e−j2ˆωH(ejˆω)/bracehtipupleft/bracehtipdownright/bracehtipdownleft /bracehtipupright(7.33)
where the delay property applied to a term like h[n−2]creates the term e−j2ˆωH(ejˆω).
Then we observe that the term H(ejˆω)on the right-hand side of (7.33) can be factored
out to write
Y(ejˆω)=/parenleftBig
x[0]+x[1]e−jˆω+x[2]e−j2ˆω/parenrightBig
/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
DTFT of x[n]H(ejˆω) (7.34a)
and, therefore, we have the desired result which is multiplication of the DTFTs as asserted
in (7.30).
Y(ejˆω)=X(ejˆω)H(ejˆω) (7.34b)
Substituting the signal values for x[n]in this example we obtain
Y(ejˆω)=X(ejˆω)H(ejˆω)=/parenleftBig
3+4e−jˆω+5e−j2ˆω/parenrightBig
/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
coefﬁcients are signal valuesH(ejˆω) (7.34c)
The steps above do not depend on the numerical values of the signal x[n], so a general
proof could be constructed along these lines. In fact, the proof would be valid for signals ofinﬁnite length, where the limits on the sum in (7.32) would be inﬁnite. The only additionalconcern for the inﬁnite-length case would be that the DTFTs X(e
jˆω)andH(ejˆω)must
exist as we have discussed before.
EXAMPLE 7-4 Frequency Response of Delay
The delay property is a special case of the convolution property of the DTFT. To see this,
recall that we can represent delay as the convolution with a shifted impulse
y[n]=x [n]∗δ [n−nd]=x[n−nd]
7-2 PROPERTIES OF THE DTFT 277
so the impulse response of a delay system is h[n]=δ [n−nd]. The corresponding
frequency response (i.e., DTFT) of the delay system is
H(ejˆω)=∞/summationdisplay
n=−∞δ[n−nd]e−jˆωn=e−jˆωnd
Therefore, using the convolution property, the DTFT of the output of the delay system is
Y(ejˆω)=X(ejˆω)H(ejˆω)=X(ejˆω)e−jˆωnd
which is identical to the delay property of (7.19).
7-2.4.1 Filtering is Convolution
The convolution property of LTI systems provides an effective way to think about LTI
systems. In particular, when we think of LTI systems as “ﬁlters” we are thinking of
their frequency responses, which can be chosen so that some frequencies of the inputare blocked while others pass through with little modiﬁcation. As we discussed inSection 7-1.11, the DTFT X(e
jˆω)plays the role of spectrum for both ﬁnite-length signals
and inﬁnite-length signals. The convolution property (7.30) reinforces this view. If we use(7.30) to write the expression for the output of an LTI system using the DTFT synthesisintegral, we have
y[n]=1
2π2π/integraldisplay
0H(ejˆω)X(ejˆω)ejˆωndˆω (7.35a)
which can be approximated with a Riemann sum as in Section 7-1.11
y[n]= lim
/Delta1ˆω→0N−1/summationdisplay
k=0H(ejˆωk)/parenleftbigg/Delta1ˆω
2πX(ejˆωk)/parenrightbigg
ejˆωkn(7.35b)
Now we see that the complex amplitude/Delta1ˆω
2πX(ejˆωk)at each frequency is modiﬁed by
the frequency response H(ejˆωk)of the system evaluated at the given frequency ˆωk. This
is exactly the same result as the sinusoid-in gives sinusoid-out property that we saw
in Chapter 6 for case where the input is a discrete sum of complex exponentials. InSection 7-3, we will expand on this idea and deﬁne several ideal frequency-selectiveﬁlters whose frequency responses are ideal versions of ﬁlters that we might want toimplement in a signal processing application.
7-2.5 Energy Spectrum and the Autocorrelation Function
An important result in Fourier transform theory is Parseval’s Theorem :
Parseval’s Theorem for the Energy of a Signal
∞/summationdisplay
n=−∞|x[n]|2=1
2ππ/integraldisplay
−π|X(ejˆω)|2dˆω(7.36)
278 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
The left-hand side of (7.36) is a scalar value which is the energy in the signal. Thus, the
right-hand side of (7.36) is also the energy, but the DTFT |X(ejˆω)|2shows how the energy
is distributed versus frequency. Therefore, the DTFT |X(ejˆω)|2is called the magnitude-
squared spectrum or the energy spectrum ofx[n].7If we ﬁrst deﬁne the energy of a signal
as the sum of the squares
E=∞/summationdisplay
n=−∞|x[n]|2(7.37)
then the energy Eis a single number that is often a convenient measure of the size of the
signal.
EXAMPLE 7-5 Energy of the Sinc Signal
The energy of the sinc signal (expressed in the time domain) is
E=∞/summationdisplay
n=−∞/parenleftbiggsinˆωbn
πn/parenrightbigg2
While it is impossible to evaluate this sum directly, application of Parseval’s theorem
yields
E=∞/summationdisplay
n=−∞/parenleftbiggsinˆωbn
πn/parenrightbigg2
=1
2πˆωb/integraldisplay
−ˆωb|1|2dˆω=ˆωb
π
because the DTFT of the sinc signal is one for −ˆωb≤ˆω≤ˆωb. A simple interpretation
of this result is that the energy is proportional to the bandwidth of the sinc signal and
evenly distributed in ˆωacross the band |ˆω|≤ ˆωb.
7-2.5.1 Autocorrelation Function
The energy spectrum is the Fourier transform of a time-domain signal which turns out
to be the autocorrelation of x[n]. The autocorrelation function is widely used in signal
detection applications. Its usual deﬁnition (7.39) is equivalent to the following convolutionoperation:
c
xx[n]=x [−n]∗x [n]=∞/summationdisplay
k=−∞x[−k]x[n−k] (7.38)
By making the substitution m=−kfor the dummy index of summation, we can write
cxx[n]=∞/summationdisplay
m=−∞x[m]x[n+m]− ∞ <n<∞ (7.39)
7In many physical systems, energy is calculated by taking the square of a physical quantity (like voltage)
and integrating, or summing, over time.
7-3 IDEAL FILTERS 279
which is the basic deﬁnition of the autocorrelation function when x[n]is real. Observe that
in (7.39), the index nserves to shift x[n+m]with respect to x[m]when both sequences
are thought of as functions of m. It can be shown that cxx[n]is maximum at n=0, because
then,x[n+m]is perfectly aligned with x[m]. The independent variable nincxx[n]is
often called the “lag” by virtue of its meaning as a shift between two copies of the same
sequence x[n]. When the lag is zero (n=0)in (7.39), the value of the autocorrelation is
equal to the energy in the signal (i.e., E=cxx[0]).
EXERCISE 7.5 In (7.38), we use the time-reversed signal x[−n]. Show that the DTFT of x[−n] is
X(e−jˆω).
EXERCISE 7.6 In Chapter 6, we saw that the frequency response for a real impulse response must
be conjugate symmetric. Since the frequency response function is a DTFT, it mustalso be true that the DTFT of a real signal x[n]is conjugate symmetric. Show that if
x[n]is real, X(e
−jˆω)=X∗(ejˆω).
Using the results of Exercises 7.5 and 7.6 for real signals, the DTFT of the
autocorrelation function cxx[n]=x [−n]∗x [n]is
Cxx(ejˆω)=X(e−jˆω)X(ejˆω)=X∗(ejˆω)X(ejˆω)=|X(ejˆω)|2(7.40)
SinceCxx(ejˆω)can be written as a magnitude squared, it is purely real and Cxx(ejˆω)≥0.
A useful relationship results if we represent cxx[n]in terms of its inverse DTFT, that is,
cxx[n]=1
2ππ/integraldisplay
−π|X(ejˆω)|2ejˆωndˆω (7.41)
If we evaluate both (7.39) and (7.41) at n=0, we see that the energy of the sequence can
also be computed from Cxx(ejˆω)=|X(ejˆω)|2as follows:
∞/summationdisplay
m=−∞|x[n]|2=cxx[0]=1
2ππ/integraldisplay
−π|X(ejˆω)|2dˆω (7.42)
Finally, equating (7.37) and (7.42) we obtain Parseval’s Theorem (7.36).
7-3 Ideal Filters
In any practical application of LTI discrete-time systems, the frequency response functionH(e
jˆω)would be derived by a ﬁlter design procedure that would yield an LTI system
that could be implemented with ﬁnite computation. However, in the early phases of thesystem design process it is common practice to start with ideal ﬁlters that have simple
frequency responses that provide ideal frequency selectivity.
280 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
7-3.1 Ideal Lowpass Filter
An ideal lowpass ﬁlter (LPF) has a frequency response that consists of two regions: the
passband near ˆω=0 (DC), where the frequency response is one, and the stopband away
fromˆω=0, where it is zero. An ideal LPF is therefore deﬁned as
Hlp(ejˆω)=/braceleftBigg
1|ˆω|≤ ˆωco
0ˆωco<|ˆω|≤π(7.43)
The frequency ˆωcois called the cutoff frequency of the LPF passband. Figure 7-5 shows a
plot of Hlp(ejˆω)for the ideal LPF. The shape is rectangular and Hlp(ejˆω)is even symmetric
about ˆω=0. As discussed in Section 6-4.3, this property is needed because real-valued
impulse responses lead to ﬁlters with a conjugate symmetric frequency responses. Since
Hlp(ejˆω)has zero phase, it is real-valued, so being conjugate symmetric is equivalent to
being an even function.
EXERCISE 7.7 In Chapter 6, we saw that the frequency response for a real impulse response must
be conjugate symmetric. Show that a lowpass frequency response deﬁned with linearphase
H(e
jˆω)=e−j7ˆωHlp(ejˆω)
is conjugate symmetric, which would imply that its inverse DTFT is real.
The impulse response of the ideal LPF, found by applying the DTFT pair in (7.13),
is a sinc function form
hlp[n]=sinˆωcon
πn−∞<n<∞ (7.44)
The ideal LPF is impossible to implement because the impulse response hlp[n]is non-
causal and, in fact, has nonzero values for large negative indices as well as large positiveindices. However, that does not invalidate the ideal LPF concept—the idea of selectingthe low-frequency band and rejecting all other frequency components. Even the runningaverage ﬁlter discussed in Section 6-7.3 might be a satisfactory LPF in some applications.Figure 7-6 shows the frequency response of an 11-point running average ﬁlter. Note
01HLP.ejO!/
– O!
Frequency .O!/O!co –O!coFigure 7-5 Frequency response of an ideal LPF with
its cutoff at ˆωcorad. Recall that Hlp(ejˆω)must also be
periodic with period 2 π.
7-3 IDEAL FILTERS 281
1
20–/EM–/EM
2 112/EMjH.ejO!/j
O! /EMFigure 7-6 Magnitude response of an 11-point
running average ﬁlter. (Also shown in full detail in
Fig. 6-8.)
that this causal ﬁlter has a lowpass-like frequency response magnitude, but it is far
away from zero in what might be considered the stopband. In more stringent ﬁlteringapplications, we need better approximations to the ideal characteristic. In a practicalapplication, the process of ﬁlter design involves mathematical approximation of the idealﬁlter with a frequency response that is close enough to the ideal frequency response whilecorresponding to an implementable ﬁlter.
The following example shows the power of the transform approach when dealing
with ﬁltering problems.
EXAMPLE 7-6 Ideal Lowpass Filtering
Consider an ideal LPF with frequency response given by (7.43) and impulse responsein (7.44). Now suppose that the input signal x[n]to the ideal LPF is a bandlimited sinc
signal
x[n]=sinˆω
bn
πn(7.45)
Working in the time domain, the corresponding output of the ideal LPF would be given
by the convolution expression
y[n]=x [n]∗h lp[n]=∞/summationdisplay
m=−∞/parenleftbiggsinˆωbm
πm/parenrightbigg/parenleftbiggsinˆωco(n−m)
π(n−m)/parenrightbigg
(7.46)
Evaluating this convolution directly in the time domain is impossible both analyticallyand via numerical computation. However, it is straightforward to obtain the ﬁlter outputif we use the DTFT because in the frequency domain the transforms are both rectanglesand they are multiplied. From (7.13), the DTFT of the input is
X(e
jˆω)=/braceleftBigg
1|ˆω|≤ ˆωb
0ˆωb<|ˆω|≤π(7.47)
Therefore, the DTFT of the ideal ﬁlter’s output is Y(ejˆω)=X(ejˆω)H(ejˆω), which would
be of the form
Y(ejˆω)=X(ejˆω)H lp(ejˆω)=/braceleftBigg
1 |ˆω|≤ ˆωa
0 ˆωa<|ˆω|≤π(7.48a)
282 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
When multiplying the DTFTs to get the right-hand side of (7.48a), the product of the two
rectangles is another rectangle whose width is the smaller of ˆωbandˆωco, so the bandlimit
frequency ˆωais
ˆωa=min(ˆωb,ˆωco) (7.48b)
Since we want to determine the output signal y[n], we must take the inverse DTFT of
Y(ejˆω). Thus, using (7.13) to do the inverse transformation, the convolution in (7.46)
must evaluate to another sinc signal
y[n]=∞/summationdisplay
m=−∞/parenleftbiggsinˆωbm
πm/parenrightbigg/parenleftbiggsinˆωco(n−m)
π(n−m)/parenrightbigg
=sinˆωan
πn(7.49)
EXERCISE 7.8 The result given (7.48a) and (7.48b) is easily seen from a graphical solution that shows
the rectangular shapes of the DTFTs. With ˆωb=0.4πandˆωco=0.25π , sketch plots
ofX(ejˆω)from (7.47) and Hlp(ejˆω)in (7.43) on the same set of axes and then verify
the result in (7.48b).
We can generalize the result of Example 7-6 in several interesting ways. First, when
ˆωb>ˆωcowe can see that the output is the impulse response of the ideal LPF, so the input
(7.45) in a sense acts like an impulse to the ideal LPF. Furthermore, for ideal ﬁlters where
a band of frequencies is completely removed by the ﬁlter, many different inputs couldproduce the same output. Also, we can see that if the bandlimit ˆω
bof the input to an
ideal LPF is less than the cutoff frequency (i.e., ˆωb≤ˆωco), then the input signal passes
through the ﬁlter unchanged. Finally, if the input consists of a desired bandlimited signalplus some sort of competing signal such as noise whose spectrum extends over the entirerange|ˆω|≤π , then if the signal spectrum is concentrated in a band |ˆω|≤ ˆω
b, it follows
by the principle of superposition that an ideal LPF with cutoff frequency ˆωco=ˆωbpasses
the desired signal without modiﬁcation while removing all frequencies in the spectrumof the competing signal above the cutoff frequency. This is often the motivation for usinga LPF.
7-3.2 Ideal Highpass Filter
The ideal highpass ﬁlter (HPF) has its stopband centered on low frequencies, and its
passband extends from |ˆω|= ˆωcoout to |ˆω|=π . (The highest normalized frequency in
a sampled signal is, of course, π.)
Hhp(ejˆω)=/braceleftBigg
0|ˆω|≤ ˆωco
1ˆωco<|ˆω|≤π(7.50)
Figure 7-7 shows an ideal HPF with its cutoff frequency at ˆωcorad/s. In this case, the
high frequency components of a signal pass through the ﬁlter unchanged while the
7-3 IDEAL FILTERS 283
01HHP.ejO!/
– O!
Frequency .O!/O!co –O!coFigure 7-7 Frequency response of
an ideal HPF with cutoff at ˆωcorad.
low frequency components are completely eliminated. Highpass ﬁlters are often used
to remove constant levels (DC) from sampled signals. Like the ideal LPF, we shoulddeﬁne the ideal highpass ﬁlter with conjugate symmetry H
hp(e−jˆω)=H∗
hp(ejˆω)so that
the corresponding impulse response is a real function of time.
EXERCISE 7.9 IfHlp(ejˆω)is an ideal LPF with its cutoff frequency at ˆωcoas plotted in Fig. 7-5,
show that the frequency response of an ideal HPF with cutoff frequency ˆωcocan be
represented by
Hhp(ejˆω)=1−Hlp(ejˆω)
Hint: Make a plot of the function 1 −Hlp(ejˆω).
EXERCISE 7.10 Using the results of Exercise 7.9, show that the impulse response of the ideal HPF is
hhp[n]=δ [n]−sin(ˆωcon)
πn
7-3.3 Ideal Bandpass Filter
The ideal bandpass ﬁlter (BPF) has a passband centered away from the low-frequency
band, so it has two stopbands, one near ˆω=0 and the other at high frequencies. Two
cutoff frequencies must be given to specify the ideal BPF, ˆωco1for the lower cutoff, and
ˆωco2for the upper cutoff. Thus, the ideal BPF has frequency response
Hbp(ejˆω)=⎧
⎪⎨
⎪⎩0|ˆω|<ˆωco1
1ˆωco1≤|ˆω|≤ ˆωco2
0ˆωco2<|ˆω|≤π(7.51)
Figure 7-8 shows an ideal BPF with its cutoff frequencies at ˆωco1andˆωco2. Once again we
use a symmetrical deﬁnition of the passbands and stopbands which is required to make the
corresponding impulse response real. In this case, all complex exponential components
284 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
01HBP.ejO!/
– O!
Frequency .O!/O!co1–O!co1O!co2–O!co2 Figure 7-8 Frequency response of an ideal BPF
with its passband from ˆω=ˆωco1toˆω=ˆωco2rad.
of a signal that lie in the band ˆωco1≤|ˆω|≤ ˆωco2are passed unchanged through the ﬁlter,
while those at other frequencies are completely removed.
EXERCISE 7.11 IfHbp(ejˆω)is an ideal BPF with its cutoffs at ˆωco1andˆωco2, show by plotting that the
ﬁlter deﬁned by Hbr(ejˆω)=1−Hbp(ejˆω)could be called an ideal band-reject ﬁlter.
Determine the edges of the stopband of the band-reject ﬁlter.
7-4 Practical FIR Filters
Ideal ﬁlters are useful concepts, but not practical since they cannot be implemented with
a ﬁnite amount of computation. Therefore, we perform ﬁlter design to approximate an
ideal frequency response to get a practical ﬁlter. For FIR ﬁlters, a ﬁlter design methodmust produce ﬁlter coefﬁcients {b
k}for the time-domain implementation of the FIR ﬁlter
as a difference equation
y[n]=b 0x[n]+b 1x[n−1]+b 2x[n−2]+···+ bMx[n−M]
The ﬁlter coefﬁcients are the values of the impulse response, and the DTFT of the impulse
response determines the actual magnitude and phase of the designed frequency response,which can then be assessed to determine how closely it matches the desired ideal response.
There are many ways to approximate the ideal frequency response, but we concentrate
on the method of windowing which can be analyzed via the DTFT.
7-4.1 Windowing
The concept of windowing is widely used in signal processing. The basic idea is to extract
a ﬁnite section of a very long signal x[n]via multiplication w[n]x[n+n0]. This approach
works if the window function w[n]is zero outside of a ﬁnite-length interval. In ﬁlter
design the window truncates the inﬁnitely long ideal impulse response hi[n],8and then
modiﬁes the truncated impulse response. The simplest window function is the L-point
rectangular window which is the same as the rectangular pulse studied in Section 7-1.5.
wr[n]=r L[n]=/braceleftBigg
10≤n≤L−1
0 elsewhere(7.52)
8The subscript idenotes an ideal ﬁlter of the type discussed in Section 7-3.
7-4 PRACTICAL FIR FILTERS 285
Multiplying by a rectangular window only truncates a signal.
The important idea of windowing is that the product wr[n]h i[n+n0]extracts Lvalues
from the signal hi[n]starting at n=n0. For the rectangular window, we obtain
wr[n]h i[n+n0]=⎧
⎪⎪⎨
⎪⎪⎩0 n<0
   1
wr[n]h i[n+n0]0≤n≤L−1
0 n≥L(7.53)
The name window comes from the idea that we can only “see” Lvalues of the signal
hi[n+n0]within the window interval when we “look” through the window. Multiplying
byw[n]is looking through the window. When we change n0, the signal shifts, and we
see a different length-L section of the signal.
The nonzero values of the window function do not have to be all ones, but they should
be positive. For example, the symmetric L-point Hamming window9is deﬁned as
wm[n]=/braceleftBigg
0.54−0.46 cos(2 πn/(L −1)) 0≤n≤L−1
0 elsewhere(7.54)
The MATLAB function hamming(L) computes a vector with values given by (7.54).
The stem plot of the Hamming window in Fig. 7-9 shows that the values are larger in
the middle and taper off near the ends. The window length can be even or odd, but an
odd-length Hamming window is easier to characterize. Its maximum value is 1.0 whichoccurs at the midpoint index location n=(L−1)/2, and the window is symmetric about
the midpoint, with even symmetry because w
m[n]=w m[L−1−n].
7-4.2 Filter Design
Ideal Filters are deﬁned by their frequency responses, consisting of perfect passbands
and stopbands. An ideal ﬁlter cannot be an FIR ﬁlter because there is no ﬁnite set of ﬁltercoefﬁcients whose DTFT is equal to the ideal frequency response. Recall from Fig. 7-1that the impulse response of the ideal LPF is an inﬁnitely long sinc function as shown bythe following DTFT pair:
h
i[n]=sin(ˆωcon)
πnDTFT←→ Hi(ejˆω)=/braceleftBigg
1|ˆω|≤ ˆωco
0ˆωco<|ˆω|≤π(7.55)
0 5 10 15 20 2501
TimeIndex.n/wmŒn/c1411
2
Figure 7-9 Length-25 Hamming window is
nonzero only for n=0,1,...,24.
9This window is named for Richard Hamming who found that improved frequency-domain characteristics
result from slight adjustments in the 0.5 coefﬁcients of the Hann window (8.49) discussed in Chapter 8.
286 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
where ˆωcois the cutoff frequency of the ideal LPF, which separates the passband from the
stopband. The sinc function is inﬁnitely long.
7-4.2.1 Window the Ideal Impulse Response
In order to make a practical FIR ﬁlter, we can multiply the sinc function by a window to
produce a length-L impulse response. However, we must also shift the sinc function so
that its main lobe is in the center of the window, because intuitively we should use thelargest values from the ideal impulse response. From the shifting property of the DTFT,the time shift of (L−1)/2 introduces a linear phase in the DTFT. Thus, the impulse
response obtained from windowing is
h[n]=w [n]h
i[n−(L−1)/2]
=⎧
⎨
⎩w[n]sin(ˆωco(n−(L−1)/2))
π(n−(L−1)/2)n=0,1,...,L −1
0 elsewhere(7.56)
where w[n]is the window, either rectangular or Hamming.10Since the nonzero domain
of the window starts at n=0, the resulting FIR ﬁlter is causal. We usually say that the
practical FIR ﬁlter has an impulse response that is a windowed version of the ideal impulse
response.
The windowing operation is shown in Fig. 7-10(a) for the rectangular window
which truncates the ideal impulse response to length L=25. In Fig. 7-10(b), the
Hamming-windowed impulse response hm[n]results from truncating the ideal impulse
response, and also weighting the values to reduce the ends more than the middle.
The midpoint value is preserved (i.e., hm[12]= ˆωco/π) while the ﬁrst and last points
are 8% of their original values (e.g., hm[0]=0.08h i[0]). A continuous outline of
the Hamming window is drawn in (a) to show the weighting that is applied to the
truncated ideal impulse response. The beneﬁt of using the Hamming window comesfrom the fact that it smoothly tapers the ends of the truncated ideal lowpass impulseresponse.
7-4.2.2 Frequency Response of Practical Filters
Apractical ﬁlter is a causal length-L ﬁlter whose frequency response closely
approximates the desired frequency response of an ideal ﬁlter. Although it ispossible to take the DTFT of a windowed sinc, the resulting formula is quitecomplicated and does not offer much insight into the quality of the frequency-domain approximation. Instead, we can evaluate the frequency reponse directly usingMATLAB’s
freqz function because we have a simple formula for the windowed ﬁlter
coefﬁcients.
10We only consider rectangular and Hamming windows here, but there are many other window functions,
and each of them results in ﬁlters with different frequency response characteristics.
7-4 PRACTICAL FIR FILTERS 287
01 0 15 25
15 2552 0
52 0(a)
01 0
(b)Time Index .n/nn
O!coO!cohrŒn
hmŒnFigure 7-10 Impulse responses for two LPFs.
(a) Length-25 LPF with rectangular window
(i.e., truncated sinc function). (b) Length-25LPF using 25-point Hamming windowmultiplying a sinc function. The shape of theHamming window is shown in (a) because ittruncates and multiplies the sinc functionshown in (a) to give the plot in (b).
Figure 7-11(a) shows the magnitude response for an FIR ﬁlter whose impulse response
is a length-25 truncated ideal impulse response with ˆωco=0.4π. The passband of the
actual ﬁlter is not ﬂat but it oscillates above and below the desired passband value of one;
the same behavior is exhibited in the stopband. These passband and stopband ripples
are usually observed for practical FIR ﬁlters that approximate ideal LPFs, and they areparticularly noticeable with the rectangular window.
1
1
1
21
2
0:4/EM0:4/EM
/EM/EM
–0:4/EM–0:4/EM
–/EM–/EM
00
00
(a)
(b)jH r.ejO!/j jH m.ejO!/j
Frequenc y.O!/Figure 7-11 Frequency response magnitudes for
LPFs whose impulse responses are shown in
Fig. 7-10. (a) Length-25 LPF whose impulseresponse is a truncated sinc function obtainedwith a rectangular window. (b) Length-25 LPFwhose impulse response is the product of a25-point Hamming window and a sinc function.
The ideal LPF with ˆω
co=0.4πis shown in gray.
The phase response of both of these ﬁlters is a
linear phase with slope −(L−1)/2=−12.
288 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
Figure 7-11(b) shows the magnitude response for an FIR ﬁlter whose impulse response
is a length-25 Hamming-windowed sinc. In this case, the ripples are not visible on the
magnitude plot because the scale is linear and the ripples are tiny, less than 0.0033. Interms of approximating the value of one in the passband and zero in the stopband, theHamming-windowed ideal LPF is much better. However, this improved approximationcomes at a cost—the edge of the passband near the cutoff frequency has a much lowerslope. In ﬁlter design, we usually say it “falls off more slowly” from the passband to thestopband. Before we can answer the question of which ﬁlter is better, we must decidewhether ripples are more important than the fall off rate from passband to stopband, orvice versa.
7-4.2.3 Passband Deﬁned for the Frequency Response
Frequency-selective digital ﬁlters (e.g., LPFs, BPFs, and HPFs) have a magnituderesponse that is close to one in some frequency regions, and close to zero in others. Forexample, the plot in Fig. 7-12(a) is an LPF whose magnitude response is within(approximately) ±10% of one when 0 ≤ˆω< 0.364π. This region where the magnitude
is close to one is called the passband of the ﬁlter. It is useful to have a precise deﬁnition
of the passband edges, so that the passband width can be measured and we can comparedifferent ﬁlters.
From a plot of the magnitude response (e.g., via
freqz in MATLAB) it is possible
to determine the set of frequencies where the magnitude is very close to one, as deﬁnedby/vextendsingle/vextendsingle|H(e
jˆω)|−1/vextendsingle/vextendsinglebeing less than δ
p, which is called the passband ripple. A common
design choice for the desired passband ripple is a value between 0.01 and 0.1 (i.e., 1%
to 10%). For a LPF, the passband region extends from ˆω=0t oˆωp, where the parameter
ˆωpis called the passband edge.
1
1
1
21
2
00
00
(a)
(b)jHr.ejO!/j jHm.ejO!/j
Frequency .O!/Figure 7-12 Magnitude response within an LPF
template showing passband and stopband ripple
tolerances along with the transition zone. (a)Length-25 LPF H
r(ejˆω)with rectangular window
(i.e., truncated sinc). (b) Length-25 LPF Hm(ejˆω)
using 25-point Hamming window. Only the positivehalf of the frequency axis is shown, because themagnitude response is an even function wheneverthe impulse response is real.
7-4 PRACTICAL FIR FILTERS 289
For the two LPFs shown in Fig. 7-12, we can make an accurate measurement of
δpandˆωpfrom the zoomed plots in Fig. 7-13. For the rectangular window case, a
careful measurement gives a maximum passband ripple size of δp=0.104, with the
passband edge at ˆωp=0.364π. For the Hamming window case, we need the zoomed
plot of the passband region to see the ripples, as in Fig. 7-13(b). Then we can measure
the passband ripple to be δp=0.003 for the Hamming window case—more than
30 times smaller. Once we settle on the passband ripple height, we can measure thepassband edge—in Fig. 7-12(b) it is ˆω
p=0.2596π . Notice that the actual passband
edges are not equal to the design parameter ˆωcowhich is called the cutoff frequency.
There is sometimes a confusion when the terminology “passband cutoff frequency”
is used to mean passband edge, which then implies that ˆωcoandˆωpmight be the
same, but after doing a few examples it should become clear that this is never thecase.
7-4.2.4 Stopband Deﬁned for the Frequency Response
When the frequency response (magnitude) of the digital ﬁlter is close to zero, we have
thestopband region of the ﬁlter. The stopband is a region of the form ˆωs≤ˆω≤π,i ft h e
magnitude response of a LPF is plotted only for nonnegative frequencies. The parameter
ˆωsis called the stopband edge. In the rectangular window LPF example of Figs. 7-12(a)
and 7-13(a), the magnitude response is close to zero when 0 .438π ≤ˆω≤π(i.e., high
frequencies). The stopband ripple for this region is expected to be less than 0.1, and ismeasured to be δ
s=0.077. For the rectangular windowed sinc, the stopband edge is
ˆωs=0.4383π .
000:100:1
0:00400:004(a)
(b)jEr.ejO!/j jEm.ejO!/j
Frequency .O!/Figure 7-13 Blowup of the error between the
actual magnitude response and the ideal,
E(ejˆω)=|H(ejˆω)|− |H i(ejˆω)|, which shows the
passband and stopband ripples. (a) Length-25LPFH
r(ejˆω)with rectangular window (i.e.,
truncated ideal lowpass impulse response).(b) Length-25 LPF H
m(ejˆω)using 25-point
Hamming window. The ripples for the Hammingcase are more than 30 times smaller.
290 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
We can repeat this process for the Hamming window LPF using Figs. 7-12(b) and
7-13(b) to determine the stopband ripple δs, and then the set of frequencies where the
magnitude is less than δs. The result is a stopband ripple measurement of 0.0033, and a
corresponding stopband edge of ˆωs=0.5361π .
7-4.2.5 Transition Zone of the LPF
Unlike an ideal LPF where the stopband begins at the same frequency where the
passband ends, in a practical ﬁlter there is always a nonzero difference betweenthe passband edge and the stopband edge. This difference is called the transition
width of the ﬁlter: /Delta1ˆω=ˆω
s−ˆωp. The smaller the transition width, the better
the ﬁlter because it is closer to the ideal ﬁlter which has a transition width of
zero.
For the LPFs in Fig. 7-12, the measured transition width of the rectangular windowed
sinc is
/Delta1ˆωr=ˆωs−ˆωp=0.4383π −0.3646π =0.0737π (7.57a)
while the Hamming windowed sinc has a much wider transition width—almost four timeswider
/Delta1ˆω
m=ˆωs−ˆωp=0.5361π −0.2596π =0.2765π (7.57b)
EXAMPLE 7-7 Transition Width versus Filter Order
One property of the transition width is that it can be controlled by changing the ﬁlter order.
There is an approximate inverse relationship, so doubling the order reduces the transition
width by roughly one half. We can test this idea on the length-25 rectangular windowLPF in Fig. 7-12(b) which has an order equal to 24. If we design a new LPF that hasthe same cutoff frequency, ˆω
co=0.4π, but twice the order (i.e., M=48), then we can
repeat the measurement of the bandedges ˆωp,ˆωs, and the transition width /Delta1ˆω.
Filter Order: M ˆωp ˆωs /Delta1ˆω
Rect 24 0.3646π 0.4383π 0.0737π
Rect 48 0.3824π0.4192π0.0368π
Rect 96 0.3909π 0.4100π0.0191π
Hamming 24 0.2596π 0.5361π 0.2765π
Hamming 48 0.3308π 0.4687π 0.1379π
Hamming 96 0.3660π0.4340π0.0680π
7-4 PRACTICAL FIR FILTERS 291
Comparing the values of /Delta1ˆω, the ratio is (0.0737π)/(0 .0368π) =2.003. Doubling
the order once more to M=96 gives a transition width of 0 .0191π , so the ratio
is(0.0737π)/(0 .0191π) =3.86≈4. For the Hamming window case, the measured
transition width for M=48 is/Delta1ˆω=0.1379π , and for M=96,/Delta1ˆω=0.0680π. The
ratios of 0 .2765π to 0.1379π and 0.0680πare 2.005 and 4 .066 which matches the
approximate inverse relationship expected.
When comparing the transition widths in (7.57a) and (7.57b), we see that /Delta1ˆωm=
3.75/Delta1 ˆωr, so the transition width of the Hamming window LPF is almost four times
larger for L=25. This empirical observation conﬁrms the statement, “when comparing
equal-order FIR ﬁlters that approximate a LPF, the one with larger transition width has
smaller ripples.” However, this statement does not mean that the ripples can be reducedmerely by widening the transition width. Within one window type, such as Hammingwindow ﬁlters, changing the transition width does not change the ripples by more than afew percent.LAB
FIR Filter Design
7-4.2.6 Summary of Filter Speciﬁcations
The foregoing discussion of ripples, bandedges, and transition width can be
summarized with the tolerance scheme shown in Fig. 7-12. The ﬁlter designprocess is to approximate the ideal frequency response very closely. Once wespecify the desired ripples and bandedges, we can draw a template around theideal frequency response. The template should, in effect, give the trade-off betweenripple size and transition width. Then an acceptable ﬁlter design would be any FIRﬁlter whose magnitude response lies entirely within the template. The Hammingwindow method is just one possible design method among many that have beendeveloped.
DEMO
Filter Design GUI7-4.3 GUI for Filter Design
The DSP-First GUI called filterdesign illustrates several ﬁlter design methods
for LPF, BPF, and HPF ﬁlters. The interface is shown in Fig. 7-14. Both FIRand IIR ﬁlters can be designed, but we are presently interested in the FIR casewhich is selected with the
FIR button in the upper right. The default design
method is the Window Method using a Hamming window. The window type can
be changed by selecting another window type from the drop-down list in the lowerright. To specify the design it is necessary to set the order of the FIR ﬁlter andchoose one or more cutoff frequencies; these parameters can be entered in the editboxes.
The plot initially shows the frequency response magnitude on a linear scale, with
a frequency axis in Hz. Clicking on the word
Magnitude toggles the magnitude scale
to a log scale in dB. Clicking on the word Frequency toggles the frequency axis to
normalized frequency ˆω, and also lets you enter the cutoff frequency using ˆωcoin rad.
292 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
Figure 7-14 Interface for the filterdesign GUI. When the ﬁlter choice is set to FIR, many
different window types can be selected, including the Hamming window and the rectangular
window (i.e., only truncation to a ﬁnite length). The speciﬁcation of one or more cutofffrequencies (f
co)must be entered using continuous-time frequency (in Hz), along with a
sampling rate (f s, also in Hz). In normalized frequency, the cutoff frequency is
ˆωco=2π(f co/fs).
Recall that ˆωco=2π(f co/fs). The plotting region can also show the phase response of
H(ejˆω), or the impulse response of the ﬁlter h[n]. Right click on the plot region to get
a menu. The Options menu provides zooming and a grid via Options->Zoom and
Options->Grid .
The ﬁlter coefﬁcients can be “exported” from the GUI by using the menu
File->Export Coeffs . To make some ﬁlters for comparison, redo the designs
in Fig. 7-12 and export the ﬁlter coefﬁcients to the workspace under unique
names. Then you can make your own plot of the frequency response in MATLABusing the
freekz function (or freqz ) followed by a plot command. For
example, an interesting activity would be to zoom in on the magnitude responseplots as in Fig. 7-13 to check the measurements of ripples and transitionwidth.
7-5 Table of Fourier Transform Properties and Pairs
Table 7-1 on p. 293 includes all the Fourier transform pairs that we have derived in
this chapter as well as one pair (the left-sided exponential) that we did not derive. Inaddition, the basic properties of the Fourier transform, which make the DTFT convenient
7-6 SUMMARY AND LINKS 293
to use in designing and analyzing systems, are given in Table 7-2 on p. 294 for easy
reference.
7-6 Summary and Links
In this chapter, we introduced the DTFT, and developed some of its basic propertiesfor understanding the behavior of linear systems. The DTFT provides a frequency-domain representation for signals as well as systems, and like other Fourier transformsit generalizes the idea of a spectrum for a discrete-time signal. We obtained theDTFT by generalizing the concept of the frequency response, and showed howthe inverse transform could be used to obtain the impulse response of variousideal ﬁlters. Therefore, it is not surprising that the DTFT plays an importantrole in practical ﬁlter design for methods based on rectangular and Hammingwindowing.
DEMO
Visual DTFT PairsTable 7-1 Basic discrete-time Fourier transform pairs.
Table of DTFT Pairs
Time-Domain: x[n] Frequency-Domain: X(ejˆω)
δ[n] 1
δ[n−nd] e−jˆωnd
rL[n]=u[n]−u[n −L]sin(1
2Lˆω)
sin(1
2ˆω)e−jˆω(L−1)/2
rL[n]ejˆω0nsin(1
2L(ˆω−ˆωo))
sin(1
2(ˆω−ˆωo))e−j(ˆω−ˆωo)(L−1)/2
sin(ˆωbn)
πn/braceleftBigg
1|ˆω|≤ ˆωb
0ˆωb<|ˆω|≤π
anu[n] (|a|<1)1
1−ae−jˆω
−bnu[−n−1](|b|>1)1
1−be−jˆω
294 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
Table 7-2 Basic discrete-time Fourier transform properties.
Table of DTFT Properties
Property Name Time-Domain: x[n] Frequency-Domain: X(ejˆω)
Periodic in ˆω X(ej(ˆω+2π))=X(ejˆω)
Linearity ax1[n]+bx 2[n] aX 1(ejˆω)+bX2(ejˆω)
Conjugate Symmetry x[n]is real X(e−jˆω)=X∗(ejˆω)
Conjugation x∗[n] X∗(e−jˆω)
Time-Reversal x[−n] X(e−jˆω)
Delay x[n−nd] e−jˆωndX(ejˆω)
Frequency Shift x[n]ejˆω0nX(ej(ˆω−ˆω0))
Modulation x[n]cos(ˆω0n)1
2X(ej(ˆω−ˆω0))+1
2X(ej(ˆω+ˆω0))
Convolution x[n]∗h[n] X(ejˆω)H(ejˆω)
Autocorrelation x[−n]∗x [n] |X(ejˆω)|2
Parseval’s Theorem∞/summationdisplay
n=−∞|x[n]|2=1
2ππ/integraldisplay
−π|X(ejˆω)|2dˆω
7-7 Problems
The problems in this section address the major concepts of this chapter. On the Companion
Website there are many related homework problems which can be used for review and
practice. Most of them have detailed solutions.
NOTE
Problems with SolutionsP-7.1 Determine the DTFT of each of the following sequences:
(a)x1[n]=3δ [n−4]DTFT
←− −→X1(ejˆω)=3e−jˆω4
(b)x2[n]=5δ [n−7]−δ [n−2]+5δ [n+7]DTFT
←− −→X2(ejˆω)=5ejˆω7−ejˆω2+5ejˆω7
7-7 PROBLEMS 295
(c)x3[n]=3u[n −2]−3u[n −7]=/braceleftbigg32 ≤n≤6
0 otherwise.
(d)x4[n]=sin(0.6πn)
7πnDTFT
←− −→X4(ejˆω)=/braceleftbigg1
7ˆω< 0.6π
00.6π< ˆω<π
P-7.2 Determine the inverse DTFT of each of the following transforms:
(a)Y1(ejˆω)=πDTFT
←− −→y1[n]=πδ [n]
(b)Y2(ejˆω)=3e−j4ˆωDTFT
←− −→y2[n]=3δ [n−4]
(c)Y3(ejˆω)=5jsin(4ˆω)=5
2ej4ˆω−5
2e−j4ˆωDTFT
←− −→y3[n]=5
2δ[n+4]−5
2δ[n−4]
(d)Y4(ejˆω)=3 cos(5 ˆω)=3
2ej5ˆω+3
2e−j5ˆωDTFT
←− −→3
2δ[n+5]+3
2δ[n−5]
P-7.3 Determine the inverse or forward DTFT as appropriate:
(a)v1[n]=⎧
⎪⎨
⎪⎩0n<0
1n=0,1,...,5
0n>5
(b)V2(ejˆω)=/braceleftBigg
1|ˆω|≤0.4π
00.4π<|ˆω|≤π
(c)v3[n]=⎧
⎪⎨
⎪⎩0 n<0
(−1)nn=0,1,...,5
0 n>5
(d)V4/parenleftBig
ejˆω/parenrightBig
=/braceleftbigg0|ˆω|≤0.4π
10.4π<|ˆω|≤π
P-7.4 Determine the DTFT of each of the following sequences:
(a)h1[n]=4 δ[n]−sin(0.16πn)
0.25πn
(b)h2[n]=sin(0.5πn)
0.1πn−sin(0.2πn)
0.1πn
(c)h3[n]=sin(0.5π(n −6))
π(n−6)−sin(0.2π(n−6))
π(n−6)
P-7.5 Consider a linear time-invariant system deﬁned by the difference equation
y[n]=5x [n−1]+5x [n−2]+5x [n−3]+5x [n−4]+5x [n−5]=5/summationdisplay
k=15x[n−k]
296 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
The frequency response of this system can be expressed in the following “Dirichlet-like”
equation:
H(ejˆω)=α/parenleftbiggsin(Lˆω/2)
sin(ˆω/2)/parenrightbigg
e−jβˆω
Determine the parameters L,α,β.
P-7.6 The DTFT must be periodic with a period equal to 2 π, so it is sufﬁcient to deﬁne
the DTFT for −π≤ˆω<π . For each of the following ideal ﬁlters, determine the inverse
transform of the given DTFT:
(a)G1(ejˆω)=/braceleftBigg
5e−j0.3ˆω0≤|ˆω|≤0.4π
00 .4π<|ˆω|≤π
(b)G2(ejˆω)=/braceleftBigg
00 ≤|ˆω|≤0.7π
4e−j0.1ˆω0.7π< |ˆω|≤π
(c)G3(ejˆω)=⎧
⎪⎨
⎪⎩00 ≤|ˆω|≤0.4π
9e−j0.2ˆω0.4π<|ˆω|≤0.7π
00 .7π< |ˆω|≤π
P-7.7 The convolution property of the DTFT can simplify difﬁcult operations that arise
in LTI ﬁltering. Simplify the following:
(a)x1[n]=sin(0.25πn)
9πn∗sin(0.44πn)
4πn
(b)x2[n]=sin(0.25πn)
9πn∗sin(0.25πn)
8πn∗sin(0.25πn)
7πn
(c)x3[n]=(0 .3)nu[n]∗(10 δ[n−2]−3δ [n−3])
P-7.8 The frequency response of an LTI system is H(ejˆω)=cos(3ˆω). Determine the
output of the system for each of the following input signals:
(a)x1[n]=δ [n−3]
(b)x2[n]=3 cos(0 .25πn)
(c)x3[n]=u[n]−u[n −9]
P-7.9 An example of the frequency-shifting property comes from modeling the response
of a physical system as an oscillating signal whose amplitude is dropping. The precise
form is an exponential times a sinusoid, x[n]=ancos(ˆω0n)u[n].
7-7 PROBLEMS 297
(a) Use the inverse Euler formula to show that we can express x[n]as
x[n]=1
2ejˆω0nanu[n]+1
2e−jˆω0nanu[n]
(b) By using the DTFT pair in (7.6), applying the frequency-shift property (7.25) twice,
and ﬁnding a common denominator for the resulting two fractions, show that we
can write X(ejˆω)as
X(ejˆω)=1−acos(ˆω0)e−jˆω
(1−aejˆω0e−jˆω)(1−ae−jˆω0e−jˆω)=1−acos(ˆω0)e−jˆω
1−2acos(ˆω0)e−jˆω+a2e−jˆω2
P-7.10 For the signal v[n]=anu[n], the DTFT V( ejˆω)can be found in Table 7-1. For
the questions below, assume a=0.95.
(a) Make a plot of |V( ejˆω)|2for−π< ˆω≤π.
(b) If V( ejˆω)were a frequency response, is the ﬁlter lowpass, highpass, or bandpass?
(c) Deﬁne w[n]=v [n]cos(0.3πn) , and then make a plot of |W(ejˆω)|2for−π<
ˆω≤π.
(d) If W(ejˆω)were a frequency response, is the ﬁlter lowpass, highpass, or
bandpass?
P-7.11 Suppose that Hlp(ejˆω)is an ideal LPF with its bandedge at ˆωcoas in Fig. 7-5.
(a) Show that the frequency response of an ideal HPF with cutoff frequency ˆωcocan
be represented by
Hhp(ejˆω)=1−Hlp(ejˆω)
(b) Determine the cutoff frequency of the ideal HPF.
(c) Use the result of part (a) to determine an expression for the impulse response hhp[n]
of the HPF.
P-7.12 Suppose that Hbp(ejˆω)is an ideal BPF with its bandedges at ˆωco1andˆωco2as in
(7.51) and as plotted in Fig. 7-8.
(a) Show that the frequency response of an ideal BPF with cutoff frequencies ˆωco1=
0.3πandˆωco2=0.6πcan be represented as the difference of two ideal LPFs
as in
Hbp(ejˆω)=Hlp1(ejˆω)−Hlp2(ejˆω)
In particular, give the cutoff frequencies of the two LPFs, Hlp1(ejˆω)andHlp2(ejˆω).
(b) Use the result of part (a) to determine an expression for the impulse response hbp[n]
of the BPF.
298 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
P-7.13 Consider the left-sided exponential sequence deﬁned by
x[n]=− bnu[−n−1]
(a) Sketch x[n]for the case b=2.
(b) For what values of bdoes the DTFT of x[n]exist?
(c) Show that for the values of bfound in part (b), the DTFT of x[n]is
X(ejˆω)=1
1−be−jˆω
P-7.14 Use Parseval’s Theorem and the DTFT to evaluate:
(a)∞/summationdisplay
n=−∞/vextendsingle/vextendsingle/vextendsingle/vextendsinglesin(0.25πn)
3πn/vextendsingle/vextendsingle/vextendsingle/vextendsingle2
(b) 4π/integraldisplay
−π/vextendsingle/vextendsingle/vextendsingle/vextendsinglesin(5ˆω)
sin(ˆω/2)e−j(9/2)ˆω/vextendsingle/vextendsingle/vextendsingle/vextendsingle2
dˆω
P-7.15 Use the DTFT or discrete-time convolution to determine the autocorrelation
function for each of the following signals:
(a)x1[n]=δ [n−4]
(b)x2[n]=δ [n−4]−δ[n−6]
(c)x3[n]=u[n −6]−u[n −16]
(d)x4[n]=sin(0.25πn)
9πn
P-7.16 Consider the signal x[n]=u[n]−u[n −5]
(a) Determine cxx[n], the autocorrelation function (acf) of this signal.
(b) Determine the DTFT of the acf; verify that it is purely real and nonnegative.
(c) Determine the acf of the signal y[n]=x [n−2].
Hints: Since the peak value of an acf must always be at zero lag, consider the
possibility that cyy[n]might be the same as cxx[n]. Working with the DTFT of the
acf might be easier.
P-7.17 Use thefilterdesign GUI to create the impulse response of an FIR HPF with
the following speciﬁcations: ﬁlter order M=32, cutoff frequency ˆωco=0.6π, Hamming
window design method.DEMO
Filter Design GUI
7-7 PROBLEMS 299
(a) Make a plot of the frequency response magnitude; and also two “zoomed in” plots
to show details of the passband and stopband magnitudes as in Fig. 7-13.
(b) From the plots in the previous part measure the passband and stopband edges, as
well as the passband and stopband ripples (i.e., the parameters ˆωp,ˆωs,δp, andδs).
(c) If the ﬁlter order were changed to M=80, estimate the change in the passband
and stopband edges. Note: the ripples should not change much.
(d) Design the order-80 ﬁlter and measure the new passband and stopband edges.
Comment on the accuracy of the estimate in the previous part.
P-7.18 Use thefilterdesign GUI to create the impulse response of an FIR HPF
with the Hamming window method. Use the following speciﬁcations: ﬁlter order M=24,
cutoff frequency ˆωco=0.6π. The questions below deal with ﬁltering speciﬁc input signals
and determining the corresponding output signals.
(a) When the input x1[n]is DC with a DC level of 10, determine the output level.
(b) When the input is the sinusoid x2[n]=10 cos(0 .5πn) with zero phase, determine
the output in the standard form y2[n]=A 2cos(ˆωn+ϕ2).
(c) When the input is the sinusoid x3[n]=10 cos(0 .75πn) with zero phase, determine
the output in the standard form y3[n]=A 3cos(ˆωn+ϕ3).
P-7.19 Use thefilterdesign GUI to create the impulse response of an FIR LPF with
the rectangular window method. Use the following speciﬁcations: ﬁlter order M=37,
cutoff frequency ˆωco=0.3π. The questions below deal with ﬁltering speciﬁc input signals
and determining the corresponding output signals.
(a) When the input x1[n]is DC with a DC level of 10, determine the output level y1[n].
(b) When the input is the sinusoid x2[n]=10 cos(0 .5πn) with zero phase, determine
the output in the standard form y2[n]=A 2cos(ˆωn+ϕ2).
(c) Use MATLAB to verify the outputs in the previous parts. Generate 100 values of
the signal s[n]=x 1[n]+x 2[n]=10 u[n]+10 cos(0 .5πn)u[n] in a vector snand
ﬁlter the signal snwith MATLAB’s filter command to obtain snOutput . Plot
snOutput forn=0:99 . For comparison plot y1[n]+y 2[n]from parts (a) and (b)
over the same range.
Note: since the MATLAB-ﬁltered signal starts at n=0, there is a transient interval
at beginning of the output where the two plots differ, but after n=37 the match
should be perfect. Thus, it might be helpful to subtract the two signals beingcompared, and plot the difference in order to accentuate the transient region.
P-7.20 Use the
filterdesign GUI to create the impulse response of an FIR HPF with
the Hamming window method. Use the following speciﬁcations: ﬁlter order M=32,
300 CHAPTER 7 DISCRETE-TIME FOURIER TRANSFORM
cutoff frequency ˆωco=0.6π. The following questions deal with ﬁltering speciﬁc input
signals and determining the corresponding output signals. You can solve the following
using thefilterdesign GUI. Note that by placing the cursor on the frequency response
curve, you can read out the frequency and magnitude of the point on the curve.
(a) Suppose the input sinusoid has unknown frequency and zero phase x[n]=
9 cos( ˆωn). Use the filterdesign GUI to determine the lowest frequency ˆω
where the output has amplitude equal to 9 (i.e., y[n]=9 cos( ˆωn+ϕ)). For the
chosen frequency, use the filterdesign GUI to determine the phase ϕ.
(b) Determine all possible frequencies where the output is y[n]=9 cos( ˆωn+ϕ)when
the input is x[n]=9 cos( ˆωn).
(c) Determine all possible frequencies where the output is zero when the input is
x[n]=9 cos( ˆωn).Hint: Look for jumps of πradians in the phase curve.
Note: recall that the ﬁlter coefﬁcients can be exported to the MATLAB workspace fromthe
filterdesign GUI. Then freqz could be used to plot the frequency response in
a ﬁgure window where the zoom tool could be used to examine details of the magnituderesponse.
CHAPTER
8
Discrete Fourier
Transform
This chapter builds on the deﬁnition and discussion of the DTFT in Chapter 7. The
objective here is to deﬁne a numerical Fourier transform called the discrete Fourier
transform (or DFT) that results from taking frequency samples of the DTFT. We show
how the DFT can be used to compute a spectrum representation of any ﬁnite-length
sampled signal very efﬁciently with the fast Fourier transform (FFT) algorithm. The DFTnot only gives a spectrum representation of any ﬁnite-length sequence, but it can alsobe used as a representation of a periodic sequence formed by inﬁnite repetition of one(ﬁnite-length) period. Finally, the DFT is the core computation needed in the spectrogramwhich provides a time-frequency spectrum analysis of a very long signal by doing DFTs
of successive short sections extracted from the long signal.
It is safe to say that spectrum analysis is one of the most common operations used in
the practice of signal processing. Sooner or later, most scientists and engineers encountera situation where a “sampled data signal” has been obtained from an A-to-D converterand must be analyzed to determine its spectral properties. Often, spectrum analysis isused to discover whether or not the signal contains strong periodic components. A listing
301
302 CHAPTER 8 DISCRETE FOURIER TRANSFORM
of natural phenomena that are cyclic, or nearly so, would contain hundreds of entries.
Common examples include speech and music signals, as well as other natural observationssuch as tides and yearly sun spot cycles. In the case of sampled signals, the question ofinterest is how to derive the spectrum by doing numerical operations on a signal that isdeﬁned only by a ﬁnite set of numbers. This process of going from the sampled signalto its spectrum is called discrete-time spectrum analysis and the DFT is its workhorse
operator.
8-1 Discrete Fourier Transform (DFT)
The DTFT of a discrete-time signal x[n]can be viewed as a generalization of the spectrum
concept introduced in Chapters 3 and 4, where discrete lines in the frequency domain
represented sums of complex exponentials in the time domain. The spectrum conceptobtained from the DTFT is a continuous function of frequency denoted X(e
jˆω), and its
value as a Fourier transform is easiest to appreciate when x[n]andX(ejˆω)are deﬁned
as mathematical expressions. Because the spectrum is so useful, however, it is natural towant to be able to determine the spectrum of a signal even if x[n]is not described by
a simple mathematical formula. Indeed, it would be handy to have a computer programthat could calculate the spectrum from samples of a signal.
Two steps are needed to change the DTFT sum (7.2) into a computable form: the
continuous frequency variable ˆωmust be sampled, and the limits on the DTFT sum
must be ﬁnite. First, even though ˆωis a continuous variable, it does have a ﬁnite range
−π≤ˆω<π so we can evaluate (7.2) at a ﬁnite set of frequencies, denoted by ˆω
k.
Second, the DTFT sum has a ﬁnite number of terms when the signal duration is ﬁnite. Wecannot compute the transform of an inﬁnite-duration signal, but it is common to operateon ﬁnite sections of a very long signal.
For a ﬁnite-duration signal, the DTFT sampled at frequencies ˆω
kis
X(ejˆωk)=L−1/summationdisplay
n=0x[n]e−jˆωknk=0,1,...N −1 (8.1)
where Lis the length of x[n]. We must choose a speciﬁc set of frequency samples {ˆωk},b u t
which frequencies should be used to evaluate (8.1)? The usual domain for the spectrum is−π≤ˆω<π , but any interval of length 2 πwould sufﬁce. For reasons that will become
apparent, it is common to choose that interval to be
0≤ˆω
k<2π
and to evaluate (8.1) at the Nequally spaced frequencies
ˆωk=2πk
Nk=0,1,...,N −1 (8.2)
Note that this set of Nfrequencies covers the range 0 ≤ˆω< 2πsincek=Nwould give
ˆωN=2π, which is an alias frequency of ˆω0=0. Substituting (8.2) into (8.1) gives N
frequency samples of the DTFT
8-1 DISCRETE FOURIER TRANSFORM (DFT) 303
X/parenleftBig
ej2πk
N/parenrightBig
=L−1/summationdisplay
n=0x[n]e−j(2πk/N)n(8.3)
fork=0,1,...,N −1. Equation (8.3) is a “ﬁnite Fourier sum” which is computable.
The sum in (8.3) must be computed for Ndifferent values of the discrete frequency index
k. The index nin the sum on the right is the counting index of the sum, and thus it
disappears when the sum is computed. Since the left-hand side of (8.3) depends only on
the frequency index k, we deﬁne X[k]=X/parenleftBig
ej2πk
N/parenrightBig
.
When the number of frequency samples Nis equal to the signal length L, the
summation in (8.3) with N=Lbecomes:
The Discrete Fourier Transform
X[k]=N−1/summationdisplay
n=0x[n]e−j(2π/N)kn
k=0,1,...,N −1(8.4)
Equation (8.4) is called the discrete Fourier transform orDFT in recognition of the fact
that it is a Fourier transformation, and it is discrete in both time and frequency.1The
DFT takes Nsamples in the time-domain and transforms them into Nvalues X[k]in the
frequency domain. Typically, the values of X[k]are complex, while the values of x[n]
are often real, but x[n]in (8.4) could be complex.
EXAMPLE 8-1 Short-Length DFT
In order to compute the 4-point DFT of the sequence x[n]={ 1,1,0,0}, we carry out
the sum (8.4) four times, once for each value of k=0,1,2,3. When N=4, all the
exponents in (8.4) are integer multiples of π/2 because 2 π/N=π/2.
X[0]= >1
x[0]e−j0+ >1
x[1]e−j0+ >0
x[2]e−j0+ >0
x[3]e−j0
=1+1+0+0=2
X[1]=1e−j0+1e−jπ/ 2+0e−jπ+0e−j3π/2
=1+(−j)+0+0=1−j=√
2e−jπ/ 4
X[2]=1e−j0+1e−jπ+0e−j2π+0e−j3π
=1+(−1)+0+0=0
X[3]=1e−j0+1e−j3π/2+0e−j3π+0e−j9π/2
=1+(j)+0+0=1+j=√
2ejπ/4
Thus, we obtain the four DFT coefﬁcients2X[k]={ 2,√
2e−jπ/ 4,0,√
2ejπ/4}.
1In contrast, the term discrete-time Fourier transform (DTFT) emphasizes that only time is discrete.
2The term “coefﬁcient” is commonly applied to DFT values. This is appropriate because X[k]is the
(complex amplitude) coefﬁcient of ej(2π/N)knin the IDFT (8.5).
304 CHAPTER 8 DISCRETE FOURIER TRANSFORM
Example 8-1 illustrates an interesting fact about the limits of summation in (8.4)
where we have chosen to sum over Nsamples of x[n]and to evaluate the DFT at N
frequencies. Sometimes, the sequence length of x[n]is shorter than N(i.e.,L<N ), and
x[n]is nonzero only in the interval 0 ≤n≤L−1. In Example 8-1, L=2 andN=4. In
such cases, we can simply append N−Lzero samples to the nonzero samples of x[n]and
then carry out the N-point DFT3computation. These zero samples extend a ﬁnite-length
sequence, but do not change its nonzero portion.
8-1.1 The Inverse DFT
The DFT is a legitimate transform because it is possible to invert the transformation
deﬁned in (8.4). In other words, there exists an inverse discrete Fourier transform (or
IDFT), which is a computation that converts X[k]fork=0,1,...,N −1 back into the
sequence x[n]forn=0,1,...,N −1. The inverse DFT is
Inverse Discrete Fourier Transform
x[n]=1
NN−1/summationdisplay
k=0X[k]ej(2π/N)kn
n=0,1,...,N −1(8.5)
Equations (8.5) and (8.4) deﬁne the unique relationship between an N-point sequence x[n]
and its N-point DFT X[k]. Following our earlier terminology for Fourier representations,
the DFT deﬁned by (8.4) is the analysis equation and IDFT deﬁned by (8.5) is the synthesis
equation. To prove that these equations are a consistent invertible Fourier representation,
we note that (8.5), because it is a ﬁnite, well-deﬁned computation, would surely producesome sequence when evaluated for n=0,1,...,N −1. So let us call that sequence v[n]
until we prove otherwise. Part of the proof is given by the following steps:
v[n]=1
NN−1/summationdisplay
k=0X[k]ej(2πk/N)n(8.6a)
=1
NN−1/summationdisplay
k=0/parenleftBiggN−1/summationdisplay
m=0x[m]e−j(2πk/N)m/parenrightBigg
/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
Forward DFT, X[k]ej(2πk/N)n(8.6b)
=1
NN−1/summationdisplay
m=0x[m]/parenleftBiggN−1/summationdisplay
k=0ej(2πk/N)(n−m)/parenrightBigg
/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
=0,except for m=n(8.6c)
=x[n] (8.6d)
3The terminology “N -point DFT” means that the sequence x[n]is known for Ntime indices, and the
DFT is computed at Nfrequencies in (8.2).
8-1 DISCRETE FOURIER TRANSFORM (DFT) 305
Several things happened in the manipulations leading up to the equality assertion of
(8.6d). On the second line (8.6b), we substituted the right-hand side of (8.4) for X[k]
after changing the index of summation from ntom. We are allowed to make this change
because mis a “dummy index,” and we need to reserve nfor the index of the sequence
v[n]that is synthesized by the IDFT. On the third line (8.6c), the summations on kand
mwere interchanged. This is permissible since these ﬁnite sums can be done in either
order.
Now we need to consider the term in parenthesis in (8.6c). Exercise 8.1 (below) states
the required orthogonality result, which can be easily veriﬁed. If we substitute (8.8) into
the third line (8.6c), we see that the only term in the sum on mthat is nonzero is the term
corresponding to m=n. Thus, v[n]=x [n]for 0≤n≤N−1 as we wished to show.
EXERCISE 8.1 Orthogonality Property of Periodic Discrete-Time Complex Exponentials
Use the formula
N−1/summationdisplay
k=0αk=1−αN
1−α(8.7)
to show that
d[n−m]=1
NN−1/summationdisplay
k=0ej(2π/N)nkej(2π/N)( −m)k(deﬁnition)
=1
NN−1/summationdisplay
k=0ej(2π/N)(n−m)k(alternate form)
=1
N/parenleftbigg1−ej(2π)(n−m)
1−ej(2π/N)(n−m)/parenrightbigg
(use (8.7))
d[n−m]=/braceleftBigg
1 n−m=rN
0 otherwise(8.8)
where ris any positive or negative integer including r=0.
EXAMPLE 8-2 Short-Length IDFT
The 4-point DFT in Example 8-1 is the sequence X[k]={ 2,√
2e−jπ/ 4,0,√
2ejπ/4}.I f
we compute the 4-point IDFT of this X[k], we should recover x[n]when we apply the
IDFT summation (8.5) for each value of n=0,1,2,3. As before, the exponents in (8.5)
are all integer multiples of π/2 when N=4.
x[0]=1
4/parenleftbig
X[0]ej0+X[1]ej0+X[2]ej0+X[3]ej0/parenrightbig
=1
4/parenleftBig
2+√
2e−jπ/ 4+0+√
2ejπ/4/parenrightBig
=1
4(2+(1−j)+0+(1+j))=1
306 CHAPTER 8 DISCRETE FOURIER TRANSFORM
x[1]=1
4/parenleftbig
X[0]ej0+X[1]ejπ/2+X[2]ejπ+X[3]ej3π/2/parenrightbig
=1
4/parenleftBig
2+√
2ej(−π/ 4+π/ 2)+0+√
2ej(π/ 4+3π/ 2)/parenrightBig
=1
4(2+(1+j)+(1−j))=1
x[2]=1
4/parenleftbig
X[0]ej0+X[1]ejπ+X[2]ej2π+X[3]ej3π/parenrightbig
=1
4/parenleftBig
2+√
2ej(−π/ 4+π)+0+√
2ej(π/ 4+3π)/parenrightBig
=1
4(2+(−1+j)+(−1−j))=0
x[3]=1
4/parenleftbig
X[0]ej0+X[1]ej3π/2+X[2]ej3π+X[3]ej9π/2/parenrightbig
=1
4/parenleftBig
2+√
2ej(−π/ 4+3π/ 2)+0+√
2ej(π/ 4+9π/ 2)/parenrightBig
=1
4(2+(−1−j)+(−1+j)) =0
Thus, we have veriﬁed that the length-4 signal x[n]={ 1,1,0,0}can be recovered from
its 4-point DFT coefﬁcients, X[k]=/braceleftBig
2,√
2e−jπ/ 4,0,√
2ejπ/4/bracerightBig
.
8-1.2 DFT Pairs from the DTFT
Since the DFT is a frequency-sampled version of the DTFT for a ﬁnite-length signal, it
is possible to construct DFT pairs by making the substitution ˆω→(2π/N)k in a DTFT
pair. In Table 7-1, there are only four ﬁnite-length signals, so each of these has a DFTobtained by sampling X(e
jˆω).
8-1.2.1 DFT of Shifted Impulse
The impulse signal δ[n]and the shifted impulse signal are the easiest cases because
they are very simple signals. If we take the DFT of x1[n]=δ [n], the DFT summation
simpliﬁes to one term:
X1[k]=N−1/summationdisplay
n=0δ[n]e−j(2πk/N)n=δ[0]e−j0
/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
=1+N−1/summationdisplay
n=1 >0
δ[n]e−j(2πk/N)n=1
It is tempting to develop all DFT pairs by working directly with the DFT summation, butit is much easier to get some pairs by frequency sampling known DTFTs. Recall that wealready know the DTFT of the shifted impulse δ[n−n
d],s o
x[n]=δ [n−nd]DTFT←→e−jˆωnd⇒X[k]=e−jˆωnd/vextendsingle/vextendsingle/vextendsingle/vextendsingle
ˆω=(2πk/N)=e−j(2πk/N)n d(8.9)
When the shift (nd)is zero in (8.9), the DFT of δ[n]isX[k]=1, as before. We want
to write (8.9) as the pair δ[n−nd]DFT←→e−j(2πk/N)n d, but since frequency sampling the
DFT requires that the ﬁnite-length signal be deﬁned over the interval 0 ≤n≤N−1,
for now it appears that we must require that ndlie in that interval. In fact, we can remove
this restriction, as will be discussed in Section 8-3.2.
8-1 DISCRETE FOURIER TRANSFORM (DFT) 307
8-1.2.2 DFT of Complex Exponential
The third and fourth cases in Table 7-1 involve the ﬁnite-length (rectangular) pulse whose
DTFT involves a Dirichlet form4which is (7.27) in Chapter 7. Sampling the known DTFT
avoids reworking a messy summation. The third case is the ﬁnite-length (rectangular)
pulse
rL[n]=/braceleftBigg
10≤n≤L−1
0L≤n≤N−1
whose DTFT is the third entry in Table 7-1, so its DFT has one term that is a sampledDirichlet form
R
L[k]=R L(ejˆω)/vextendsingle/vextendsingle/vextendsingle/vextendsingle
ˆω=(2πk/N)=sin(1
2L(2πk/N))
sin(1
2(2πk/N))/bracehtipupleft/bracehtipdownright/bracehtipdownleft /bracehtipupright
sampled Dirichlet forme−j(2πk/N)(L−1)/2(8.10)
The fourth case is a ﬁnite-length complex exponential which can be written as a product
of the rectangular pulse rL[n]and a complex exponential at frequency ˆω0
x4[n]=r L[n]ejˆω0n=/braceleftBigg
ejˆω0n0≤n≤L−1
0 L≤n≤N−1
The DTFT of x4[n]is the fourth entry in Table 7-1 which comes from the frequency-
shifting property of the DTFT, so after frequency sampling we get the following DFT for
the ﬁnite-length complex exponential:
X4[k]=R L(ej(ˆω−ˆω0))/vextendsingle/vextendsingle/vextendsingle/vextendsingle
ˆω=(2πk/N)=sin(1
2L(2πk/N −ˆω0))
sin(1
2(2πk/N −ˆω0))/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
shifted and sampled Dirichlete−j(2πk/N−ˆ ω0)(L−1)/2(8.11)
The expression on the right-hand side of (8.11) appears rather complicated but it has a
recognizable structure as long as it is written in terms of the Dirichlet form which comes
from the DTFT for a rectangular pulse.
X4[k]=D L(2πk/N −ˆω0)e−j(2πk/N−ˆ ω0)(L−1)/2(8.12)
Since the exponential term in (8.12) only contributes to the phase, this result says
that the magnitude depends only on the Dirichlet form |X4[k] |=|DL(2πk/N −ˆω0)|.A
typical magnitude plot of |X[k]|is shown in Fig. 8-1 for the case when N=L=20, and
ˆω0=5π/20=2π(2.5)/N . The continuous magnitude of the Dirichlet envelope (for the
DTFT) has been plotted in gray so that it is obvious where the frequency samples are beingtaken. Notice that the peak of the Dirichlet envelope lies along the horizontal axis at thenon-integer value of 2.5, which corresponds to the DTFT frequency ˆω=(2π/N)( 2.5).
4The Dirichlet form was ﬁrst deﬁned in Section 6-7 on p. 235.
308 CHAPTER 8 DISCRETE FOURIER TRANSFORM
0X4Œk
kL
N N
2Figure 8-1 Magnitude of DFT coefﬁcients for
a 20-point DFT of a length-20 complex
exponential whose frequency is ˆω0=0.25π
which is not an integer multiple of 2π/N with
N=L=20. Gray line is the Dirichlet form
magnitude being sampled.
0X0Œk
kL
N k0 N
2Figure 8-2 Magnitude of DFT coefﬁcients for
a 20-point DFT of a length-20 complexexponential whose frequency is ˆω
0=0.2π
which is an integer multiple of 2π/N (i.e.,
N=L=20 and k0=2).
The DFT is very simple when the frequency of the complex exponential signal is
an exact integer multiple of 2 π/N and the DFT length equals the signal length (i.e.,
N=L). For this very special case, we deﬁne x0[n]=ej(2πk0/N)nwithk0<N , and then
useˆω0=2πk0/Nin (8.12) to obtain
X0[k]=D N(2π(k−k0)/N) e−j(2π(k−k0)/N))(N −1)/2
The big simpliﬁcation comes from the fact that the Dirichlet form DN(ˆω)evaluated at
integer multiples of 2 π/N is zero, except for DN(0),s ow eg e t
X0[k]=Nδ [k−k0] (8.13)
The scaled discrete impulse at k=k0means that X0[k0]=N and all other DFT
coefﬁcients are zero. This result is conﬁrmed in Fig. 8-2, where we can see that the
DFTX0[k]is obtained by sampling the gray Dirichlet magnitude exactly at its peak and
at its zero crossings. The peak value is N=L, and it is the only nonzero value in the DFT.
EXERCISE 8.2 Substitute (8.13) into the inverse N-point DFT relation (8.5) to show that the
corresponding time-domain sequence is
x2[n]=ej(2π/N)k 0nn=0,1,...,N −1
8-1.3 Computing the DFT
The DFT representation in (8.4) and (8.5) is important in digital signal processing for
two reasons: the expressions have ﬁnite limits, making it possible to compute numeric
8-1 DISCRETE FOURIER TRANSFORM (DFT) 309
values of x[n]andX[k], and they are Fourier representations that have special properties
like the DTFT that are useful in the analysis and design of DSP systems. Both the
DFT and the IDFT summations can be regarded as computational methods for takingNnumbers in one domain and creating Nnumbers in the other domain. The values
in both domains might be complex. Equation (8.4), for example, is really Nseparate
summations, one for each value of k. To evaluate one of the X[k]terms, we need N−1
complex additions and N−1 complex multiplications when k/negationslash=0. If we count up all the
arithmetic operations required to evaluate all of the X[k]coefﬁcients, the total is (N−1)
2
complex multiplications and N2−Ncomplex additions. For example, when N=4a si n
Example 8-2, the 9 complex multiplications and 12 complex additions are clearly shown.Note that terms involving e
j0=1 do not require an actual multiplication. For the inverse
transform, the multiplication by1
4would require an additional 4 multiplications if done
separately as shown in Example 8-2.
One of the most important discoveries5in the ﬁeld of digital signal processing is
thefast Fourier transform,o rFFT , a set of algorithms that can evaluate (8.4) or
(8.5) with a number of operations proportional to Nlog2Nrather than (N−1)2. When
Nis a power of two, the FFT algorithm computes the entire set of coefﬁcients X[k]
with approximately (N/2)log2Ncomplex operations. The Nlog2Nbehavior becomes
increasingly signiﬁcant for large N. For example, if N=1024, the FFT computes the
DFT coefﬁcients X[k]with(N/2)log2N=5120 complex multiplications, rather than
(N−1)2=1,046,529 as required by direct evaluation of (8.4). The algorithm is most
often applied when the DFT length Nis a power of two, but it also works efﬁciently if
Nhas many small-integer factors. On the other hand, when Nis a prime number, the
standard FFT algorithm offers no savings over a direct evaluation of the DFT summation.FFT algorithms of many different variations are available in most computer languages,and for almost any computer hardware architecture. In MATLAB, the command is simply
fft, and most other spectral analysis functions in MATLAB call fft to do the bulk of
their work. The DFT of a vector xis computed using the statement X = fft( x, N ) ,
whereXis the DFT of x. MATLAB uses a variety of FFT algorithms for this computation
depending on the value of N, with the best case being Nequal to a power of 2. More
details on the FFT and its derivation can be found in Section 8-8.
8-1.4 Matrix Form of the DFT and IDFT
Another easy way to gain insight into the computation is to write the DFT summation as a
matrix-vector multiplication, where the Nsignal values and NDFT coefﬁcients become
N-element column vectors:
5J. W. Cooley and J. W. Tukey, “An Algorithm for the Machine Computation of Complex Fourier Series,”
Mathematics of Computation, vol. 19, pp. 297–301, April 1965. The basic idea of the FFT has been traced
back as far as Gauss at the end of the 18th century.
310 CHAPTER 8 DISCRETE FOURIER TRANSFORM
⎡
⎢⎢⎢⎢⎢⎣X[0]
X[1]
X[2]
...
X[N−1]⎤
⎥⎥⎥⎥⎥⎦=⎡
⎢⎢⎢⎢⎢⎣11 1 ··· 1
1e
−j2π/Ne−j4π/N···e−j2(N−1)π/N
1e−j4π/Ne−j8π/N···e−j4(N−1)π/N
...............
1e
−j2(N−1)π/Ne−j4(N−1)π/N···e−j2(N−1)(N −1)π/N⎤
⎥⎥⎥⎥⎥⎦
×⎡
⎢⎢⎢⎢⎢⎣x[0]
x[1]
x[2]
...
x[N−1]⎤
⎥⎥⎥⎥⎥⎦(8.14)
In MATLAB, the DFT matrix can be obtained with the function
dftmtx(N) for
anN×Nmatrix. Then computing the DFT would be a matrix-vector product: X=
dftmtx(N)*x , wherexis the vector of signal samples and Xthe vector of DFT
coefﬁcients. However, it is much more efﬁcient to compute the DFT of a vector using the
statementX = fft( x, N ) , whereXis the DFT of x.
EXERCISE 8.3 The IDFT can also be expressed as a matrix-vector product. Write out the typical
entry of the N×NIDFT matrix, and then use MATLAB to create a 6 ×6 IDFT
matrix. Check your work by multiplying the IDFT matrix by the DFT matrix (inMATLAB). Explain why the expected result should be an identity matrix.
8-2 Properties of the DFT
In this section and Section 8-3, we examine many properties of the DFT. Some are tied toits interpretation as a frequency sampled version of the DTFT, some are inherited directlyfrom DTFT properties, and others are needed to interpret the results of the DFT. Onenotable special property is the periodicity of X[k]with respect to kwhich is inherited
from the 2 π-periodicity of the DTFT. This periodicity affects the placement of negative
frequency components in X[k], and also symmetries.
We show that both the IDFT and DFT summations deﬁne the signal x[n]and its
N-point DFT coefﬁcients X[k]to be periodic with period N.
X[k]=X[k+N]− ∞ <k<∞ (8.15a)
x[n]=x [n+N]− ∞ <n<∞ (8.15b)
These periodicity properties might be surprising because the DFT was deﬁned initially
for a ﬁnite-length N-point sequence, and the DFT yields NDFT coefﬁcients. However,
many transform properties implicitly involve operations that evaluate the indices nork
outside of the interval [0,N−1], so periodicity is needed to explain properties such as
the delay property and convolution.
8-2 PROPERTIES OF THE DFT 311
8-2.1 DFT Periodicity for X[k]
We have shown that the DFT of a ﬁnite N-point sequence is a sampled version of the
DTFT of that sequence, that is,
X[k]=N−1/summationdisplay
n=0x[n]e−j(2π/N)kn=X(ejˆω)/vextendsingle/vextendsingle/vextendsingle
ˆω=(2πk/N)
=X(ej(2πk/N))k=0,1,...,N −1 (8.16)
Since the DTFT X(ejˆω)is always periodic with a period of 2 π, the DFT X[k]must also
be periodic. The deﬁnition of the DFT implies that the index kalways remains between
0 and N−1, but there is nothing that prevents the DFT summation (8.4) from being
evaluated for k≥N,o rk< 0. The frequency sampling relationship ˆωk=2πk/N is still
true for all integers k,s oˆωk+2π=2πk/N +2π(N/N) =2π(k+N)/N=ˆωk+N.In
other words, the DFT coefﬁcients X[k]have a period equal to N, because
X[k]=X(ej2π(k)/N)=X(ej(2π(k)/N +2π))/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
DTFT period is 2 π=X(ej2π(k+N)/N)=X[k+N]
When the DFT values X[k]are needed outside the interval 0 ≤k<N , they can be
extended at no additional computational cost using the period of N. Thus, X[N]=X[0],
X[N+1]=X [1],X[N+2]=X[2], and so on; likewise, X[−1]=X [N−1],X[−2]=
X[N−2],.... This periodicity is illustrated in Fig. 8-3.
8-2.2 Negative Frequencies and the DFT
The DFT and IDFT formulas use nonnegative indices, which is convenient for
computation and mathematical expressions. As a result, the IDFT synthesis formula (8.5)
appears to have positive frequencies only. However, when we make the spectrum plotof a discrete-time signal (as in Chapter 4, Figs. 4-8 through 4-11) we expect to see bothpositive and negative frequency lines, along with conjugate symmetry when the signal isreal. Thus, we must reinterpret the DFT indexing to see a conjugate-symmetric spectrumplot.
N2 N NC2NCM M 2101 2 MN MN 2N k
Principal Frequency Interval for O!
!M !2!10O!1O!2 O!M !M !2 CO!2O!X0
X1X2
XM XNMXN2XN1 X1
X2
XMDFT coefﬁcients
Figure 8-3 Periodicity of the DFT coefﬁcients X[k+N]=X[k], and the relationship of the frequency index kto
samples of normalized frequency, ˆωk. The DFT coefﬁcients are denoted with subscripts (i.e., Xkinstead of X[k]), in
order to enhance the readability of the labels. The IDFT uses indexing that runs from k=0t ok=N−1, which is one
period. The DTFT, on the other hand, typically uses the principal frequency interval −π≤ˆω<π .
312 CHAPTER 8 DISCRETE FOURIER TRANSFORM
The signal deﬁned by the IDFT in (8.5) has Nequally spaced normalized frequencies
ˆωk=(2π/N)k over the positive frequency range 0 ≤ˆω< 2π. These frequencies can be
separated into two subsets
0≤(2π/N)k < π for 0 ≤k<N / 2 (8.17a)
π≤(2π/N)k < 2πforN/2≤k≤N−1 (8.17b)
Since the DTFT is periodic in ˆωwith a period of 2 π, the frequency sampling index
k=N−1 corresponding to the positive frequency ˆωN−1=2π(N−1)/N aliases to
the index k=−1 which corresponds to ˆω−1=−2π/N=ˆωN−1−2π. In general, the
sample of the DTFT at ˆω−k=(2π/N)( −k)has the same value as the sample at frequency
ˆωN−k=(2π/N)( −k+N).This is the replication of frequency components discussed
in Chapter 4. In fact, all the frequencies in the second subset above (8.17b) actually are
aliases of the negative frequencies in the spectrum.6This reordering of the indices is
important when we want to plot the spectrum for −π≤ˆω<π . When Nis even, the
indices in the second subset {N
2,N
2+1,N
2+2, ...,N −2,N−1}would be aliases of
{−N
2,−N
2+1,−N
2+2, ...,−2 ,−1}.
EXERCISE 8.4 Prove that the IDFT can be rewritten as a sum where half the indices are negative.
Assume that the DFT length Nis even.
x[n]=1
NN/2−1/summationdisplay
k=−N/ 2X[k]ej(2π/N)kn
8-2.3 Conjugate Symmetry of the DFT
When we have a real signal x[n], there is conjugate symmetry in the DTFT,
so the DFT coefﬁcients must also satisfy the following property: X[−1]=X∗[1],
X[−2]=X∗[2],...,X [−k]=X∗[k],... . If we put the periodicity of X[k]together
with conjugate symmetry, we can make the general statement that the DFT of a realsignal satisﬁes
X[N−k]=X
∗[k]fork=0,1,...,N −1
Figure 8-4 shows a DFT coefﬁcient X[k0]at the normalized frequency ˆωk0=2πk0/N.
The corresponding negative-frequency component, which must be the conjugate, is shown
in gray at k=−k0. The spectrum component at k=N−k0is an alias of the negative-
frequency component.
6The case where k=N/2 and Nis even will be discussed further in Section 8-2.3.1. We follow the
MATLAB convention (when using fftshift) which assigns this index to the second set.
8-2 PROPERTIES OF THE DFT 313
00
0k0
k0
Nk0
k0
NNk0
.Nk0/
N
!!s
2!s
2!s !0 !0 !s!0O!XŒ
XŒk 0 XŒk0DXŒk0 ŒNk0DXŒk0
k N N
2N
2
Figure 8-4 Illustration of the conjugate symmetry of the DFT coefﬁcients showing that
X[N−k0]=X∗[k0]. There are three “frequency scales.” The top scale shows the DFT index k.
The middle scale shows normalized frequency ˆωfor the discrete-time signal. The bottom scale
shows the continuous-time frequency scale (ω =ˆω/Ts) that would be appropriate if the
sequence x[n]had been obtained by sampling with a sampling frequency, ωs=2π/Ts. Thus,
the DFT index k0corresponds to the analog frequency ω0=2πk0/(NT s)rad/s.
EXAMPLE 8-3 DFT Symmetry
In Example 8-1, the frequency indices of the 4-point DFT correspond to the
four frequencies ˆωk={0,π /2,π ,3π/ 2}. The frequency ˆω3=3π/2 is an alias of
ˆω=−π/2. We can check that the DFT coefﬁcients in Example 8-1 satisfy the conjugate-
symmetric property, e.g., X[1]=X∗[4−1]=X∗[3]=√
2e−jπ/ 4.
EXERCISE 8.5 It is easy to create a MATLAB example that demonstrates the conjugate-symmetry
property by executing Xk=fft(1:8) , which computes the 8-point DFT of a real
signal. List the values of the signal x[n]forn=0,1,2,...,7. Then tabulate the
values of the MATLAB vector Xkin polar form from which you can verify that
X[N−k]=X∗[k]fork=0,1,...,7 and N=8. Finally, list the value of ˆω
corresponding to each index k.
8-2.3.1 Ambiguity at X[N/2 ]
When the DFT length Nis even, the transform X[k]has a value at k=N/2; when
Nis odd, k=N/2 is not an integer so the following comments do not apply.
The index k=N/2 corresponds to a normalized frequency of ˆω=2π(N/ 2)/N=π.
However, the spectrum is periodic in ˆωwith a period of 2 π, so the spectrum value
is the same at ˆω=±π. In other words, the frequency ˆω=−πis an alias of
ˆω=π.
When we plot a spectrum as in Chapter 3, the zero frequency point is placed in the
middle, and the frequency axis runs from −πto+π. Strictly speaking we need not include
314 CHAPTER 8 DISCRETE FOURIER TRANSFORM
both end points because the values have to be equal, X[N/2]=X[−N/ 2]. Thus, we have
to make a choice, either placing X[N/2]on the positive frequency side, or X[−N/ 2]on
the negative frequency side of the spectrum. The following example for N=6 shows the
two reorderings that are possible:
{X[0],/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
ˆω=0X[1],X[2],X[3]/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
ˆω=π,X[4],X[5]} − → {X [−3]/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
ˆω=−π,X[−2],X[−1],X [0],/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
ˆω=0X[1],X[2]}
−→ { X[−2],X[−1],X [0],/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
ˆω=0X[1],X[2],X[3]/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
ˆω=π}
In this example, the periodicity of the DFT coefﬁcients enabled the following
replacements X[5]=X [−1],X[4]=X[−2], andX[3]=X [−3]. The DFT component
X[3]atk=3 corresponding to the frequency ˆω=2π(3)/6=πmust have the same
value as X[−3] atk=−3 corresponding to ˆω=2π(−3)/6 =−π. The choice of which
reordering to use is arbitrary, but the MATLAB function fftshift does the ﬁrst, putting
X[N/2]at the beginning so that it becomes X[−N/ 2]and corresponds to ˆω=−π.
Therefore, we adopt this convention in this chapter, keeping in mind this only applies
whenNis even.
EXERCISE 8.6 Prove that the DFT coefﬁcient X[N/2]must be real-valued when the vector x[n]is
real and the DFT length Nis even.
8-2.4 Frequency-Domain Sampling and Interpolation
When we want to make a smooth plot of a DTFT such as the frequency response, we need
frequency samples at a very ﬁne spacing. Implicitly, the DFT assumes that the transformlength is the same as the signal length L. Thus, the L-point DFT computes samples of the
DTFT for ˆω=(2π/L)k , withk=0,1,...,L −1. The Lfrequency samples are equally
spaced samples in the interval 0 ≤ˆω< 2π,s ow eh a v e
H[k]=H(e
j(2π/L)k)=H(ejˆω)/vextendsingle/vextendsingle/vextendsingle
ˆω=(2π/L)kk=0,1,...,L −1 (8.18)
If we want to have frequency samples at a ﬁner spacing (2π/N) where N>L , then
a simple trick called zero-padding can be used so that we can compute an N-point DFT.
Inzero-padding , we append zero-valued samples to the signal to make it longer prior to
computing the N-point DFT. In other words, deﬁne a length-N signal hzp[n]as
hzp[n]=/braceleftBigg
h[n] n=0,1,...,L −1
0 n=L,L+1,...,N −1(8.19)
8-2 PROPERTIES OF THE DFT 315
Now take the N-point DFT of hzp[n]and then split the sum into two smaller summations:
Hzp[k]=N−1/summationdisplay
n=0hzp[n]e−j(2π/N)kn(8.20a)
=L−1/summationdisplay
n=0hzp[n]e−j(2π/N)kn+N−1/summationdisplay
n=L *0
hzp[n]e−j(2π/N)kn(8.20b)
=L−1/summationdisplay
n=0h[n]e−j(2π/N)kn(8.20c)
Hzp[k]=H(ej(2π/N)k) fork=0,1,2,...,N −1 (8.20d)
Thus (8.20d) says the N-point DFT of an L-point (impulse response) signal augmented
with zero padding gives frequency response samples at ˆωk=2πk/N.
In the special case where N=2L, we get twice as many frequency samples as with
N=L, but the even-indexed samples are identical to values from an L-point DFT, that is,
Hzp[2/lscript]=H [/lscript] for/lscript=0,1,...,L −1 (8.21)
To see that (8.21) is true when N=2L, consider an even-indexed frequency such as
(2π/N) 10. The frequency (2π/2L)10=(2π/L)5, i.e., the 10thvalue of Hzp[k],i st h e
same as the ﬁfth value of H[k]because these values come from sampling H(ejˆω)at
exactly the same frequency. On the other hand, consider an odd-indexed frequency such
as(2π/N) 7 when N=2L. Then the frequency (2π/2L)7=(2π/L)(3.5) lies between
(2π/L)3 and (2π/L)4, so the odd-indexed frequencies correspond to evaluating the
frequency response “in between.” In effect, the 2 L-point DFT is interpolating theL-point
DFTH[/lscript]which has Lsample values of the frequency response. Once we recognize this
interpolation behavior of the DFT, we can use even more zero-padding to produce verydense frequency grids for evaluating the frequency response prior to plotting. In fact, inthe limit as N→∞ , the DFT converges to the true frequency response function which
is a continuous function of ˆω.
EXAMPLE 8-4 Frequency Response Plotting with DFT
Suppose that we want to plot the frequency response of an 8-point running sum FIR ﬁlter.
Although MATLAB can do the job with its frequency response function called freqz ,
we can also do the evaluation directly with the DFT by calling fft in MATLAB. This
provides insight into the internal structure of freqz which calls the FFT to do the actual
work. To evaluate the frequency response at many closely spaced frequencies we need touse zero padding, so we pick N=80 and do the following in MATLAB:
N = 80;
hpadded = [ ones(1,8), zeros(1,N-8) ];Hk = fft(hpadded);stem( 0:N-1, abs(Hk) ) % Plot H[k] vs. k
316 CHAPTER 8 DISCRETE FOURIER TRANSFORM
10 20 30 40 50 60 70 79
(a)
 
(b)O!ˇˇH.ejO!/ˇˇˇˇHŒ ˇˇ
.20/
80.60 80/
80 400
88
kFigure 8-5 Frequency response of 8-point
running sum ﬁlter. (a) Magnitude response
obtained from length-80 FFT plotted versusDFT index (k). (b) Magnitude response plotted
versus ˆωafter moving the negative frequency
components shown in orange. The indices
0≤k<40 map to the frequencies
ˆω=2πk/N; while the indices 40 ≤k<80
map to the negative frequencies
ˆω=2π(k−N)/N =2πk/N −2π.
Zero-padding is a very common operation, so the fftfunction has a second argument that
sets the FFT length and enables zero-padding. Thus, fft(hn,N) computes an N-point
DFT ofhn, with zero-padding if N>length(hn) . Figure 8-5(a) shows the resulting plot.
If we compare the plot from this code to the magnitude plot of other running sum ﬁlters
in Chapter 6, we see that the result is similar, but there is a big issue: the axis labels mustbe converted from “frequency index” ktoˆω. In addition, the frequency axis needs to
haveˆωrunning from −πtoπ, so the negative frequency components must be moved as
explained in Section 8-2.2. This is accomplished by treating the second half of the
Hk
vector differently from the ﬁrst half as in the following code (which assumes Nis even):
HkCentered = [ Hk(N/2+1:N), Hk(1:N/2) ]; %- fftshift.m does this
kCentered = [-N+(N/2+1:N), (1:N/2)]-1 ;
%- make negative frequency indices% kCentered is [-N/2,-N/2+1,...,-2,-1,0,1,2,3,...,N/2-1]
stem( (2*pi/N)*kCentered, abs(HkCentered) )
The ﬂipping operation above occurs so often when using the FFT in MATLAB that
a special function called fftshift has been created to perform the reordering. The
frequencies have to be reordered separately. When the frequency response has conjugate
symmetry, it is customary to plot only the ﬁrst half of Hkwhich corresponds to the positive
frequency region.
8-2.5 DFT of a Real Cosine Signal
A built-in property of the DFT is linearity, which is true because the DTFT is linear and
the DFT is obtained by frequency sampling the DTFT. Since a cosine signal is the sumof two complex exponentials by virtue of the inverse Euler formula, we get the DFT ofa cosine by summing two terms obtained from (8.12).
8-2 PROPERTIES OF THE DFT 317
The examples of the DFT of a complex exponential shown in Figs. 8-1 and 8-2 assume
that the DFT length Nis equal to L, the length of the complex exponential sequence.
However, the general result in (8.12) holds for L≤N, and it is useful to examine the
case where L<N . Consider a length-L cosine signal
x[n]=A cos(ˆω0n) forn=0,1,...,L −1 (8.22a)
which we can write as the sum of complex exponentials at frequencies +ˆω0and 2π−ˆω0
as follows:
x[n]=A
2ejˆω0n+A
2ej2πn
/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
=1e−jˆω0nforn=0,1,...,L −1 (8.22b)
Using the linearity of the DFT and (8.12) with ϕ=0 for these two complex exponentials
leads to the expression
X[k]=A
2DL((2πk/N) −ˆω0)e−j(( 2πk/N)−ˆ ω0)(L−1)/2
+A
2DL((2πk/N) −(2π−ˆω0)) e−j(( 2πk/N)+ˆ ω0)(L−1)/2(8.23)
where the function DL(ˆω)is given by (7.27).
Figure 8-6 shows |X[k]|as a function of kfor the case ˆω0=0.4πwithN=50 and
L=20. An equivalent horizontal axis would be the normalized frequency axis (ˆω)where
ˆωk=2πk/N. Note the DFT magnitude exhibits its characteristic symmetry where the
maxima (peaks) of the DFT occur at k=k0andk=N−k0, which correspond to the
frequencies (2πk0/N)=ˆω0and(2π(N−k0)/N)=2π−ˆω0. Furthermore, the heights
of the peaks are approximately AL/2. The latter can be shown by evaluating (8.23) under
the assumption that (2πk0/N)=ˆω0and that the value of |X[k0]|is determined mainly
by the ﬁrst term in (8.23).
In Section 8-7, we will revisit the fact that isolated spectral peaks are often indicative
of sinusoidal signal components. Knowledge of the fact that the peak height depends on
both the amplitude Aand the duration Lis useful in interpreting spectrum analysis results
for signals involving multiple frequencies.
0 k N1
2AL1
2AL
k0 .N k0/ N
2jXŒk/c141j
Figure 8-6 N-point DFT of a length-L real
cosine signal whose frequency is an integer
multiple of 2 π/N , where N=50 and L=20.
Gray line is the magnitude of the DTFT beingsampled. The integer multiple is k
0=10, so
there are DFT samples at the peaks of theDTFT at ˆω
0=(2π/50)(10)=0.4πand
2π−ˆω0=(2π/50)(50−10)=1.6π .
318 CHAPTER 8 DISCRETE FOURIER TRANSFORM
EXERCISE 8.7 Use MATLAB to compute samples of the signal x0[n]=5 cos(0 .211πn) forn=
0,1,...,499. Compute and plot the magnitude of the (N=16384 )-point DFT of
the length-500 sequence x0[n]using the MATLAB statements
x0=5*cos( 0.211*pi*(0:499) );
N=16384;X0 = fft(x0,N); %- fft takes care of zero paddingplot( (0:N/2)*2*pi/N , abs(X0(1:N/2+1)) );
Check to see if the peak height satisﬁes the relation AL/2 mentioned above.
Repeat the above steps for the following length-5000 input signal:
x3[n]=/braceleftbigg0.5 cos(0 .4πn) forn=5000,5001,...,9999
0 otherwise
Overlay the two plots by using MATLAB’s hold on command before plotting the
second DFT. Explain why the spectral peak height is the same for both signals even
though their amplitudes differ by a factor of ten.
EXERCISE 8.8 Use Euler’s relation to represent the signal x[n]=A cos(2πk0n/N) as a sum of two
complex exponentials. Assume k0is an integer. Use the fact that the DFT is a linear
operation and the periodicity of the DFT coefﬁcients to show that its DFT can bewritten as
X[k]=AN
2δ[k−k0]+AN
2δ[k−(N−k0)] k=0,1,...N −1
8-3 Inherent Time-Domain Periodicity of x[n] in the DFT
In this section, we will study more properties of the DFT/IDFT representation. In theprevious section, we examined properties of the DFT which are tied to its interpretationas a frequency sampled version of the DTFT, and the fact that X[k]is periodic. This
periodicity affects the placement of negative frequency components in X[k], and also
symmetries. In this section, we want to show that the IDFT summation requires that thetime-domain signal x[n]must also be periodic with period N.
x[n]=x [n+N]− ∞ <n<∞
This property might be surprising because the DFT has been deﬁned for a ﬁnite-length
N-point sequence, and the DFT yields NDFT coefﬁcients. However, some transform
properties implicitly involve operations that evaluate the indices norkoutside of
[0,N−1], so periodicity is needed to explain properties such as the delay property
and convolution.
8-3 INHERENT TIME-DOMAIN PERIODICITY OF x[n] IN THE DFT 319
8-3.1 DFT Periodicity for x[n]
It is less obvious that the IDFT summation implies periodicity. However, we can ask
what happens when the IDFT sum (8.5) is evaluated for n<0o r n≥N. In particular,
consider evaluating (8.5) at n+Nwhere nis in the interval 0 ≤n≤N−1, that is,
˜x[n+N]=1
NN−1/summationdisplay
k=0X[k]ej(2π/N)k(n +N)(8.24)
We have denoted the result in (8.24) as ˜x[n+N]because we are testing to see what value
is computed at n+N.
˜x[(n+N)]=1
NN−1/summationdisplay
k=0X[k]ej(2π/N)k (n+N)(8.25a)
=1
NN−1/summationdisplay
k=0X[k]ej(2π/N)k (n) :1
ej(2π/N)k (N)(8.25b)
=1
NN−1/summationdisplay
k=0X[k]ej(2π/N)k (n)=x[n] (8.25c)
In (8.25b) observe that ej(2π/N)kN=ej2πk=1 for all k.
The result in (8.25c) says that the IDFT does not give a value of zero at n+N,a si t
would if the IDFT returned the original ﬁnite-length sequence x[n]with values x[n]=0
outside the interval 0 ≤n≤N−1. Instead, it repeats values of x[n]from within the
interval 0 ≤n≤N−1. By the same process, it can be shown that ˜x[n+rN]=x[n]
when we evaluate at any point n+rNwhere ris an integer. In other words, the result
from the IDFT sum is periodic in nwith period Nif (8.5) is evaluated outside the base
interval 0 ≤n≤N−1. We can express this succinctly as follows:
1
NN−1/summationdisplay
k=0X[k]ej(2π/N)kn=˜x[n]=∞/summationdisplay
r=−∞x[n+rN]for−∞<n<∞ (8.26)
where x[n]is the original sequence whose DTFT was sampled as in (8.16). The inﬁnite
sum on the right-hand side, which involves shifted copies of the same signal, is illustratedin Fig. 8-7. Even though the discussion leading to (8.26) seems to assume that x[n]is
zero outside the interval 0 ≤n≤N−1, it turns out that the relationship in (8.26) is also
true for any signal that has a DTFT.
Equation (8.26) is an important observation about the IDFT because it provides the
answer to the question: “when can a sequence x[n]be reconstructed exactly from N
samples of its DTFT X(e
jˆω)?” From (8.26) it is clear that if x[n]=0 for noutside the
base interval 0 ≤n≤N−1, then x[n]=˜ x[n]for 0≤n≤N−1. That is, the sequence
x[n]can be reconstructed exactly from Nsamples of its DTFT X(ejˆω)if it is a ﬁnite
length-N sequence. This could be termed the Sampling Theorem for the DTFT.
320 CHAPTER 8 DISCRETE FOURIER TRANSFORM
−10 0 1001
(a)x[n]
−10 0 10 20 30
(b)01
˜x[n]x[n − 10] x[n] x[n − 20] x[n + 10]Figure 8-7 Illustration of the sum in (8.26). (a) A
ﬁnite-length sequence x[n]of length 10. (b) Shifted
copies of x[n]that are summed to make up the
inherent periodic sequence ˜x[n]with period
N=10. The inherent periodic sequence ˜x[n]
continues with period Noutside the range
−10≤n<30.
The inherent periodicity of the DFT/IDFT representation in both nandkforces
us to interpret some of the familiar properties of Fourier representations in a special
way. Speciﬁcally, we must never lose sight of the periodic sequence ˜x[n]that is
inherently represented by the DFT/IDFT representation. This is particularly importantwhen considering signal operations such as delay and convolution. A good example ofthe time periodicity issue comes from reconsidering the DFT pair for a shifted impulse
(8.9) where we want to write the pair as δ[n−n
d]DFT←→e−j(2πk/N)n d. In this case, the
IDFT periodicity issue arises when nd≥N, as the following example illustrates.
EXAMPLE 8-5 DFT of Shifted Impulse
Consider the 10-point DFT of q[n]=δ [n−14]which should be Q[k]=e−j0.2π(14)kby
virtue of the DFT pair given in (8.9). If we take the 10-point IDFT of Q[k]we get a
length-10 signal which is deﬁned over the time index range n=0,1,2,...9. Here is one
way to determine the IDFT of Q[k].
Q[k]=e−j0.2π(10+4)k=e−j2πke−j0.2π(4)k=e−j0.2π(4)kDFT←→δ[n−4]
Thus, the result of the IDFT has a nonzero value at n=4, and seems to be different from
q[n]which was nonzero at n=14.
For the 10-point DFT of q[n]=δ [n−14], we can only take the DFT if we extend
q[n]to a periodic signal ˜q[n]that has impulses at n=...,−16, −6,4,14,24,34,....
That is, we would write ˜q[n]as
˜q[n]=···+ δ[n+6]/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
q[n+20 ]+δ[n−4]/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
q[n+10 ]+δ[n−14]/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
q[n]+δ[n−24]/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
q[n−10 ]+···
=∞/summationdisplay
r=−∞δ[n−14+10r]=∞/summationdisplay
r=−∞q[n+10r]
which expresses the periodic signal ˜q[n]in the form of (8.26).
8-3 INHERENT TIME-DOMAIN PERIODICITY OF x[n] IN THE DFT 321
8-3.2 The Time Delay Property for the DFT
As we showed in Chapter 7, the DTFT delay property is
y[n]=x [n−nd]DTFT←→e−jˆωndX(ejˆω)
wheny[n]=x [n−nd]is a time-shifted version of x[n]. If we use frequency sampling,
then we expect the DFT delay property would be
Y[k]=e−jˆωndX(ejˆω)/vextendsingle/vextendsingle/vextendsingle/vextendsingle
ˆω=(2πk/N)=e−j(2πk/N)n dX[k] (8.27)
However, when the IDFT is applied to X[k]andY[k]it is the inherent periodic signal
˜x[n]that is shifted by ndto give the inherent periodic signal ˜y[n]. If we take the point
of view that we only compute sequence values in the interval 0 ≤n≤N−1, then we
are led to an unexpected result. We can see that might be an issue by noting that if x[n]
is nonzero over the entire interval 0 ≤n≤N−1, then there would not be room in that
interval for x[n−nd]. This is similar to the behavior already seen in Example 8-5 for
a time-shifted impulse. For example, if nd=4, then x[n−4]is nonzero for 4 ≤n≤
N+3. This is illustrated in Fig. 8-8 for the case N=10. Figure 8-8(a) shows an original
10-point sequence x[n]. If we represent this sequence by its 10-point DFT X[k], then we
−10
−10
−10
−100 1001
0 10 20 3001
0 10 20 3001
1
0 100(a)
(b)
(c)
(d)Time Index (n)x[n]
˜y[n]˜x[n]
y[n]Figure 8-8 Illustration of the time-shift property of the
DFT. (a) A ﬁnite-length sequence x[n]of length 10.
(b) The inherent periodic sequence ˜x[n]for a 10-point
DFT representation. (c) Time-shifted periodic sequence
˜y[n]=˜ x[n−4]which is also equal to the IDFT of
Y[k]=e−j(2πk/10)(4)X[k]. (d) The sequence y[n]
obtained by evaluating the 10-point IDFT of Y[k]only in
the interval 0 ≤n≤9.
322 CHAPTER 8 DISCRETE FOURIER TRANSFORM
are implicitly representing the periodic sequence ˜x[n]shown in Fig. 8-8(b), and if we form
Y[k]=e−j(2πk/10)(4)X[k], then the corresponding periodic sequence is ˜y[n]=˜ x[n−4]
as shown in Fig. 8-8(c). The gray dots on gray lines depict the periodic extension of the
sequence in the base interval 0 ≤n≤9, which is shown with solid black dots and lines.
Finally, if we form Y[k]=e−j(2πk/10)(4)X[k]and then use the 10-point IDFT to compute
the sequence y[n]for 0≤n≤9, we obtain the result of Fig. 8-8(d).
Comparing Figs. 8-8(a) and (d), it is clear that y[n] /negationslash= x[n−4], however, the four
samples on the left side of y[n]were originally the four samples on the right side of x[n].
Thus,y[n]is related to x[n]by a shift that is sometimes called “circular” since the shifted
samples appear to “rotate” or “wrap around” within the base interval. This effect is oftencalled time aliasing in recognition of the close analogy with the frequency aliasing that
occurs in sampling continuous-time signals. A convenient way to represent this circular
shift is through the use of modular arithmetic.
EXAMPLE 8-6 Modulo-N Arithmetic
In number theory, a consistent algebraic system can be deﬁned using remainders withrespect to a ﬁxed integer N, called the modulus. Recall that any integer ncan be written
uniquely as n=qN+r, where the quotient qis an integer and the remainder ris
nonnegative and less than the modulus N. We write r=nmodNto denote the remainder
ofnmodulo-N . For example, (−2)mod 10 is equal to 8 because −2=(−1)(10 )+8.
For signal delay and convolution, we only need addition and subtraction of integer
indices. Suppose that N=10, and we want to add 7 and 6. The result for modulo-10
arithmetic is 3 because we do normal addition (7+6)=13, and then reduce modulo-
10, taking the positive remainder which is 3. For mod-10 arithmetic the remaindermust always be a positive integer in the range 0 to N−1=9. If we subtract 4 from
2, the result (2−4)mod 10 =−2 mod 10 =8. When we count up modulo-10, the
sequence is {0,1,2,3,4,5,6,7,8,9,0,1,2,3,...}because adding 1 to 9 gives 10, and
10 mod 10 =0. Furthermore, if we evaluate (n−4)mod 10 for n=0,1,...9, we start
at(0−4)mod 10 which is equal to 6 and get {6,7,8,9,0,1,2,3,4,5}.
For a somewhat more compact general notation, we deﬁne index subtraction modulo-
Nvia
((n−n
d))N=(n−nd)modN (8.28)
The modulo-N operation guarantees that 0 ≤((n−nd))N≤N−1. Thus, for n=0,
1,...,N −1, the index ((n−nd))Ncycles through the base interval starting at n=
(0−nd)modN=N−nd. In terms of this notation (8.28) then, the correct DFT shift
property is
y[n]=x [((n−nd))N]DFT←→Y[k]=e−j(2πk/N)n dX[k]
which emphasizes that the time shift is a circular shift with period N.
8-3 INHERENT TIME-DOMAIN PERIODICITY OF x[n] IN THE DFT 323
8-3.2.1 Zero Padding
While the signal in Fig. 8-8(d) is the correct result for the 10-point DFT, it is not what
we would normally want for a time-shifted signal. Equation (8.26) and the example of
Fig. 8-8 suggest a solution, however. First note that the signal x[n−4]is not a 10-point
sequence if we start counting at n=0. With the delay, the ﬁrst four values of y[n]are
zero and the shifted sequence goes from n=0t on=13, so the length of the shifted
sequence is 14 samples. Thus, if we augment the sequence x[n]with 4 zero samples
at the right-hand end, it is possible to shift the sequence to the right by 4 samples andstill remain within the new base interval 0 ≤n≤13. This augmentation is known as
zero padding . Therefore, we must compute a 14-point (or larger) DFT if we wish to use
multiplication of the DFT X[k]bye
−j(2πk/N)(4 )to effect a time shift of 4 samples that
does not “wrap around.” This is illustrated in Fig. 8-9.
Figure 8-9(a) shows the sequence x[n]padded with 4 zero samples (which are,
in fact, correct values for the ﬁnite-length sequence x[n]). Figure 8-9(b) shows the
inherent periodic sequence ˜x[n]when using the DFT representation with N=14,
and Fig. 8-9(c) shows the shifted-by-4 periodic sequence ˜y[n]corresponding to
Y[k]=e−j(2πk/14)(4)X[k]. Finally, if we form Y[k]=e−j(2πk/14)(4)X[k]and then use
the 14-point IDFT to compute the sequence y[n]for 0≤n≤13, we obtain the result of
0 1401
0 14 28
0 14 28
0 14(a)
(b)
(c)
(d)Time Index (n)x[n]
01
˜x[n]
01
˜y[n]
01
y[n]Figure 8-9 Illustration of the time-shift property of the
DFT with zero padding. (a) A ﬁnite-length sequence x[n]
of length 10 padded with 4 zeros. (b) The inherent
periodic sequence ˜x[n]for a 14-point DFT representation.
(c) Time-shifted periodic sequence ˜y[n]=˜ x[n−4]
corresponding to Y[k]=e−j(2πk/14)(4)X[k]. (d) The
sequence y[n]obtained by evaluating the 14-point IDFT
ofY[k]only in the interval 0 ≤n≤13.
324 CHAPTER 8 DISCRETE FOURIER TRANSFORM
Fig. 8-9(d). Now, clearly, y[n]=x [n−4]for 0≤n≤13. A longer DFT with N≥14
would also get the correct shifted signal, but would have extra zeros for n>13.
8-3.3 The Convolution Property for the DFT
One of the most important properties of the DTFT is that time-domain convolution
becomes frequency-domain multiplication in the DTFT, that is,
y[n]=h[n]∗x [n]DTFT←→Y(ejˆω)=H(ejˆω)X(ejˆω)
Continuing with our view that the DFT is a sampled version of the DTFT, we show that asimilar property holds for the DFT, but keeping in mind what we have just learned abouttime delay and the DFT, it is not surprising to learn that the inherent periodicity of theDFT/IDFT representation leads to special considerations.
Since the DFT/IDFT representation deals with ﬁnite-length sequences, we want to
study the convolution of two ﬁnite-length signals, each having a DFT representation.
Therefore, the convolution expression can be written as a ﬁnite sum
y[n]=
M−1/summationdisplay
m=0h[m]x [n−m] (8.29)
where we assume that h[n]=0 except in the interval n=0,1,...,M −1 andx[n]=0
except in the interval n=0,1,...,L −1; that is, h[n] is anM-point sequence and x[n]
is anL-point sequence. In Chapter 5, we learned that y[n]can be nonzero only in the
interval 0 ≤n≤L+M−2, so the length of the sequence y[n], counting the sample at
n=0, isL+M−1.
Now assume that we obtain a DFT Y[k]by sampling Y(ejˆω)at the DFT frequencies
ˆωk=(2πk/N), that is,
Y[k]=H(ejˆω)X(ejˆω)/vextendsingle/vextendsingle/vextendsingle/vextendsingle
ˆω=(2πk/N)=H(ej(2πk/N))X(ej(2πk/N))=H[k]X[k](8.30)
where all three DFTs are N-point DFTs. If the sequences x[n]andh[n] are not of the
same length, then at least the shorter one is assumed to be zero-padded to length N. Not
surprisingly, convolution of two ﬁnite-length sequences is represented by the DFT as the
product of their DFTs. However, we should not jump to conclusions because what theDFTY[k]=H [k]X[k]represents is not the ordinary convolution as in Chapter 5 and in
(8.29), but rather, the periodic convolution of the inherent periodic sequences ˜x[n]and
˜h[n] as in
˜y[n]= N−1/summationdisplay
m=0˜h[m]˜x[n−m]=1
NN−1/summationdisplay
k=0Y[k]ej(2π/N)kn(8.31)
where ˜y[n]is the IDFT of Y[k]. Note that in periodic (or circular) convolution, both
sequences have the same period (N)and the sum is over one period. The IDFT of Y[k]
8-3 INHERENT TIME-DOMAIN PERIODICITY OF x[n] IN THE DFT 325
is inherently periodic with period Nas we have already seen. Furthermore, (8.26) tells
us that the periodic sequence ˜y[n]is related to the sequence y[n]in (8.29) as
˜y[n]=∞/summationdisplay
r=−∞y[n+rN] (8.32)
Now we can determine the length Nthat is needed to get y[n]. Since the desired
convolution output y[n]in (8.29) has length L+M−1 samples, we would require
N≥L+M−1i fw ew a n t ˜y[n]=y [n]over the base interval 0 ≤n≤N−1. This can
be achieved by computing the DFTs X[k]andH[k]withNsatisfying this condition.
Zero-padding of both the sequences x[n]andh[n] to length Nis needed.
This convolution property is illustrated by the time-delay property of Section 8-3.2,
which is a special case of the convolution property. First, recall that if we have a delay-
by-n dsystem then its impulse response is h[n]=δ [n−nd], and
y[n]=h[n]∗x [n]=δ [n−nd]∗x[n]=x [n−nd]
In this case, the length of the sequence h[n] isnd+1 samples because we start counting
atn=0. Ifx[n]is anL-point sequence, then the total length of y[n]isnd+L.W eh a v e
shown that the DFT of h[n]=δ [n−nd]isH[k]=e−j(2π/N)kn d. Thus, the DFT product,
Y[k]=H [k]X[k]=e−j(2π/N)kn dX[k], is identical to what we would obtain using the
time-delay property for the DFT if N≥L+nd.
EXAMPLE 8-7 Convolution of Pulses
Suppose that x[n]is a length-10 rectangular pulse, and h[n] is a length-6 rectangular pulse.
From Chapter 5, we know that the convolution result has a trapezoidal shape. If we use10-point DFTs, it is possible to work out the answer analytically. The 10-point DFT ofx[n]isX[k]=10 δ[k], because x[n]is all ones and we can use the DFT pair in (8.13)
withk
0=0. Then we can carry out the multiplication of DFTs without knowing H[k].
Sinceδ[k]is nonzero only when k=0, we obtain
Y[k]=X[k]H[k]=10 δ[k]H[k]=10 H[0]δ[k]
The value of H[0]is the DFT coefﬁcient at k0=0, which is
H[0]=9/summationdisplay
n=0h[n] :1
e−j0.2π(0)n=6
Thus, we have Y[k]=60 δ[k]and we can take the length-10 IDFT to get y[n]
y[n]=1
109/summationdisplay
k=060δ[k]ej0.2πkn=6δ[0]ej0
/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
k=0 term=6 for n=0,1,...9
The only nonzero term in the sum is the one for k=0. The convolution result y[n]is a
constant which is not what we want.
326 CHAPTER 8 DISCRETE FOURIER TRANSFORM
−10 −5 0 5 16 21 3001
−10 0 16 3001
−10 0 16 3006
−10 0 1606(a)
(b)
(c)
(d)Time Index (n)y[n]˜y[n]˜x[n]˜h[n]
Figure 8-10 Illustration of convolving two rectangular
pulses with length-16 DFTs. (a) The inherent periodic
signal ˜h[n] corresponding to the 16-point DFT H[k]of
a length-6 pulse. (b) The inherent periodic signal ˜x[n]
corresponding to the 16-point DFT X[k]of a length-10
pulse. (c) The inherent periodic signal ˜y[n]
corresponding to Y[k]=H [k]X[k];˜y[n]is also equal
to the circular convolution deﬁned in (8.31). (d) The16-point sequence y[n]obtained by evaluating the
16-point IDFT of Y[k]only in the interval 0 ≤n≤15.
If we change the length of the DFTs to N=16, we can get the correct convolution of
the two rectangular pulses where the length is 10 +6−1=15. This case cannot be done
algebraically without a lot of tedious manipulations, so we would prefer to use MATLAB.
x = ones(1,10); h=[1,1,1,1,1,1];
y16 = ifft( fft( h, 16 ) .* fft( x, 16 ), 16);y10 = ifft( fft( h, 10 ) .* fft( x, 10 ), 10);
The results for the N=16 case are plotted in Fig. 8-10, but we omit the plots for
N=10 because the signal ˜y[n]is constant.
This example demonstrates the general result that periodic convolution as computed
using the DFT and IDFT can be identical to the ordinary convolution of two ﬁnite-length
sequences if the value of Nin the DFT/IDFT representation is greater than or equal to
the sum of the lengths of the two sequences minus one (i.e., N≥M+L−1).
8-4 Table of Discrete Fourier Transform Properties and Pairs
In this chapter, we have derived a number of useful transform pairs, and we have alsoderived several important properties of DFTs. Table 8-1 on p. 327 includes the DFT pairsthat we have derived previously.
8-5 SPECTRUM ANALYSIS OF DISCRETE PERIODIC SIGNALS 327
Table 8-1 Basic discrete Fourier transform pairs.
Table of DFT Pairs
Time-Domain: x[n] Frequency-Domain: X[k]
δ[n] 1
δ[n−nd] e−j(2πk/N)n d
rL[n]=u[n]−u[n −L]sin(1
2L(2πk/N))
sin(1
2(2πk/N))/bracehtipupleft/bracehtipdownright/bracehtipdownleft /bracehtipupright
=DL(2πk/N)e−j(2πk/N)(L−1)/2
rL[n]ej(2πk0/N)nDL(2π(k−k0)/N) e−j(2π(k−k0)/N)(L−1)/2
The basic properties of the DFT are what make it convenient to use in designing
and analyzing systems, so they are given in Table 8-2 on p. 328 for easy reference. It is
important to emphasize that these properties must all be interpreted in terms of the inherentperiodicity of the DFT/IDFT representation. For example, the time-delay property appliesto the inherent periodic sequence that we have denoted ˜x[n]and the convolution property
likewise concerns periodic convolution of the inherent periodic representations of x[n]
andh[n]. Some of the properties in Table 8-2 have not been derived or discussed in this
chapter. They are nevertheless true and are included for completeness. DEMO
Time-Frequency
Visualization
8-5 Spectrum Analysis of Discrete Periodic Signals
In Chapter 3, Section 3-6, the Fourier Series integral was presented as the operator
that “Fourier analyzes” a continuous-time periodic signal to extract its spectrum. The
resulting Fourier Series sum represents the periodic signal as a weighted sum of complexexponentials, and the frequencies of the complex exponentials are all integer multiples ofa fundamental frequency. In this section, we consider the Fourier analyzer for a discrete-time periodic signal by developing the Discrete Fourier Series (DFS) representation. Thekey to the DFS is the IDFT sum which synthesizes a periodic signal when evaluatedoutside of the 0 ≤n≤N−1 interval, and which is also a weighted sum of complex
exponentials whose frequencies are all integer multiples of 2 π/N . As a result, we can
interpret the DFT as a method of Fourier analysis that extracts the spectrum of a discrete-time (sampled) periodic signal ˜x[n]by computing the DFT of one period of its samples.
Once we have established the DFS, we are able to connect the spectrum analysis of aperiodic discrete-time signal to the spectrum of a periodic continuous-time signal.
7
7A similar relationship to the one that we will derive holds between the continuous-time Fourier transform
and the discrete-time Fourier transform.
328 CHAPTER 8 DISCRETE FOURIER TRANSFORM
Table 8-2 Basic discrete Fourier transform properties.
Table of DFT Properties
Property Name Time-Domain: x[n] Frequency-Domain: X[k]
Periodic x[n]=x [n+N] X[k]=X[k+N]
Linearity ax1[n]+bx 2[n] aX 1[k]+bX 2[k]
Conjugate Symmetry x[n]is real X[N−k]=X∗[k]
Conjugation x∗[n] X∗[N−k]
Time-Reversal x[((N−n))N] X[N−k]
Delay x[((n−nd))N] e−j(2πk/N)n dX[k]
Frequency Shift x[n]ej(2πk0/N)nX[k−k0]
Modulation x[n]cos((2 πk0/N)n)1
2X[k−k0]+1
2X[k+k0]
ConvolutionN−1/summationdisplay
m=0h[m]x [((n−m))N] H[k]X[k]
Parseval’s TheoremN−1/summationdisplay
n=0|x[n]|2=1
NN−1/summationdisplay
k=0|X[k]|2
8-5.1 Periodic Discrete-Time Signal: Discrete Fourier Series
As we showed in Section 8-3.1, the IDFT representation of a ﬁnite-length sequence x[n]
is inherently periodic with period N. When we use the IDFT to represent a ﬁnite-length
sequence we usually restrict the evaluation of the IDFT to the range 0 ≤n≤N−1.
However, if we evaluate the IDFT outside that range we obtain the periodic sequence
˜x[n]=˜ x[n+N],
˜x[n]=1
NN−1/summationdisplay
k=0X[k]ej(2πk/N)n=∞/summationdisplay
r=−∞x[n+rN] (8.33)
which in (8.33) is the inﬁnite repetition of the ﬁnite-length sequence x[n]whose N-point
DFT is X[k].
8-5 SPECTRUM ANALYSIS OF DISCRETE PERIODIC SIGNALS 329
Another notable fact about the IDFT summation (8.33) is that it is the sum of N
complex exponentials with uniformly spaced frequencies, ˆωk=(2π/N)k . In other words,
all the frequencies are integer multiples of ˆω1=(2π/N) . If we alter our point of view
away from the representation of a ﬁnite-length sequence and focus on the fact that the
N-point IDFT gives a periodic result when evaluated outside the base interval, then it
is reasonable also to call the representation in (8.33) the Discrete Fourier Series (DFS)
for the periodic signal ˜x[n]. Just as in the case of the Fourier series for continuous-time
signals discussed in Section 3-5, we now have a representation of a discrete-time periodic
signal as a sum of harmonic complex exponentials.8
We want to use the IDFT to synthesize a periodic signal but the usual Fourier Series
synthesis involves negative frequencies, so we need to reassign some indices to be negativefrequencies as in Section 8-2.2. When the periodic signal is real-valued (e.g., a sinusoid),then we would expect a synthesis formula with negative frequencies, as well as positivefrequencies, that is,
˜x[n]=
M/summationdisplay
m=−Mamej(2πm/N)nfor−∞<n<∞ (8.34)
In addition, the coefﬁcients {am}have complex conjugate symmetry, a−m=a∗
mwhen
˜x[n]is real. In the discrete-time case, the summation limit (M) must be ﬁnite because the
sum in (8.34) is equivalent to the IDFT (8.33) which has only Nterms, and is a general
representation for any periodic discrete-time signal whose period is N. The number of
terms in (8.34) is 2 M+1, so we must have 2 M≤N−1.
EXAMPLE 8-8 Synthesize a Periodic Signal from DFS
Suppose that a signal ˜x[n]is deﬁned with a DFS summation like (8.34) with speciﬁc values
for the coefﬁcients am=(m2−1).I fM =2, then
˜x[n]=2/summationdisplay
m=−2(m2−1)ej(2πm/N)nfor−∞<n<∞
For the case N=5, make a list of the values of ˜x[n]forn=0,1,2,...,10 to show that
˜x[n]has a period equal to 5.
Solution: The summation formula for ˜x[n]can be written out
˜x[n]=((−2 )2−1)ej(2π/5)(−2 )n+((−1)2−1)ej(2π/5)(−1)n+((0)2−1)ej(2π/5)(0)n
+((1)2−1)ej(2π/5)(1)n+((2)2−1)ej(2π/5)(2)n
=(4−1)ej(2π/5)(−2 )n+(−1)ej(2π/5)(0)n+(4−1)ej(2π/5)(2)n
=3ej(2π/5)(−2 )n−ej(2π/5)(0)n+3ej(2π/5)(2)n
=6 cos(4 πn/5)−1
8Recall that the Fourier Series synthesis formula for continuous-time signals (given in Chapter 3)
represents a periodic signal as a (possibly inﬁnite) sum of harmonic complex exponentials.
330 CHAPTER 8 DISCRETE FOURIER TRANSFORM
This expression can be evaluated by substituting integer values for nto obtain the
following list of values for 0 ≤n≤10:
˜x[n]={ 5,−5.045, 0.545, 0.545,−5.045, 5,−5.045, 0.545, 0.545,−5.045, 5}
Thus, we see that ˜x[n]repeats with a period of 5.
The coefﬁcients of the complex exponential terms (1/N)X [k]in (8.33) become the
Fourier Series coefﬁcients. We already know that the DFT coefﬁcients are periodic, that
is,X[k±N]=X[k]as shown in Fig. 8-3. Thus, we can identify the Fourier coefﬁcients
{am}in (8.34) with respect to those in (8.33) to obtain
am=⎧
⎨
⎩1
NX[m] m=0,1,2,...,M
1
NX[m+N]m=−1,−2,...,−M(8.35)
The end result is that we can write a DFS for a periodic discrete-time signal by using the
(scaled) DFT as an analysis summation to obtain the {am}coefﬁcients from one period
of the signal.
ak=X[k]
N=1
NN−1/summationdisplay
n=0˜x[n]e−j(2πk/N)n(8.36a)
˜x[n]=N−1/summationdisplay
k=0akej(2πk/N)n=M/summationdisplay
m=−Mamej(2πm/N)n(for 2M+1≤N) (8.36b)
In the DFS, the factor of (1/N) is associated with the analysis summation (8.36a).
EXAMPLE 8-9 Conjugate Symmetry of DFS Coefﬁcients
When determining the DFS coefﬁcients {am}from the DFT X[k], there are two cases to
consider: Neven and Nodd. The notation is much easier when Nis odd because we can
writeN=2M+1 where Mis an integer. For example, when N=5w eh a v eM =2,
so the Fourier Series would be
˜x[n]=a 0+a1ej0.4πn+a2ej0.8πn+a−1e−j0.4πn+a−2e−j0.8πn
The 5-point DFT of one period of ˜x[n]is{Na 0,Na 1,Na 2,Na −2,Na −1}. On the other
hand, when Nis even there is a complication. For example, when N=4 the summation
in (8.34) implies that 2 M≤3, orM=1, but using the 4-point IDFT we can write
˜x[n]=1
NX[0]+1
NX[1]ej0.5πn+1
NX[2]ejπn+1
NX[3]ej1.5πn
so the DFS representation of ˜x[n]would be
˜x[n]=a 0+a1ej0.5πn+a2ejπn+a−1e−j0.5πn
8-5 SPECTRUM ANALYSIS OF DISCRETE PERIODIC SIGNALS 331
The case where a2/negationslash=0 is a special case that is similar to the ambiguity with X[N/2]
treated in Section 8-2.3.1. The value of a2(orX[N/2]) is real when the signal is real, so
it does not require a complex conjugate term in negative frequency.
EXAMPLE 8-10 Period of a Discrete-Time Sinusoid
We might expect the fundamental period of a periodic signal to be the inverse of its
fundamental frequency because this is true for continuous-time signals. However, for
discrete-time signals this fact is often not true. The reason for this uncertainty is that the
period of the discrete-time signal must be an integer.
Consider the signal ˜x1[n]=cos(0 .125πn) , whose frequency is π/8 rad. The period
of this signal is N=16; it is also the shortest period so we want to call 16 the
fundamental period. If we take the 16-point DFT of one period of ˜x1[n], we get
X1[k]=8δ [k−1]+8δ [k−15]. Then we can convert these DFT coefﬁcients into a
DFS representation with a1=8/16=1
2anda−1=8/16=1
2
˜x1[n]=1
2ej(2π/16)n+1
2ej(2π(−1)/16)n
Now, consider the signal ˜x2[n]=cos(0 .625πn) , whose frequency is 5π/ 8 rad;
its period is not 2 π/(5π/8)=16/5. Its period is also N=16, and this is the
shortest integer period. If we take the 16-point DFT of one period of ˜x2[n], we get
X2[k]=8δ [k−5]+8δ [k−11]. Then we can convert these DFT coefﬁcients into a DFS
representation with a5=8/16=1
2anda−5=8/16=1
2
˜x2[n]=1
2ej(2π(5)/16)n+1
2ej(2π(−5)/16)n
Our problem is that the period of ˜x2[n]being 16 implies that the fundamental frequency
is 2π/16 so a5should be the ﬁfth harmonic, but the deﬁnition of the cosine ˜x2[n]has
only one frequency 10 π/16 which has to be the fundamental frequency. In fact, this
inconsistency happens whenever we take the DFT of a sinusoid with frequency 2 πk0/N,
and the integer k0is not a factor of N.
Therefore, this example illustrates that it is impossible to deﬁne a simple consistent
relationship between the fundamental period and fundamental frequency of a periodicdiscrete-time signal.
8-5.2 Sampling Bandlimited Periodic Signals
The next task is to relate the DFS to the continuous-time Fourier Series. The connection is
frequency scaling when sampling above the Nyquist rate (as done in Chapter 4). Considera periodic bandlimited continuous-time signal represented by the following ﬁnite Fourier
series
x(t)= M/summationdisplay
m=−Mamej2πf0mt−∞<t<∞, (8.37)
332 CHAPTER 8 DISCRETE FOURIER TRANSFORM
where f0is the fundamental frequency (in Hz) and mdenotes the integer index of
summation.9This continuous-time signal is bandlimited because there is a maximum
frequency, 2 πMf 0rad/s, in the expression (8.37) for x(t). When sampling x(t), we must
havefs>2Mf 0Hz to satisfy the Nyquist rate criterion.
When x(t) is sampled at a rate fs=1/Ts, the sampled signal ˜x[n]is a sum of
discrete-time complex exponentials obtained from (8.37)
˜x[n]=x(nT s)=M/summationdisplay
m=−Mamej2πf0mnTsfor−∞<n<∞. (8.38)
The discrete-time signal deﬁned in (8.38) might not be periodic, but if we restrict our
attention to the special case where fs=Nf0, then ˜x[n]is guaranteed to be periodic with
a period of N. The number of samples in each period (N)is equal to the duration of the
fundamental period (T0)times the sampling rate fs, that is, N=fs/f0=(fs)(T0)is an
integer. We can invert Nto write (1/N) =(1/f s)(1/T 0)=(Ts)(f0). When we make the
substitution f0Ts=1/N in (8.38), the expression for ˜x[n]becomes
˜x[n]=M/summationdisplay
m=−Mamej(2π/N)mnfor−∞<n<∞. (8.39)
We recognize (8.39) as the Discrete Fourier Series of a periodic signal whose period is N.
Comparing (8.37) and (8.39), we see that the Fourier Series coefﬁcients amare identical
forx(t) and˜x[n].
If we want to compute the DFS coefﬁcients from the samples x(nT s)over one period,
the number of samples in one period (N) must be large enough so that we can use the
DFT of ˜x[n]over one period to extract am. Thus, we need to have at least 2 M+1 DFT
coefﬁcients which can be used to get the 2 M+1 DFS coefﬁcients amfromX[k]using
(8.35). The condition given in (8.36b) requires N≥2M+1. In addition, the fact that
f0Ts=1/N can be rewritten as fs=Nf0means that the sampling rate is Ntimes the
fundamental frequency of x(t). The Sampling Theorem requirement for no aliasing is
fs>2Mf 0, that is, the sampling rate must be greater than the Nyquist rate, which is
twice the highest frequency in the bandlimited signal x(t). Since fs=Nf0, the Nyquist
rate condition implies that N> 2Mwhich is the same requirement. Therefore, in the
fs=Nf0case, the number of samples per period must be greater than twice the number
of (positive) frequency components in the continuous-time Fourier series representation
ofx(t).
EXAMPLE 8-11 Fourier Series of a Sampled Signal
Suppose that we are given the following continuous-time signal
x(t)=2 cos(42 πt+0.5π)+4 cos(18πt)
9In this chapter, we use the index mfor the Fourier Series to distinguish it from the IDFT where we want
to use the index k. Previously, in Chapter 3, we used kfor the continuous-time Fourier Series summation.
8-5 SPECTRUM ANALYSIS OF DISCRETE PERIODIC SIGNALS 333
and we want to determine the Fourier Series representation of the resulting discrete-time
signal. In particular, we would like to determine which Fourier Series coefﬁcients arenonzero. We need a sampling rate that is an integer multiple of the fundamental frequencyand is also greater than the Nyquist rate, which is 42 Hz. The two frequency componentsinx(t) are at 9 Hz and 21 Hz, so the fundamental frequency is the least common divisor,
which is f
0=3 Hz. We must pick N> 14 to satisfy the Nyquist rate condition, so for
this example we use fs=16×3=48 Hz.
The sum of sinusoids can be converted to a sum of complex exponentials,
x(t)=ej(42πt+0.5π)+e−j(42πt+0.5π)+2ej(18πt)+2e−j(18πt)
and then (8.38) can be employed to represent the sampled signal ˜x[n]=x(n/f s)as
˜x[n]=ej(42π(n/48)+0 .5π)+e−j(42π(n/48)+0 .5π)+2ej(18π(n/48))+2e−j(18π(n/48))(8.40)
The four discrete-time frequencies are ˆω=±(42/48)π and±(18/48)π . In order to write
(8.40) in the summation form of (8.39), we use N=16. In (8.40), we want to emphasize
the term (2π/N) =(2π/16)in the exponents, so we write
˜x[n]=ej((2π/16)7n+0 .5π)+e−j(( 2π/16)7n+0 .5π)+2ej((2π/16)3n)+2e−j(( 2π/16)3n)(8.41)
Now we can recognize this sum of four terms as a special case of (8.39) with N=16 and
M=7 (i.e., the range of the sum is −7≤m≤7). The only nonzero Fourier coefﬁcients
in (8.39) are at those for m=±7,±3, and their values are a3=2,a7=ej0.5π=j,
a−3=2, and a−7=e−j0.5π=−j.
These relationships between the DFS (8.39) and the continuous-time Fourier Series
(8.37), and also between the DFS and the DFT, are illustrated in Fig. 8-11 whereFig. 8-11(a) shows a “typical” spectrum for a bandlimited continuous-time periodic signal(as a function of f), and Fig. 8-11(b) shows the spectrum for the corresponding periodic
sampled signal (as a function of ˆωand also k). Notice the alias images of the original
spectrum on either side of the base band where all the frequencies lie in the interval
−π< ˆω
m≤π. When fs>2Mf 0, the sampling rate fsis greater than the Nyquist rate
and the entire continuous-time spectrum is found in the base band because no aliasingdistortion occurs.
We know from Chapter 4 that the spectrum of a sampled signal is periodic in ˆωwith
a period of 2 π. This attribute is shown in Fig. 8-11(b). Since the spectrum is periodic in
ˆωwith a period of 2 πwith the spectral lines located at frequencies ˆω
k=(2π/N)k ,
an equivalent statement is that the spectrum is periodic in kwith a period equal to
N. To emphasize this point, Fig. 8-11(b) shows two horizontal plotting axes: one for
normalized frequency ˆωand the other for the indices kthat appear in ˆωk. The DFT
shown in Fig. 8-11(c) is also subject to the same periodicity in k, so the DFT coefﬁcients
for 0≤k≤N−1 can be related to the DFS coefﬁcients via am=(1/N)X [m], for
−M≤m≤M.
334 CHAPTER 8 DISCRETE FOURIER TRANSFORM
(a)
(b)
(c)aM aMaM
a2 a2 a2a2
a1 a1 a1a1
a0 a0 a0a0
a1 a1 a1a1
a2 a2 a2a2
aM aMaM
Mf0 f00f0 Mf0f0 f0
f
(Baseband) (Alias) (Alias)
N2N2
NN
NC2NC2
NCMNCM
MM
22
11
00
11
22
MM
NMNM
N2N2
NN
kk!M!M
!2!2
!1!1
00
O!1O!1
O!2O!2
O!MO!M
!M!M
!2!2
CO!2CO!2
O!O!
X0
X1
X2
XM XNMXN2XN1akD1
NXkDFS for QxŒFourier Series for x.t/
DFT coefﬁcients: XkDXŒfsDNf0 fs
Figure 8-11 Frequency-domain view of sampling a periodic signal. (a) Line spectrum of a bandlimited continuous-time
periodic signal whose fundamental frequency is f0. (b) Line spectrum of the discrete-time periodic signal ˜x[n]obtained
by sampling the signal in (a) above the Nyquist rate at fs=Nf0where N> 2M, giving lines at ˆωk=(2π/N)k .
(c) DFT coefﬁcients shown as a line spectrum, where the DFT is taken over one period of the periodic signal ˜x[n]. The
DFT coefﬁcients are denoted with subscripts (i.e., Xkinstead of X[k]), to enhance the readability of the labels.
8-5.3 Spectrum Analysis of Periodic Signals
In this section, we show how the DFT can be used to analyze continuous-time periodic
signals that have been sampled. As a speciﬁc example, consider the periodic continuous-time signal
x
c(t)=0.1223 cos(2 π(200)t+1.5077)
+0.2942 cos(2 π(400)t+1.8769)
+0.4884 cos(2 π(500)t−0.1852)
+0.1362 cos(2 π(1600)t−1.4488)
+0.0472 cos(2 π(1700)t) (8.42)
The fundamental frequency of this signal is ω0=2π(100)rad/s, and the signal
consists of ﬁve harmonics at 2, 4, 5, 16, and 17 times the fundamental. This signal isthe same as the synthetic vowel studied in Section 3-4.1. If we sample x
c(t)at the rate
8-5 SPECTRUM ANALYSIS OF DISCRETE PERIODIC SIGNALS 335
0 10 20 30 40 50 6001
0 5 10 15 20 25 30 35 400510
0 5 10 15 20 25 30 35 40021
210 20 30 40
(a)
(b)
(c)Time Index .n/
Frequency Index .k/jXŒ j
†XŒxc.t/
xŒ
Figure 8-12 Periodic sequence x[n]in
(8.43) and the corresponding 40-point DFT
spectrum X[k]. (a) Dark region indicates the
40-point interval (starting at n=0) taken for
analysis. (b) DFT magnitude spectrum. (c)DFT phase spectrum.
fs=4000 Hz, we obtain exactly 40 samples per period since fs=4000 Hz is exactly
40 times f0=100 Hz. The sampled discrete-time signal x[n]=x c(n/4000 )is
˜x[n]=0 .1223 cos(0 .1πn+1.5077)
+0.2942 cos(0 .2πn+1.8769)
+0.4884 cos(0 .25πn −0.1852)
+0.1362 cos(0 .8πn−1.4488)
+0.0472 cos(0 .85πn) (8.43)
The plot of ˜x[n]in Fig. 8-12(a) shows that it is periodic with a period of 40 (i.e.,
˜x[n]=˜ x[n+40]). Another way to arrive at the same conclusion is to note that ˜x[n]
has frequencies that are all multiples of ˆω0=0.05π=2π/40 which is therefore the
fundamental frequency. Like the continuous-time case, ˜x[n]in (8.43) has harmonics at
multiples of the normalized fundamental frequency numbered 2, 4, 5, 16, and 17.
Now we consider taking the DFT of ˜x[n]with a DFT length equal to the period.
First, one length-40 period of ˜x[n]from Fig. 8-12(a) is extracted and used in a 40-point
DFT (8.4). The 40 DFT coefﬁcients X[k]obtained are shown as magnitude and phase in
Figs. 8-12(b) and (c), respectively. These 40 DFT coefﬁcients represent one period of the
336 CHAPTER 8 DISCRETE FOURIER TRANSFORM
sequence ˜x[n]exactly through the synthesis formula of the IDFT (8.5). The DFS is also
a representation of ˜x[n]as a sum of complex exponentials at the harmonic frequencies,
so the DFT coefﬁcients X[k]are related to the DFS coefﬁcients as shown in (8.35).
EXERCISE 8.9 Use the results of Section 8-5.2, Exercise 8.8 to determine a formula for X[k], the 40-
point DFT of x[n]in (8.43). Use 40 points of x[n]taken over the period 0 ≤n≤39.
Verify that some of the nonzero DFT values are
X[k]=⎧
⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩0.06115(40 )e
j1.5077k=2
0.1471(40 )ej1.8769k=4
0.2442(40)e−j0.1852k=5
0.0681(40 )e−j1.4488k=16
0.0236(40 )k =17(8.44)
Determine the other nonzero values of X[k], and also how many DFT coefﬁcients
X[k]are equal to zero.
EXERCISE 8.10 Show that the IDFT of X[k]deﬁned in Exercise 8.9 gives x[n]in (8.43). Furthermore,
show that the signal x[n]obtained via the IDFT is periodic with period N.
The plots of Figs. 8-12(b) and (c) are the spectrum for the sum of ﬁve sinusoids, or
ten complex exponentials, so Fig. 8-12(b) consists of ten spectral lines, each one being
just like the plot in Fig. 8-2 which shows the magnitude of the DFT for a single complexexponential signal of the form
x[n]=e
j((2π/N)k 0n+ϕ)n=0,1,...,N −1
where k0is an integer.
We have seen that the DFT can be used to obtain the DFS when the DFT length
exactly matches the period of x[n]. Without an exact match, the DFT result might be
a reasonable approximation, but it is not exact. To illustrate this point, consider a casewhere the sampling frequency is not an integer multiple of the fundamental frequency,that is, f
s/f0is not an integer and, therefore, cannot be equal to the DFT length. An
example is sampling the signal in (8.42) at fs=3950 Hz (i.e., fs/f0=39.5), so the plot
in Fig. 8-13(a) seems to have a period close to 40, but it is not exactly equal to 40.
If we proceed as though the period were 40, and compute the 40-point DFT of
N=40 samples of the sampled signal, we obtain the plot in Fig. 8-13(b). This DFT
plot is somewhat similar to the DFT in Fig. 8-12(b), but none of the DFT coefﬁcientsare exactly zero. Instead, each cosine produces a contribution to the DFT that has manysmall values spread out over the entire range 0 ≤k≤N−1, as was seen in Fig. 8-1.
The amplitude of the DFT values tend to peak around the DFT indices closest to the
same peak frequencies as before, (2πf
0/fs)kwhere k=2,4,5,16,17. However, the
8-6 WINDOWS 337
0 10 20 30 40 50 6001
0 5 10 15 20 25 30 35 400510
0 5 10 15 20 25 30 35 40051
510 20 30 40
(a)
(b)
(c)Time Index .n/
Frequency Index .k/jXŒ j
†XŒxc.t/
xŒ
Figure 8-13 Discrete-time sequence x[n]
whose period is approximately equal to 40
obtained by sampling x(t) in (8.42) at
fs=3950 Hz, and the corresponding 40-point
DFT spectrum X[k]. (a) Dark region indicates
40-point interval (starting at n=0) taken for
analysis. (b) DFT magnitude spectrum. (c)DFT phase spectrum.
presence of many additional spectral components gives a “blurred” (or imprecise) spectral
representation of the original continuous-time signal.
EXERCISE 8.11 Use MATLAB to synthesize N=40 samples of xc(t)in (8.42) with fs=4100 Hz
instead of 4000 Hz; call the result x4100 . Next, use the MATLAB statement
X41=fft(x4100,40) to compute the 40-point DFT. Finally, make a plot of the
DFT magnitude stem(0:39,abs(X41)) , and compare the resulting magnitude
spectrum to that of Fig. 8-12(b). Comment on expected zero regions of the DFT.
8-6 Windows
Since the DFT is a ﬁnite sum, it can only be used to analyze ﬁnite-length signals. Eveninﬁnite-length periodic signals that have a DFS are analyzed by taking the DFT of oneperiod. We have examined the case where the ﬁnite-length signal is the impulse responseof an FIR system, and have shown that samples of the frequency response, or equivalentlythe DTFT, can be computed by zero-padding and taking a long DFT. Remember from
338 CHAPTER 8 DISCRETE FOURIER TRANSFORM
Section 8-2.4 that the N-point DFT of a ﬁnite-length sequence is identical to the DTFT
of the sequence evaluated at frequencies ˆωk=2πk/N withk=0,1,...,N −1, that is,
X[k]=X(ej(2πk/N))=L−1/summationdisplay
n=0x[n]e−j(2πk/N)n(8.45)
We recognized that X[k]=X(ej(2πk/N))even if L<N since N−Lzero samples
are effectively appended to the end of the sequence x[n]. This operation was called
zero-padding in Section 8-2.4. In MATLAB, the DFT is computed by the function
fft(x,N) , which automatically zero-pads the sequence if the sequence length is smaller
than the DFT length.
In this section, we will study another aspect of ﬁnite-length signals, which is their
use as windows for local spectrum analysis of short sections of very long signals. The
concept of windowing is widely used in signal processing. In fact, it has already been
discussed in Section 7-4 for FIR ﬁlter design. The basic idea is to extract a ﬁnite section of
a longer signal x[n]via multiplication w[n]x[n+n0], where w[n]is the window function
andn0is the starting index of the extracted section. The product signal w[n]x[n+n0]is
a ﬁnite-length sequence if the window function w[n]is zero outside of an interval. The
simplest window function is the L-point rectangular window deﬁned as
wr[n]=/braceleftBigg
10≤n≤L−1
0 elsewhere(8.46)
The essential idea of windowing is that the product wr[n]x[n+n0]extracts Lvalues
from the signal x[n]starting at n=n0. Thus, the following expressions are equivalent
wr[n]x[n+n0]=⎧
⎪⎪⎨
⎪⎪⎩0 n<0
   1
wr[n]x[n+n0]0≤n≤L−1
0 n≥L(8.47)
The name window comes from the idea that we can only “see” the Lvalues of the signal
x[n+n0]within the window interval when we “look” through the window. Multiplying
byw[n]is looking through the window. When we change n0, the signal shifts, and we
see a different length-L section of the signal.
The nonzero values of the window function do not have to be all ones, but they
should be positive. For example, the symmetric L-point Hann, or von Hann, window10is
deﬁned as
wh[n]=/braceleftBigg
0.5−0.5 cos(2 π(n+1)/(L+1)) 0≤n≤L−1
0 elsewhere(8.48)
10The Hann window is named for the Austrian scientist Julius von Hann. This window is often called the
“hanning” window. Sometimes, the Hann window formula is given such that wh[0]=0, but our deﬁnition
produces all positive values for wh[n].
8-6 WINDOWS 339
0 5 10 15 20 2501
/NUL5
TimeIndex.n/whŒn/c1411
2
Figure 8-14 Time-domain plot of L=20 Hann
window. The window is zero for n<0 and n≥20.
10
102020
/EM
2/EM
2
/EM/EM
–/EM
2–/EM3/EM
22/EM
00
00
(a)
(b)jWh.ejO!/jjWh.ejO!/j
Frequenc y.O!/Figure 8-15 DTFT of two Hann windows; length
L=20 (orange lines), and length L=40
(black/gray lines). (a) As computed by 1024-point
FFT with zero padding. (b) As plotted with DFTvalues reordered to place ˆω=0 in the middle. Gray
and light orange indicate negative frequency
components.
The stem plot of wh[n]forL=20 in Fig. 8-14 shows that the window values are close
to one in the middle (at n=9,10) and taper off near the ends. In MATLAB the function
hanning(L) computes the window values as in (8.48).11
8-6.1 DTFT of Windows
Windows are used often in spectrum analysis because they have desirable properties in
the frequency domain. Thus it is worth studying the DTFT of a few common windows.
We already know the DTFT of the rectangular window—it involves the Dirichlet form.
Wr(ejˆω)=DL(ˆω)e−j(L−1)ˆω/2=sin(1
2Lˆω)
sin(1
2ˆω)e−jˆω(L−1)/2
For the Hamming and von Hann windows, the analytic formulas for the DTFT do not
provide much insight, so we prefer to obtain the DTFT numerically and make plots aftercomputing a zero-padded DFT.
Figure 8-15 shows plots of the magnitude of the DTFT for two Hann windows with
lengths L=20 and L=40. The DTFTs were obtained using a 1024-point DFT with zero
padding. The 1024 frequency samples enable MATLAB’s
plot function to draw a smooth
curve even though the sample values are connected by straight lines. Figure 8-15(b) shows
11A related window is the symmetric L-point Hamming window which was deﬁned and discussed in
Section 7-4; its values are generated by the MATLAB function hamming(L).
340 CHAPTER 8 DISCRETE FOURIER TRANSFORM
that the DTFT of the Hann window is concentrated near ˆω=0. The main lobe around
ˆω=0 covers the range −4π/(L+1)<ˆω< 4π/(L+1); outside of this main lobe region
the DTFT is very close to zero.
When we compare the DTFTs |Wh(ejˆω)|in Fig. 8-15(b) for the two different window
lengths, we see that the DTFT magnitude becomes more concentrated around ˆω=0a s
we increase L. It can be shown that the ﬁrst zero of |Wh(ejˆω)|occurs at ˆω=4π/(L+1)
for the Hann window. Thus, increasing Lfrom 20 to 40 cuts the width of the main lobe in
half (approximately). The peak amplitude at ˆω=0 is also approximately doubled, going
from 10.5 to 20.5, which is consistent with the fact that, the general formula for the peak
is1
2(L+1). Plotting |Wh(ejˆω)|allows us to verify these results.
EXERCISE 8.12 A property of the DTFT is that the DC value ( ˆω=0) of the DTFT is equal to the sum
of all the signal values in the time domain. Use the deﬁnition of the forward DTFTto prove this fact, which could then be used to determine W
h(ej0).
Windows are used to extract sections of longer signals.An illustrative case is extracting
a section of a sinusoid for spectrum analysis, which involves multiplying the sinusoid bythe window and taking the DFT with zero padding to obtain samples of the DTFT. Withinthis context there are two questions that should be answered: ﬁrst, how to choose a goodwindow function, and second, how to choose the window length.
For the ﬁrst question, consider an example that compares the rectangular window
to the Hann window. Suppose that each window is applied to a sinusoid as x
w[n]=
w[n]cos(0.4πn), with a window length of 40. Since the window is multiplied by a
cosine, the frequency-shifting property of the DTFT predicts that the result will be thesum of two frequency-shifted copies of the DTFT of the window, that is,
X
w(ejˆω)=1
2W(ej(ˆω−0.4π))+1
2W(ej(ˆω+0.4π)) (8.49)
where W(ejˆω)is the DTFT of the window. Figure 8-16 shows the results, and it is easy
to see the frequency shifting because the main lobes are centered at ±0.4π. For the
rectangular window shown in Fig. 8-16(a), the main lobe is narrow, extending over therange−2π/L≤ˆω≤2π/L if measured between the ﬁrst zero crossings on either side of
the peak. However, the DTFT magnitude in Fig. 8-16(a) also exhibits many smaller lobesacross the entire frequency range. These are called sidelobes. For the rectangular window
these sidelobes are rather high and are the main reason that this window is consideredinferior to most others. On the other hand, the Hann window DTFT shown in Fig. 8-16(b)has a wider main lobe, but much smaller sidelobes. The main lobe of the Hann windowDTFT extends over the range −4π/(L+1)≤ˆω≤4π/(L+1)when measured between
the ﬁrst zero crossings. Thus, the Hann window of length Lhas a frequency-domain
width that is approximately twice that of a rectangular window of the same length. Thesidelobes of the Hann DTFT magnitude in Fig. 8-16(b) are less than 1% of the peakheights.
If we pause to ask ourselves what the ideal DTFT should be for a windowed sinusoid
of frequency ˆω
0, the answer is likely to be that we want to see only two spectrum lines
8-6 WINDOWS 341
10
51020
––
––
––
––
––
00
00
(a)
(b)Magnitude Magnitude
Frequency .O!/Figure 8-16 DTFT magnitudes of a
windowed sinusoid via 1000-point DFT. (a)
L=40 rectangular window (peak heights
are 20). (b) L=40 Hann window (peak
heights are 10.25). The sinusoid frequency is0.4πrad.
at±ˆω0. In other words, the ideal main lobe should be very narrow (concentrated at the
correct frequencies ±ˆω0), and the ideal sidelobes should be zero (or nearly zero). It turns
out that these two expectations are in conﬂict when using ﬁnite-length windows, because
it is known that reducing the sidelobes can only be done at the expense of broadening themain lobe.
In addition, a comparison of the two windowed DTFTs in Fig. 8-16 shows that the
peak heights are different. For the Hann window, we have already observed that thepeak height is
1
2(L+1); for the rectangular window it is L. In either case, the window
is contributing a known scale factor to the result. If the objective is spectrum analysis ofa sinusoid, as in this example, we know that the result should be a spectrum line whoseheight is half the amplitude of the sinusoid, or
1
2in the unit-amplitude case. In Fig. 8-16(a)
dividing by L=40 gives1
2, and also in Fig. 8-16(b) dividing by1
2(L+1)=20.5
gives1
2.
For the second question about length of the window, Fig. 8-15 demonstrates that
the width of the main lobe in the DTFT is inversely proportional to the window length.
We continue with the same example of spectrum analysis of a windowed unit-amplitude
sinusoid, but this time use two different Hann windows with lengths 20 and 40. Figure8-17 shows the resulting scaled DTFTs, where the known window scale factors have beendivided out, so the peak values are
1
2. If the main lobe width is measured between ﬁrst
zero crossings, then for Fig. 8-17(a) the main lobe extends from 0 .2πto 0.6π, and in
Fig. 8-17(b) from 0 .3πto 0.5π. Thus for L=20, the main lobe width /Delta1ˆωis/Delta1ˆω≈0.4π,
and for L=40,/Delta1ˆω≈0.2π. The dependence of /Delta1ˆωonLis an inverse relationship which
can be approximated12as/Delta1ˆω≈8π/L .
12A precise analysis would show that the ﬁrst zero crossings are at ±4π/(L+1), so the exact relationship
is 8π/(L +1).F o rL>30, the difference in the two formulas is less than 0.1%, and it is easier to remember
inversely proportional to L.
342 CHAPTER 8 DISCRETE FOURIER TRANSFORM
1
21
2
––
––
––
––
––
00
00
(a)
(b)Magnitude Magnitude
Frequency .O!/Figure 8-17 Scaled DTFT of windowed
unit-amplitude sinusoid via 1000-point DFT.
(a)L=20 Hann window scaled by 1/5.25.
(b)L=40 Hann window scaled by 1/10 .25.
Sinusoid frequency is 0 .4πrad.
EXAMPLE 8-12 Sum of Two Sinusoids
The importance of analyzing the frequency-domain window characteristics becomes clear
when we consider signals that are composed of sums of sinusoids. If we have a signal
with two frequencies
x[n]=A 1cosˆω1n+A2cosˆω2n
where ˆω1<ˆω2, then the windowed signal would be
xw[n]=w [n]x[n]=A 1w[n]cosˆω1n+A2w[n]cosˆω2n
and the corresponding DTFT would be
Xw(ejˆω)=A1
2W(ej(ˆω−ˆω1))+A1
2W(ej(ˆω+ˆω1))+A2
2W(ej(ˆω−ˆω2))+A2
2W(ej(ˆω+ˆω2))(8.50)
If we want to compute samples of Xw(ejˆω)in order to estimate ˆω1andˆω2, the main lobes
of the terms in (8.50) should not overlap. If the window is a Hann window of main lobewidth 8π/L , the main lobes do not overlap if ˆω
2−ˆω1>8π/L . In this case, we would
obtain distinct peaks at ±ˆω1and±ˆω2and the peak heights are nearly equal to1
2A1and
1
2A2. When there are two distinct peaks in the DTFT, we say that the two frequencies
areresolved. The effect of window length on spectrum resolution is discussed further in
Section 8-7.4.1.
8-7 The Spectrogram
We have seen that the DFT can compute exact frequency-domain representations of
both periodic and ﬁnite-length discrete-time signals. An equally important case occurs
8-7 THE SPECTROGRAM 343
when the sampled signal is indeﬁnitely long, but not necessarily periodic. Then there
are two different viewpoints to consider: the long signal has the same global spectral
content for its entire duration, or the long signal is actually the concatenation of manyshort signals with changing local spectral content. In the ﬁrst case, we might be able to
analyze the signal mathematically with the DTFT, but we cannot numerically calculate its
frequency domain representation unless the long signal is actually a ﬁnite-length signal.
Then we could compute its DFT but we might have to wait an inordinately long time
just to acquire all the samples, and even having done so, we would then be faced with ahuge DFT computation. This would be unacceptable in a real-time system that needs toprocess signals on line. When the long signal is the concatenation of many short signals,the appropriate frequency-domain representation would be the collection of many short-length DFTs. Then the temporal variations of the local frequency content would stand
out. The spectrogram arises from this viewpoint where a short-length DFT is used torepeatedly analyze different short sections of a longer signal.
Good examples of indeﬁnitely long signals are audio signals such as speech or music.
In both of these cases, it is the temporal variation of the frequency content that is of interest.
The changing pitch and timbre of speech is how information is encoded in human speech.
Likewise, we have already seen that music can be synthesized as a succession of tonecombinations held nearly constant for short time intervals. For audio signals we may havedigital recordings that give very long sequences obtained by sampling for many minutesor even hours. For example, one hour of stereophonic music sampled at 44.1 kHz wouldbe represented by 44 ,100×60×60=158,760 ,000 samples per channel. If we want
to compute the (global) DFT of the entire one hour of audio, the closest power-of-twoFFT needed would be N=2
28=268,435,456 per channel. On the other hand, the local
spectrum approach above would use short-length FFTs to analyze short time segmentswithin the long signal. This is reasonable (and generally preferable) because a longrecording probably contains a succession of short passages where the spectral contentdoes not vary. It might even be true that there is a natural segment length for the audiosignal that will dictate the FFT length.
8-7.1 An Illustrative Example
To examine the points made above, we shall study a signal whose spectral properties
vary with time. We begin by synthesizing a continuous-time signal that consists offour contiguous time intervals of cosine waves of different amplitudes and constantfrequencies. Such a signal could be described by the equation
x(t)=⎧
⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩5 cos(2 πf
0t) 0≤t<T 1
2 cos(2 πf1t) T 1≤t<T 2
2 cos(2 πf2t) T 2≤t<T 3
0.5 cos(2 πf3t) T 3≤t<T 4
··· T4≤t(8.51)
The signal x(t) begins with a T1-second interval of a cosine signal of amplitude 5 and
frequency f0Hz. At t=T1the waveform switches to a cosine of amplitude 2 and
344 CHAPTER 8 DISCRETE FOURIER TRANSFORM
frequency f1, and retains these parameters throughout the interval T1≤t<T 2. The
last two intervals switch to different amplitude and frequency parameters at T2andT3
as described by (8.51). The signal might continue indeﬁnitely with changing parameters
aftert=T4, but it is sufﬁcient to limit attention to the ﬁrst four time intervals.
For a particular sampling frequency fs, the resulting sampled signal would be
x[m]=x(m/f s)=⎧
⎪⎪⎨
⎪⎪⎩5 cos( ˆω
0m) 0≤m≤499
2 cos( ˆω1m) 500≤m≤2999
2 cos( ˆω2m) 3000≤m≤4999
0.5 cos( ˆω3m) 5000≤m≤9999(8.52)
where ˆω0=2πf0/fs,ˆω1=2πf1/fs,ˆω2=2πf2/fs, andˆω3=2πf3/fsare dimension-
less frequency quantities, and the frequencies change at T1fs=500,T2fs=3000,
T3fs=5000, and T4fs=10,000 samples. The normalized frequencies ˆω0=0.211π ,
ˆω1=0.111π ,ˆω2=0.8π, and ˆω3=0.4πare obtained when fs=2000 Hz and
f0=211 Hz, f1=111,f2=800, and f3=400 Hz. However, other values of f0,f1,f2,
f3, andfscould give the same normalized frequencies and, therefore, the same sequence
of samples.
EXERCISE 8.13 Suppose that the sampling frequency is fs=1000 Hz. What values of f0,f1f2, and
f3in (8.51) normalize to the values ˆω0=0.211π ,ˆω1=0.111π ,ˆω2=0.8π, and
ˆω3=0.4πin (8.52)?
EXERCISE 8.14 Use MATLAB to synthesize the sampled signal x[m]in (8.52) with frequencies
ˆω0=0.211π ,ˆω1=0.111π ,ˆω2=0.8π, and ˆω3=0.4π, and then use the D-to-A
converter on your computer ( soundsc in MATLAB) with fs=2000 Hz to listen to
x(t)in (8.51). During the listening observe the differences among the four segments of
the signal. Is what you hear completely consistent with the speciﬁed signal parameters
(duration, frequency, intensity) given above for (8.51)?
Now suppose that we compute the DFT of the entire 10,000-point sequence x[m]
in (8.52) using zero padding with N=16,384. The resulting magnitude of the length-
16,384 DFT is plotted in Fig. 8-18. The obvious features in this ﬁgure are four narrowpeaks and these give some clues as to the nature of the signal x[n], but the interpretation
is far from complete and is not straightforward. The four strong peaks might suggest asignal comprised of a sum of four cosine waves of different frequencies and comparableamplitudes. With some assurance, we can state the following about the signal whose DFTis plotted in Fig. 8-18:
1. The four peaks in the DFT spectrum occur at frequencies corresponding to
approximately ˆω=0.111π ,0.211π ,0.4π, and 0 .8π, so they probably represent
sine or cosine wave components in x[n]at those frequencies.
8-7 THE SPECTROGRAM 345
100020003000
0
0DFT Magnitude, jXŒ jDFT of Entire Signal LD10,000 with ND16,384
Frequency .O!/Figure 8-18 DFT of the entire sequence x[n]
in (8.52) with DFT length N=16,384. Only
the magnitude |X[k]|is shown for
0≤k≤8192. Horizontal axis is labeled with
normalized frequency using ˆωk=2πk/N.
2. The peak heights of the DFT tell us something about the amplitudes of the sinusoidal
components but, as demonstrated in Section 8-2.5, the peak height of the DFT of a
cosine signal depends on both the amplitude of the cosine signal and its duration.
The peak heights in Fig. 8-18 differ at most by a factor of two, but we know in
this example that the actual amplitudes for frequencies 0 .111π ,0.211π ,0.4π, and
0.8πare 2, 5, 0.5, and 2, respectively. Although the height of the 0 .211π peak is
equal to the height of the peak at 0 .4π, in fact, there is a 10:1 ratio between the
amplitudes of those cosine components. Similarly, the DFT peak heights at 0 .211π
and 0.111π are in the ratio 1:2, while we know that the ratio of amplitudes of those
two cosines is 5:2. The reason for this is that the DFT of a cosine of amplitude A
and duration Lachieves a maximum of approximately AL/2, as was demonstrated
in Section 8-2.5. The amplitude and duration of the ˆω0=0.211π segment are
A0=5 andL0=500, while the corresponding values for the ˆω3=0.4πsegment
areA3=0.5 and L3=5000; therefore, the peak heights are the same: 5 ×500/2=
0.5×5000/2=1250. Note that the different peak widths convey information about
the duration of the sinusoids, as we saw during the discussion of windowing inSection 8-6.
3. Figure 8-18 tells us nothing about the time location or time variation of the signal
properties. For example, we cannot tell whether the different components occursimultaneously (overlapping in time throughout the whole analysis interval) orsequentially (as they do in this example). This is because in either case, the signalsare additively combined, and by the linearity of the DFT, the result is the sum ofall the DFTs of the individual components. The change in starting time is a timeshift of a signal which changes the phase of the DFT, but not the magnitude of theDFT.
8-7.2 Time-Dependent DFT
A long DFT gives useful information about the frequency content of a signal such as x[n]
in (8.52), but it would be much more useful if the DFT could be used also to track the
346 CHAPTER 8 DISCRETE FOURIER TRANSFORM
time-varying properties of the signal. To formalize this concept for a signal x[m]that is
an indeﬁnitely long sequence, we deﬁne the time-dependent discrete Fourier transform
of this signal as
X[k,n s]=L−1/summationdisplay
m=0w[m]x[ns+m]e−j(2πk/N)mk=0,1,...,N −1 (8.53)
where nsis the analysis time index that speciﬁes the starting index in x[n], where a short-
length DFT is taken. This equation involves two steps: windowing and short-length DFTs.
First of all, w[m]is called the analysis window. It is a sequence such as the Hann window
in (8.48) that is nonzero only in the interval m=0,1,...,L −1, where Lis assumed
to be much smaller than the total length of the sequence x[n]. Therefore, the product
w[m]x[ns+m]is also nonzero only for m=0,1,...,L −1. In this way, the window
selects a ﬁnite-length segment from the sequence x[n]starting at the analysis time index
ns. Second, a short-length DFT of the ﬁnite-length windowed segment is computed to
extract the spectrum for that local interval of the signal. By adjusting the analysis timeindexn
s, we can move any desired segment of x[n]into the domain of the window, and
thereby select any length-L segment of x[n]for analysis. The length-L segments are
often called frames. Because the window imposes time localization, X[k,n s]in (8.53) is
also known as the short-time discrete Fourier transform orSTDFT .
The right-hand side of (8.53) is easily recognized as the N-point DFT of the ﬁnite-
length sequence w[m]x[ns+m], so (8.53) can be evaluated efﬁciently for each choice of
nsby an FFT computation. The selection of analysis segments is illustrated by Fig. 8-19
for two values of the analysis starting time index, ns=0 and ns=400. Figure 8-19(a)
shows the ﬁrst 801 samples of the discrete-time signal x[m]in (8.52) plotted versus m
with dots for sample values. Also shown in Fig. 8-19(a) are two shaded regions of length301 samples. One region starts at m=0 and is shaded orange, and the other starts at
m=400 and is shaded in gray.
13These are potential 301-sample analysis frames. Also
shown in Fig. 8-19(a) is the outline of the (bell-shaped) Hann window w[m]whose origin
is ﬁxed at m=0.14Theorange samples in Fig. 8-19(a) are the samples that are going to
be multiplied by the window w[m]whenns=0 and are thus selected for analysis with
the DFT to obtain X[k,0], the DFT of w[m]x[0+m].
Figure 8-19(b) shows the ﬁxed window sequence (in orange) along with the sequence
x[400+m], which is the sequence x[m]shifted to the left by 400 samples. The gray samples
in Fig. 8-19(a) have become the orange samples in Fig. 8-19(b) where these samples are
multiplied by the window and are thus selected for DFT analysis to compute X[k,400].
To compute X[k,n s]for any other value of ns, we simply form the “windowed” sequence
w[m]x[ns+m]in the manner illustrated in Fig. 8-19, and then compute the DFT of the
resulting ﬁnite-length sequence as in (8.53). The shift nsis typically moved in jumps of
Rsamples, where 1 ≤R<L . As long as R<L the windowed segments overlap and
13The shading of the samples is intended to emphasize two typical analysis intervals, with the implication
that in general, all the samples would be plotted with the same color.
14The discrete-time window sequences are shown as continuous outlines to distinguish them from the
samples of x[m].
8-7 THE SPECTROGRAM 347
00
800800
mmxŒm/c141
xŒ400 Cm/c141wŒm/c141wŒm/c141
(a)
(b)Figure 8-19 Time-dependent Hann
windowing of a signal using a length-301
window. (a) The signal x[0+m]=x [m]and
ﬁxed window w[m]. (b) Fixed window w[m]
with signal shifted by 400 samples (i.e.,x[400+m]).
200400
200400
200400
200400
0
00
00
00
0
0:2/EM 0:2/EM0:2/EM 0:2/EM
0:4/EM 0:4/EM0:4/EM 0:4/EM
0:6/EM 0:6/EM0:6/EM 0:6/EM
0:8/EM 0:8/EM0:8/EM 0:8/EM
/EM /EM/EM /EMMagnitudeM agnitude(a)STDFT at nsD250 (b) at nsD2000
(c)atnsD4000 (d) at nsD6000
Frequenc y.O!/ Frequenc y.O!/Figure 8-20 Short-time spectra for the signal
deﬁned in (8.52) with L=301 and N=1024.
(a) STDFT at analysis time index ns=250.
(b) STDFT at ns=2000. (c) STDFT at
ns=4000. (d) STDFT at ns=6000. The
frequency axis ˆωis derived from kvia
ˆω=2πk/N, and the DFT magnitudes for
0≤k≤512 are connected as if plotting the
corresponding DTFT at frequencies0≤ˆω≤π.
all samples of the signal are included in at least one analysis window. A common default
choice is R=L/2, but making Rsmaller provides a smoother spectrogram (discussed
below) at the cost of more computation. The best value of Ris often dictated by the need
to track fast temporal changes in the signal being analyzed.
To illustrate the nature of the short-time DFT, Fig. 8-20 shows plots of |X[k,250]|,
|X[k,2000]|,|X[k,4000]|, and |X[k,6000]|for the signal of (8.52) with STDFT
parameters L=301 and N=1024. Figure 8-20 conﬁrms that |X[k,250]|,|X[k,2000]|,
|X[k,4000]|, and |X[k,6000]|each display a single peak centered at the frequency of the
sinusoidal component at the corresponding analysis times. Furthermore, the amplitudes
348 CHAPTER 8 DISCRETE FOURIER TRANSFORM
of the peaks are in correct proportion since for the analysis times chosen, there is only
one frequency within the window and the window lengths are the same (L =301).15
While plots like those in Fig. 8-20 are useful for displaying the frequency-domain
properties in the neighborhood of a speciﬁc analysis time ns, they do not give a complete
overview of how the signal parameters vary with time. In this example, we selectedthe analysis time indices n
s=250,2000,4000, and 6000, because we knew that these
positions would show the different frequencies. In a practical setting, where we do notknow the details of the signal in advance, the spectrogram display is much more effectiveand widely used.
8-7.3 The Spectrogram Display
The STDFT computation results in a two-dimensional function X[k,n s], where the k
dimension represents frequency because ˆωk=(2πk/N) is thekthanalysis frequency, and
thensdimension represents time since the analysis window-position times are ts=nsTs.
Since the STDFT is a function of both frequency and time, there might be a different local
spectrum for each analysis time. Although X[k,n s]is complex valued with a magnitude
and phase, we usually plot only the magnitude versus (k, n s)with a 3-D graphical display.
A variety of display methods can be used to plot the magnitude |X[k,n s]|as a function of
bothkandns, including waterfall plots (a sequence of plots like those in Fig. 8-20 stacked
vertically), perspective plots, contour plots, or grayscale images. In addition, plotting thelog magnitude, log |X[k,n
s]|versus (k, n s), is often used to show a wider amplitude
range. The preferred form is the spectrogram, which is a grayscale (or pseudocolor)
image where the gray level at point (k, n s)is proportional to the magnitude |X[k,n s]|or
the log magnitude, log |X[k,n s]|. Usually, large magnitudes are rendered as black, and
small ones white, but pseudo-color images are also common.DEMO
Spectrogram Practice
Spectrograms of the signal in (8.52) are shown in Fig. 8-21. The horizontal axis is
analysis time and the vertical axis is frequency. Analysis time can be given as a sampleindex(n
s)as in Fig. 8-21, or converted to continuous-time ts=ns/fsvia the sampling
rate. Likewise, frequency can be converted from the index kto hertz, or to normalized
frequency ˆωas in Fig. 8-21. In the spectrogram image for a real signal, usually only the
frequency range for 0 ≤k≤N/2, or 0 ≤ˆω≤πis shown because the negative frequency
region is conjugate symmetric. For the complex signal case, the frequency range is either0≤ˆω< 2π,o r−π< ˆω≤π, depending on whether or not the FFT values are reordered
prior to being displayed.
16
8-7.4 Interpretation of the Spectrogram
A glance at Fig. 8-21 conﬁrms that the spectrogram provides a much clearer time-
frequency picture of the characteristics of the signal deﬁned in (8.52) than does either
15The absolute height of the peaks depends on the amplitude Aof the sinusoid and the window—
speciﬁcally, the peak height equals 0 .5A/summationtextw[m].
16TheDSP-First Toolbox functions plotspec andspectgr, which are similar to MATLAB’s function
spectrogram, use the ordering −π< ˆω≤πfor complex signals; MATLAB’s spectrogram function
uses 0 ≤ˆω< 2π.
8-7 THE SPECTROGRAM 349
(a) Spectrogram for Window Length L D301
(b) Spectrogram for Window Length L D75
0
00
0
Analysis Time Index .n s/Analysis Time Index .n s/Frequency .O!/ Frequency .O!/
20002000
40004000
60006000
80008000
10,00010,000Figure 8-21 Spectrograms of test signal
(8.52) calculated with spectgr (linear
magnitude) for two different window
lengths. (a) L=301. (b) L=75. For both
cases, N=1024 and the spacing between
analysis times is R≈0.1L.
the single plot of a long DFT as in Fig. 8-18, or the four snapshots in Fig. 8-20. The
four sinusoidal components and their starting/ending times are evident in Fig. 8-21(a).On the other hand, the dark horizontal bars in Fig. 8-21(b) are wider and less clearlydeﬁned, so it is hard to determine the exact frequency—however, it is clear in bothspectrograms where the sinusoidal components are located in time. The dashed lines atn
s=250,ns=2000, ns=4000, and ns=6000 show the locations of four individual
DFTs that comprise Fig. 8-20; that is, the DFT plots in Figs. 8-20(a), (b), (c), and (d) arecolumns of the gray-scale spectrogram image shown in Fig. 8-21(a). The magnitude of theDFT is mapped to a gray-scale shading which is visible along the orange, black, and gray
vertical marker lines, respectively. Figures 8-20(a–d) are, therefore, “vertical slices” of thespectrogram.
LAB
Spectrograms of AM and
FM Signals
A comparison of the two spectrograms in Fig. 8-21 yields valuable insight into the
effect of the window length in short-time Fourier analysis. The window length is L=301
in Fig. 8-21(a) and L=75 in Fig. 8-21(b). Along the time axis (n) at points where the
frequency changes abruptly, there are “blurry” regions; these occur at ns=500,3000,
and 5000. The blurred regions occur whenever the analysis window straddles a region
of rapid change since we have signal samples within the window from both sides of thechange point. For example, when n
s=350, the signal interval [350,650]is shifted under
theL=301 point window prior to the DFT, so the ﬁrst half of x[350+m]has frequency
0.211π and the second half has frequency 0 .111π . Thus, the STDFT X[k,350]should
have lower peaks at both frequencies. The longer the window, the wider is this fuzzyregion of ambiguity. This effect is seen in a comparison of Figs. 8-21(a) and (b) because
350 CHAPTER 8 DISCRETE FOURIER TRANSFORM
the regions of fuzziness are much wider for the L=301 window. This example illustrates
the general principle that precise location of temporal changes in the signal requires a
short window.
8-7.4.1 Frequency Resolution
Another important point is that the vertical width of the horizontal bars (for the sinusoids)
is different in the two spectrograms. In fact, the width of the bars in Fig. 8-21(b) is
approximately four times the width of the bars in Fig. 8-21(a), because the windowlengths are 75 and 301, respectively. This suggests that for a signal having multiplefrequency components overlapping in time, the spectrogram may not show two distinctpeaks if the frequencies are too close together. In other words, the spectrogram may needa longer window to “resolve” two closely spaced frequency components into separatepeaks in the frequency domain.
This resolution issue is illustrated by a test example where the signal is composed of
multi-frequency sinusoids with closely spaced frequencies. The two spectrograms shownin Fig. 8-22 were computed for two different window lengths for the signal
x[m]=⎧
⎨
⎩cos(0.2πm)+1.5 cos(0 .227πm) 0≤m<5000
cos(0.2πm) 5000≤m<7000
3 cos(0 .6πm) +cos(0.7πm) 7000≤m<10 ,000(8.54)
By comparing the spectrograms we can see the effect of the window length on frequency
resolution. During the ﬁrst interval the two frequencies are very close together at 0 .2π
2000 4000 6000 8000
2000 4000 6000 8000(a) Spectrogram for Window Length L D301
(b) Spectrogram for Window Length L D75
0
00
0
Analysis Time Index .n s/Analysis Time Index .n s/Frequency .O!/ Frequency .O!/
10,00010,000 Figure 8-22 Spectrograms of test signal (8.54)
for two different window lengths. (a) L=301.
(b)L=75. FFT length is N=1024 with zero
padding.
8-7 THE SPECTROGRAM 351
and 0.227π (a spacing of 0 .027π rad), while in the third interval, the two frequencies are
farther apart at 0 .6πand 0.7π(a spacing of 0 .1πrad). The two frequencies in the ﬁrst
interval are both evident in Fig. 8-22(a), but not in Fig. 8-22(b) where they are merged
into a single broad horizontal bar. On the other hand, during the third time interval, twoclearly separated bars are evident in both spectrograms at the frequencies 0 .6πand 0.7π,
so, the two frequency components are resolved. This resolution is possible because,
although the bars in Fig. 8-22(b) are 3–4 times wider than the corresponding featuresin Fig. 8-22(a), the spacing between the frequencies 0 .7πand 0.6πis approximately
four times the spacing between 0 .227π and 0.2π. This example illustrates the general
principle that frequency resolution can be improved by lengthening the analysis window . LAB
Spectrogram: Harmonic
Lines and Chirp Aliasing
To see the frequency resolution more clearly, Fig. 8-23 shows “vertical slices” taken
along the dashed lines in Figs. 8-22(a) and (b) corresponding to analysis times ns=2000
and 8000, which are in the middle of the segments having two sinusoids with closely
spaced frequencies. Figure 8-23(a) corresponds to the slice at ns=2000 with the window
length L=301, and it shows two distinct peaks around the frequencies 0 .2πand 0.227π .
However, Fig. 8-23(c) shows the slice at ns=2000 with the window length L=75. In
this case there is only a single broad peak, and we conclude that the two frequencies are“not resolved.” On the other hand, for the slices at n
s=8000 shown in Figs. 8-23(b)
and (d), the two frequencies are more widely separated, and we see two distinct peaks inboth of the spectrogram slices. However, for the slice at n
s=8000, if the window length
were reduced below 75, the two peaks in Fig. 8-23(d) would broaden and eventually asthe window length decreases we would see only a single broad peak spanning the twofrequencies at 0 .6πand 0.7π. Finally, note that the vertical slice DFTs show clearly
that the amplitude of the two sinusoids is different, but the amplitude difference is muchharder to discern in the gray-scale spectrogram image.
50150250
20406050150250
204060
0
00
0
0
00
0
0:2/EM0:2/EM
0:2/EM0:2/EM
0:4/EM0:4/EM
0:4/EM0:4/EM
0:6/EM0:6/EM
0:6/EM0:6/EM
0:8/EM0:8/EM
0:8/EM0:8/EM
/EM/EM
/EM/EMMagnitudeMagnitude(a)nsD2000, LD301( b)nsD8000, LD301
(c)nsD2000, LD75 (d)nsD8000, LD75
Frequenc y.O!/ Frequenc y.O!/Figure 8-23 Short-time spectra for signal in
(8.54) at two different time indices. These are
the vertical slices shown in Fig. 8-22. (a) Hannwindow length L=301, time index
n
s=2000. (b) L=301,ns=8000.
(c)L=75,ns=2000. (d) L=75,ns=8000.
FFT length was 1024 with zero padding.
352 CHAPTER 8 DISCRETE FOURIER TRANSFORM
EXERCISE 8.15 Use MATLAB to generate the signal in the third time interval of (8.54)
x[m]=3 cos(0 .6πm) +cos(0.7πm) 7000≤m<10 ,000
Then using a Hann window, compute the spectrogram slice at ns=8000. Use window
lengths of L=91 and L=31 and compute the DFTs to produce plots like Fig. 8-23.
Determine whether or not the two sinusoidal components are “resolved.”
As suggested by Fig. 8-23, the width of the peaks for the DFTs of the sinusoidal
components depends inversely on the window length L. In the previous Section 8-6, we
learned that what we are seeing in Fig. 8-23(a) is the DTFT of the window w[n]shifted
in frequency to the frequency of the sinusoid. Furthermore, it is a general principle of
Fourier transforms that there is an inverse relation between window length and frequencywidth. Therefore, the frequency width of the DTFT of a window sequence such as theHann window can be written as an inverse relationship
/Delta1ˆω≈C
L
where the constant Cis a small number, usually 4 π<C< 8πfor “good” windows. For
the Hann window, the zero-crossing width is /Delta1ˆω=8π/L ,s o/Delta1 ˆω=8π/75=0.107π
for the length-75 Hann window, which is small enough to resolve the 0 .6πand 0.7π
frequency peaks at ns=8000. If two frequencies differ by less than /Delta1ˆω, their STDFT
peaks blend together. Thus, the ability to resolve two sinusoids (i.e., see two distinctpeaks), depends inversely on the window length L. This makes sense intuitively because
the longer the window, the longer the time to observe the periodicity (or non-periodicity)of a signal. On the other hand, if the window is very short, e.g., less than one period ofthe signal, then we have virtually no information about any periodicity of the signal, andit is reasonable to expect this to be reﬂected in the STDFT.
There is still one more point to make about the window length, and this is the
issue of “time resolution.” We observed in Fig. 8-21 that the window length is alsoimportant in tracking the temporal changes in a signal. The “fuzzy” transition regions areapproximately four times as wide in Fig. 8-21(a) as in Fig. 8-21(b) because the windowlength goes from L=301 to L=75. Therefore, it is generally true that in order to track
rapid spectrum changes, we need to keep the window length as short as possible.
We are forced, therefore, into a trade-off situation: the window should be short to
track temporal changes, but long to resolve closely spaced frequency components. Forthis reason, when studying the properties of an unknown signal, it is common to computespectrograms with differing window lengths. Features that are obvious in one case maybe obscured in another, but with multiple spectrograms and a good understanding ofhow window length (and shape) affect the spectrogram image, it is often possible todetermine much useful information about the signal. This time-frequency information canbe combined with physical models for signal generation and/or detection to obtain veryaccurate models of the signal that can be useful in a variety of applications. A notable and
8-7 THE SPECTROGRAM 353
ubiquitous application is audio coding for digital storage and transmission. Audio coders
like MP3 are based upon the same type of frequency analysis computations employedto generate the spectrogram image. Because the human auditory system incorporates atype of frequency analysis, short-time frequency-domain analysis is a very natural way toincorporate auditory perception effects such as masking into the process of compressingthe digital representation of an audio signal. By a careful frequency analysis “frame byframe,” it is possible to mask coding errors by literally “hiding” them beneath prominentspectral components.
8-7.5 Spectrograms in MATLAB
Since the spectrogram can be computed by doing many FFTs of windowed signalsegments, MATLAB is an ideal environment for doing the DFT calculation and displayingthe image. Speciﬁcally, the MATLAB spectrogram computation evaluates (8.53) forlength-L signal segments that are separated by R(i.e.,n
s=0,R,2R,3R,... ).
X[(2πk/N)f s,rRT s]=L−1/summationdisplay
m=0w[m]x[rR+m]e−j(2πk/N)mk=0,1,...,N/ 2 (8.55)
The frequencies are scaled by (2π/N)f sand the times by Ts, because the default
MATLAB display presents the spectrogram versus frequency in hertz and time in seconds.Quite often the default is R=L/2, so there is a 50% overlap of the signal segments
analyzed by the DFT after windowing. The value of Nis the DFT length, so zero padding
would be done when N>L . Picking a large value for Ngives many frequency samples
along the kdimension because the frequency index kranges from 0 to N/2. When the
sampling rate f
s=1/Tsassociated with x[n]is available, the frequency locations for the
DFT output can be scaled to hertz and the time axis can be converted from sample indexto analysis time in seconds which is convenient for labeling the axes of the spectrogramdisplay.
17
The computation of the spectrogram can be expressed in a simple MATLAB program
that involves one for loop. The core of the program is shown below for the special case
of an even-length window with 50% overlap of signal segments.
% L = signal segment length, also window length (even integer)
% N = FFT (DFT) lengths% win = window signal, L-point column vector
such as the Hann window, or hanning.m
% xn = input signal (column vector)% assume the overlap is 50%Lx = length(xn);NwinPos = 2*ceil(Lx/L);X = zeros(N,NwinPos);for ii=0:NwinPos-1
X(:,ii+1) = fft(win.*xn(ii*L/2 + (1:L)),N);
end
17In other words, MATLAB’s spectrogram function calibrates the frequency and time axes in continuous-
time units assuming a given sampling rate fs.
354 CHAPTER 8 DISCRETE FOURIER TRANSFORM
In recent versions of MATLAB the command that invokes the computation of
(8.55) is
[S,F,T] = spectrogram(X,WINDOW,NOVERLAP,NFFT,Fs,’yaxis’)
The ﬁnal string ’yaxis’ is needed to override the default behavior that puts the frequency
axis on the horizontal and the time axis vertical. The outputs from spectrogram areS,
a two-dimensional array containing the complex-valued spectrogram values, F, a vector
of all the analysis frequencies, and T, a vector containing the starting times of the signal
segments being windowed. The inputs are the signal X, the window coefﬁcients WINDOW ,
the overlap of signal segments NOVERLAP , the FFT length NFFT , and the sampling
frequency Fs. In addition, the default spectrogram window is Hamming, so it should
be replaced with a call to the Hann function, (e.g., hanning(L) ). Note that the window
skip parameter Rin (8.55) is the window length minus the overlap, so the overlap should
be less than the window length, but choosing Noverlap equal tolength(window)-1
would generate a lot of needless computation (and possibly a very large image!), because
the window skip would be R=1. It is common to pick the overlap to be somewhere
between 50% and 90% of the window length (i.e., 0 .1L≤R≤0.5L), depending on how
smooth the ﬁnal spectrogram image needs to be. See help spectrogram in MATLAB
for more details.
The spectrogram image can be displayed by using any one of MATLAB’s 3-D
display functions. To get the inverted gray-scale images shown in this chapter, use the
following:
imagesc( T, F, abs(S) )
axis xy, colormap(1-gray)
The color map of (1-gray) gives a negative gray scale that is useful for printing, but
on a computer screen it might preferable to use color (e.g., colormap(jet) ). Finally,
it may be advantageous to use a logarithmic amplitude scale in imagesc in order to see
tiny amplitude components, as well as big ones.
8-8 The Fast Fourier Transform (FFT)
In Section 8-1.3, we discussed the FFT as an efﬁcient algorithm for computing the DFT.
The FFT is without a doubt the most famous algorithm in signal processing, and many
of the systems that we use everyday rely on the FFT for an efﬁcient implementation in
hardware or software.
8-8.1 Derivation of the FFT
In this section, we give the basic divide-and-conquer method that leads to the FFT. Fromthis derivation, it should be possible to write an FFT program that runs in time proportionalto(N/2)log
2N, where Nis the transform length. We need to assume that Nis a power of
8-8 THE FAST FOURIER TRANSFORM (FFT) 355
two, so that the decomposition can be carried out recursively. Such algorithms are called
radix-2 algorithms.
The DFT summation (8.4) and the IDFT summation (8.5) are essentially the same,
except for a minus sign in the exponent of the DFT and a factor of 1 /Nin the inverse DFT.
Therefore, we concentrate on the DFT calculation, knowing that a program written for the
DFT could be modiﬁed to do the IDFT by changing the sign of the complex exponentialsand multiplying the ﬁnal values by 1/N . The DFT summation can be broken into two
sets, one sum over the even-indexed points of x[n]and another sum over the odd-indexed
points.
X[k]=DFT
N{x[n]} (8.56a)
=N−1/summationdisplay
n=0x[n]e−j(2π/N)kn(8.56b)
=/parenleftbig
x[0]e−j0+x[2]e−j(2π/N) 2k+···+ x[N−2]e−j(2π/N)k(N −2)/parenrightbig
+/parenleftbig
x[1]e−j(2π/N)k+x[3]e−j(2π/N) 3k+···+ x[N−1]e−j(2π/N)k(N −1)/parenrightbig
(8.56c)
X[k]=N/2−1/summationdisplay
/lscript=0x[2/lscript]e−j(2π/N)k( 2/lscript)+N/2−1/summationdisplay
/lscript=0x[2/lscript+1]e−j(2π/N)k( 2/lscript+1)(8.56d)
At this point, two clever steps are needed: First, the exponent in the second sum must
be broken into the product of two exponents, so we can factor out the one that does notdepend on /lscript. Second, the factor of two in the exponents (2/lscript)can be associated with the
Nin the denominator of 2 π/N .
X[k]=N/2−1/summationdisplay
/lscript=0x[2/lscript]e−j(2πk/N)(2 /lscript)+e−j(2πk/N)N/2−1/summationdisplay
/lscript=0x[2/lscript+1]e−j(2πk/N)(2 /lscript)(8.56e)
X[k]=N/2−1/summationdisplay
/lscript=0x[2/lscript]e−j(2πk/(N/2))/lscript+e−j(2πk/N)N/2−1/summationdisplay
/lscript=0x[2/lscript+1]e−j(2πk/(N/2))/lscript(8.56f)
Now we have the correct form. Each of the summations in (8.56f) is a DFT of lengthN/2, so we can write
X[k]=DFT
N/2{x[2/lscript]} +e−j(2π/N)kDFT N/2{x[2/lscript+1]} (8.57)
The formula (8.57) for reconstructing X[k]from the two smaller DFTs has one hidden
feature: It must be evaluated for k=0,1,2,...,N −1. The N/2-point DFTs produce
356 CHAPTER 8 DISCRETE FOURIER TRANSFORM
output vectors that contain N/2 elements; for example, the DFT of the odd-indexed points
would be
Xo
N/2[k]=DFT N/2{x[2/lscript+1]}
fork=0,1,2,...,N/ 2−1. Thus, we need to recall that an N/2-point DFT is periodic
with a period of N/2 in order to calculate X[k], fork≥N/2. It is easy to verify that
Xo
N/2[k+N/2]=Xo
N/2[k]
and likewise for the DFT of the even-indexed points, so we need merely to periodically
extend the results of the N/2-point DFTs before doing the sum in (8.57). This requires
no additional computation.
The decomposition in (8.57) is enough to specify the entire FFT algorithm: Compute
two smaller DFTs and then multiply the outputs of the DFT over the odd indices by theexponential factor e
−j(2π/N)k. Refer to Fig. 8-24, where three levels of the recursive
decomposition can be seen. If a recursive structure is adopted, the two N/2 DFTs
can be decomposed into four N/4-point DFTs, and those into eight N/8-point DFTs,
etc. If Nis a power of two, this decomposition continues (log2N−1)times and then
eventually reaches the point where the DFT lengths are equal to two. For 2-point DFTs,
x[n] X[k]
e−j2πk/Ne−j4πk/N
e−j4πk/NN/2-Point DFT
N/2-Point DFTN/4-point DFTN/4-point DFTN/4-point DFTN/4-point DFT
N/8
N/8
N/8
N/8N/8N/8
N/8
N/8
Figure 8-24 Block diagram of a radix-2 FFT algorithm for N=2ν. The width of the lines is proportional to the
amount of data being processed. For example, each N/4-point DFT must transform a data vector containing N/4
elements.
8-8 THE FAST FOURIER TRANSFORM (FFT) 357
the computation is trivial:
X2[0]=x 2[0]+x 2[1]
X2[1]=x 2[0]+e−j2π/2x2[1]=x 2[0]−x 2[1]
The two outputs of the 2-point DFT are the sum and the difference of the inputs. Thus,
the last stage of computation would require N/2 2-point DFTs.
8-8.1.1 FFT Operation Count
The foregoing derivation is a brief sketch of the algorithm, but the basic idea for writing
an FFT program using the two-point DFT and the complex exponential as basic operators
has been presented. An important point about the FFT is not only writing the program,but also assessing the number of operations needed to complete the calculation. When itwas ﬁrst published, the FFT made a huge impact on how people thought about problems,because it made the frequency-domain accessible numerically. Spectrum analysis becamea routine calculation, even for very long signals. Operations such as ﬁltering, which seemto be natural for the time-domain, could be done more efﬁciently in the frequency-domainfor very long FIR ﬁlters.
The number of operations needed to compute the FFT can be expressed in a simple
formula. The structure of the algorithm given in (8.57) is sufﬁcient to count the numberof operations. The count goes as follows: the Npoint DFT can be done with two N/2
point DFTs followed by Ncomplex multiplications and Ncomplex additions, as we can
see in (8.57).
18Thus, we have
μc(N)=2μc(N/2)+N
αc(N)=2αc(N/2)+N
where μc(N)is the number of complex multiplications for a length-N DFT, and αc(N)
is the number of complex additions. This equation can be evaluated successively forN=2,4,8,..., because we know that μ
c(2)=0 and αc(2)=2. Table 8-3 lists the
number of operations for some transform lengths that are powers of two. The formula foreach can be derived by matching the table:
μ
c(N)=N(log2N−1)
αc(N)=Nlog2N
Since complex number operations ultimately must be done as multiplies and addsbetween real numbers, it is useful to convert the number of operations to real adds andreal multiplies. Each complex addition requires two real additions, but each complexmultiplication is equivalent to four real multiplies and two real adds. Therefore, we canput two more columns in Table 8-3 with these counts. The last column in the table 4 N
2
is the number of real multiplications needed to compute an N-point DFT directly from
its deﬁnition (8.4).
18Actually, the number of complex multiplications can be reduced to N/2, because e−j2π(N/ 2)/N=−1.
358 CHAPTER 8 DISCRETE FOURIER TRANSFORM
Table 8-3 Number of operations for radix-2 FFT when Nis a power of two.
Notice how much smaller μr(N)is than 4 N2.
Nμc(N)αc(N)μr(N)αr(N) 4N2
2 0 2 0 4 16
4 4 8 16 16 64
8 16 24 64 48 256
16 48 64 192 128 1024
32 128 160 512 320 4096
64 320 384 1280 768 16,384
128 768 896 3072 1792 65,536
256 1792 2048 7168 4096 262,144
...... ... ... ... ...
In summary, the total operation count is proportional to Nlog2N. The exact formulas
from Table 8-3 are
μr(N)=4N(log2N−1)
αr(N)=2N(log2N−1)+2N=2Nlog2N
for the number of real multiplications and additions, respectively. Even these counts are
a bit high because certain symmetries in the complex exponentials can be exploited tofurther reduce the computations.
8-9 Summary and Links
In this chapter, we introduced the DFT which is the ﬁnite form of the DTFT, and we haveshown how the resulting concepts can be useful in computing spectrum representationsof signals and for understanding the behavior of linear systems. We showed how theDFT can be derived from the DTFT by frequency sampling, which enables us to usethe DTFT for analysis when explaining the result of a DFT/FFT computation. Finally,the spectrogram was introduced as an application of the DFT where a time-dependentspectrum is computed by taking the DFT of short windowed sections of a long signal.
DEMO
Spectrogram Practice
8-10 Problems
The problems in this section address the major concepts of this chapter. On the Companion
Website there are many related homework problems which can be used for review and
practice. Most of them have detailed solutions.
NOTE
Problems with SolutionsP-8.1 For each of the following length-8 signals, use frequency sampling of the DTFT to
determine a formula for the 8-point DFT. Use MATLAB to check your work numerically.
8-10 PROBLEMS 359
(a)xa[n]=/braceleftBigg
1n=0
0n=1,2,...,7
(b)xb[n]=(−1)nforn=0,1,2,...,7
(c)xc[n]=/braceleftBigg
1n=3
0n/negationslash=3
(d)xd[n]=0 .5ejπn/ 2forn=0,1,2,...,7
P-8.2 For each of the following 8-point DFTs, determine a formula for the 8-point
IDFT. Use MATLAB to check your work numerically.
(a)Xa[k]=1 for k=0,1,2,...,7
(b)Xb[k]=/braceleftBigg
1k=3,5
0k=0,1,2,4,6,7
(c)Xc[k]=/bracketleftBig
0−√
2j−2j−√
2j0√
2j2j√
2j/bracketrightBig
(d)Xd=0.5 cos(πk/2 ) fork=0,1,2,...,7
P-8.3 For each of the following length-12 signals, determine a formula for the 12-point
DFT. Use MATLAB to check your work numerically.
(a)y0[n]=3(−1)nforn=0,1,...,11.
(b)y1[n]=/braceleftBigg
1n=0,1,2,3
0n=4,5,...,11
(c)y2[n]=/braceleftBigg
1n=0,2,4,6,8,10
0n=1,3,5,7,9,11
P-8.4 For an unknown 4-point sequence w[n], the corresponding 4-point DFT is
W[k]={0,j ,0,−j}
(a) Deﬁne a new 4-point sequence y[n]=4 −3w[n]and then determine the 4-point
DFTY[k].
Hint: it is not necessary to ﬁnd w[n].
(b) Deﬁne a new 4-point sequence v[n]=y [n]+2 (−1)nw[n], and then determine the
4-point DFT V[k].
360 CHAPTER 8 DISCRETE FOURIER TRANSFORM
P-8.5 An experienced engineer, who has taken many FFTs of real-valued sequences
x[n], has noticed that although many of the DFT coefﬁcients are often complex-valued,
X[0]is always real-valued for any length NandX[N/2]is real when Nis even, but
X[N/2]is not available when Nis odd.
(a) For the case N=255 and N=256, express X[0]andX[N/2]in such a way so
as to prove this observation.
(b) Given the 6-point sequence x[n]=[ 4,−1, 4,−1, 4,−1], determine its 6-point
DFT sequence X[k].
(c) If the 4-point DFT an unknown length-4 sequence v[n] isV[k]=
{1,4+j,−1, 4−j}, determine v[1].
(d) Given an 8-point sequence z[n]=7/summationdisplay
m=08(−1)mδ[n−m], the corresponding 8-point
DFT is Z[k]. Determine Z[0]andZ[4].
P-8.6 Consider the real ﬁnite-length sequence x[n]deﬁned as
x[n]=δ [n]+2 δ[n−1]+3δ [n−2]
(a) Sketch x[n]as a function of n.
(b) Sketch the ﬁnite-length sequence y[n]whose 8-point DFT is Y[k]=e−j0.5πkZ[k]
where Z[k]is the 8-point DFT of z[n]=2 x[n−1].
P-8.7 Consider two ﬁnite-length sequences,
x[n]=⎧
⎨
⎩0n<0
10 ≤n≤3
0n>3
andh[n]=4 δ[n]−2 δ[n−1]−2 δ[n−2].
(a) Determine and plot the discrete convolution y[n]=x [n]∗h[n] for these two
sequences.
(b) Note that the length of x[n]is 4 and the length of h[n] is 3 samples. Therefore,
each sequence can be represented by an N-point DFT with N≥4. Zero padding
would be used to extend the lengths when N> 4. Determine expressions for the
N-point DFTs X[k]andH[k]. Do not obtain numerical answers—instead express
your answers in terms of e−j2π(n)k/N.
8-10 PROBLEMS 361
(c) Now form the product Y[k]=X[k]H[k]again expressed in terms of e−j2π(n)k/N.
(d) From the result in part (c), determine the IDFT of Y[k]when N=6. Compare
your answer to the result of part (a).
(e) Repeat when N=4. In this case, the complex exponentials must be changed so
that the exponents are less than 2 π, i.e.,e−j(2π/N)(N +k)=e−j(2π/N)kif 0≤k≤
N−1.
(f) In general, consider x[n]to have length Landh[n] to have length M. How should N
be chosen so that the MATLAB statement y = ifft( fft(x,N).*fft(h,N) )
produces the same result as the MATLAB statement y = conv(x,h) ?
P-8.8 The inverse DTFT of X(ejˆω)=8e−j10ˆωsin(7.5ˆω)
sin(0.5ˆω)is a length-15 sequence x[n].
If we evaluate a 60-point DFT of x[n](with zero padding), determine the DFT coefﬁcient
X[8]and express it in polar form AejϕwithA≥0 and−π<ϕ<π .
P-8.9 The DTFT of a length-32 real sinusoid signal sequence q[n]=A cos(ˆω0n)forn=
0,1,...,31 consists of two “Dirichlet-form” peaks and can be written as (see Tables 8-2
and 8-3):
Q(ejˆω)=1
2Asin(1
2(32)(ˆω−ˆω0))
sin(1
2(ˆω−ˆω0))e−j31
2(ˆω−ˆω0)+1
2Asin(1
2(32)(ˆω+ˆω0))
sin(1
2(ˆω+ˆω0))e−j31
2(ˆω+ˆω0)
where ˆω0is the frequency of the sinusoid.
(a) Suppose that we deﬁne a length-32 signal as s[n]=0 .1+Acos(ˆω0n), and take
its length-32 DFT. Call the result S[k], fork=0,1,2,...,31. If the values of the
DFTS[k]are zero for 29 of the 32 DFT coefﬁcients, and a maximum value of
|S[k]|is found at the index k1=10, determine the frequency of the sinusoid, ˆω0.
(b) For the 32-point DFT in part (a), determine the indices where the other two nonzero
values ofS[k]are found (i.e., k2andk3, where S[k2] /negationslash=0 andS[k3] /negationslash=0).
(c) If one of the two maximum values of |S[k]|is found at the index k1=10 and
|S[k1]| = 50, determine the amplitude Aof the signal, s[n], deﬁned in (a).
P-8.10 Deﬁne a length-32 signal to be r[n]=1 +7 cos(0 .2πn) forn=0,1,...,31.
Then form a length-N signal by zero-padding with 48 zeros, and take the N-point DFT
of the zero-padded signal to obtain R[k], fork=0,1,2,...,N −1.
(a) Determine the value of Nfor the N-point DFT taken after the zero padding.
(b) Determine the indices, kpeaks, where the two maximum values of |R[k]|are found,
and, give both indices where |R[k]| = max
k{|R[k]|}.
(c) Determine the maximum value of |R[k]|at the two indices found in part (b).
362 CHAPTER 8 DISCRETE FOURIER TRANSFORM
P-8.11 Suppose that a periodic signal x[n]has a DFS given by
x[n]=10/summationdisplay
k=−10(1+k2)ej(0.09πk)n
Use the frequency response (or DTFT) to evaluate the convolution
y[n]=sin(0.16πn)
6πn∗x[n]=h[n]∗x [n]
Express your answer in the simplest possible form.
P-8.12 Suppose that a discrete-time signal x[n]is a sum of complex-exponential
signals
x[n]=2 +2ej0.3πn+2e−j0.3πn−6jej0.8πn+6je−j0.8πn
(a) Plot the spectrum of the DFS for x[n]using only positive frequencies in the interval
0≤ˆω≤2π.
(b) Suppose that x1[n]=(−1)nx[n]. Make a spectrum plot of the DFS for x1[n]using
only positive frequencies.
(c) Suppose that x2[n]=x [n]ej0.5πn−6jej1.7πn. Make a spectrum plot of the DFS
forx2[n]using only positive frequencies.
P-8.13 Suppose that the following continuous-time signal
x(t)=4 cos(35πt) +6 cos(15πt −0.5π)
is sampled with rate fs=50 Hz to obtain the discrete-time signal x[n]which is periodic
with period N, and we want to determine the DFS representation of x[n].
(a) Determine the period of x[n](in samples) and express x[n]as a sum of exponential
signals.
(b) Determine the values and indices kof the nonzero Fourier Series coefﬁcients
{ak}for the DFS summation. Recall that the range of the DFS summation
is from −M toM, where M≤1
2N. Express each nonzero akvalue in polar
form.
(c) Make a spectrum plot of the DFS with the horizontal axis being −π≤ˆω≤3πto
show the two periods of the spectrum as in Fig. 8-11(b).
(d) If ak=sinπk
10−cosπk
5, determine the new x[n].
8-10 PROBLEMS 363
P-8.14 Consider a 10-point running-sum FIR ﬁlter.
(a) Use the FFT to evaluate and plot its frequency response H(ejˆω). Write MATLAB
code and show the plots of magnitude and phase versus frequency. Determine an
appropriate value for the FFT length Nto make a dense frequency grid for ˆωso
that the plots appear continuous.
(b) Suppose that the input signal to the 10-point running-sum ﬁlter is x[n]whose
discrete-time Fourier series has nonzero components only at ˆω1=0.2π,ˆω2=
0.4π, andˆω3=0.6π, and a DC value of X0=4.5. Explain why the output of the
10-point running-sum ﬁlter is then y[n]=45 for all n. Use values from the plot
of|H(ejˆω)|versus ˆωto support your explanation.
P-8.15 A continuous-time signal xc(t)is bandlimited such that it has no spectral
components for |ω|≥2π(1000). This signal is sampled with sampling rate fs=1/Ts
producing the sequence x[n]=x c(nTs). Then length-L sections of the sampled signal
are extracted via time windowing as in Fig. 8-19 and analyzed with an N-point FFT. The
resulting NDFT coefﬁcients are samples of the spectrum of the continuous-time signal
xc(t)with a spacing of /Delta1fHz.
(a) For efﬁciency in computation, assume that Nis a power of two. Both fsandNcan
be chosen at will subject to the constraints that aliasing be avoided and N=2ν.
Determine the minimum value of N, and also fs, so that the frequency spacing /Delta1f
between DFT coefﬁcients is less than or equal to 5 Hz.
(b) Assume that the window is a Hann window whose length Lis half the FFT length,
N. For the value of Ndetermined in (a), determine the spectral peak width (as
measured between zero crossings). Give the answer in hertz. The result should belarger than 5 Hz, indicating that frequency resolution of narrow peaks is differentfrom frequency sampling of the spectrum.
P-8.16 Suppose that a continuous-time signal x(t) consists of several overlapping
sinusoidal sections
x(t)=⎧
⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩cos(2π(600)t) 0≤t<0.5
sin(2π(1100)t) 0.3≤t<0.7
cos(2π(500)t) 0.4≤t<1.2
cos(2π(700)t−π/4)0.4≤t<0.45
sin(2π(800)t) 0.35≤t<1.0
(a) If the signal is sampled with a sampling frequency of f
s=8000 Hz, make a sketch
of the ideal spectrogram that corresponds to the signal deﬁnition.
(b) Make a sketch of the actual spectrogram that would be obtained with an FFT length
ofN=500 and a Hann window length of L=200 with an overlap of 160 points.
Make approximations to determine the frequency width in order to do the sketch
without actually calculating the spectrogram in MATLAB.
364 CHAPTER 8 DISCRETE FOURIER TRANSFORM
P-8.17 In the spectrogram of the C-major scale in Fig. P-8.17, the analysis window was
a Hann window of length L=256, overlap was 200, and sampling rate fs=4000 Hz.
Estimate the time duration of the notes, which is the same for all eight.
Time (s)Frequency (Hz)
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2200250300350400450500550600LD500; f sD4kHz Spectrogram of C-Major scale,
Figure P-8.17
P-8.18 Figure P-8.17 shows the spectrogram of a synthetic musical scale composed
of sine waves. The analysis window was a Hann window of length L=256, overlap
was 200, and sampling rate fs=4000 Hz. Make a sketch of the spectrogram that would
be obtained if the window length was L=100. Explain how your sketch differs from
Fig. P-8.17.
P-8.19 Assume that a speech signal has been sampled at 8000 Hz and then analyzed
with MATLAB’s spectrogram function using the following parameters: Hamming
window with length L=100, FFT length of N=256, and overlap of 80 points.
Determine the resolution of the resulting spectrogram image.
(a) Determine the frequency resolution (in Hz).
(b) Determine the time resolution (in sec).
P-8.20 The frequency resolution of a spectrum analysis system is determined by the
discrete-time Fourier transform of the time window. Suppose that we sample a continuous-
time signal at fs=10,000 Hz and we want to have frequency resolution of 250 Hz.
8-10 PROBLEMS 365
(a) If we use a Hann window for w[n], what window length Lwould be needed?
Estimate a minimum value for L.
(b) Use the speciﬁc value for Ldetermined in part (a), and demonstrate that the resulting
Hann window has sufﬁcient frequency resolution by generating a signal with the
sum of two equal-amplitude sinusoids whose frequencies are 3000 Hz and 3250Hz and computing samples of the DTFT with a zero-padded FFT. The plot ofthe DTFT magnitude should exhibit two distinct peaks at the correct (known)frequencies.
P-8.21 The spectrogram of Fig. P-8.21 shows the period of time corresponding to the
ﬁrst nine notes of Beethoven’s F¨ ur Elise in the treble clef of Fig. 3-22 on p. 101.
(a) Compute the theoretical frequencies (based on A440) from the sheet music for
these nine notes.
(b) Measure the frequencies of the nine notes from the spectrogram of Fig. P-8.21, and
compare your result to true frequencies from part (a).
(c) Measure the durations of each of the nine 16th notes.
Time (s)Frequency (Hz)
6 6.25 6.5 6.75 7 7.25 7.5 7.75 8 8.25 8.5 8.75 9200250300350400450500550600650700750800Spectrogram of Für Elise (9 notes), LD1000; f sD8kHz
Figure P-8.21
366 CHAPTER 8 DISCRETE FOURIER TRANSFORM
P-8.22 In this problem, we consider a signal of the form
x[n]=/braceleftBigg
cos(ˆω0n)+cos(αn2) 0≤n≤2000
cos(ˆω0n)+cos(ˆω1n) 2000<n≤ 4000(8.58)
Figure P-8.22 shows a spectrogram of this signal obtained with a DFT length of
N=500, a Hann window length of L=100, and a window overlap of 90 (to obtain a
very smooth image).
0 500 1000 1500 2000 2500 3000 3500 40000
Analysis Time Index .ns/Frequency .O!/
Figure P-8.22
(a) Using Fig. P-8.22, estimate the frequencies ˆω0andˆω1and the parameter α.
(b) Describe how the spectrogram would change if the spectrum analysis window
length is changed to L=400.
CHAPTER
9
z-Transforms
In this chapter we introduce the z-transform, which brings polynomials and rational
functions into the analysis of linear discrete-time systems. The key result is that FIR
convolution is equivalent to polynomial multiplication. In fact, common algebraicoperations, such as multiplying, dividing, and factoring polynomials, can be interpretedas combining or decomposing LTI systems. The most common z-transforms are rational
functions (i.e., a numerator polynomial divided by a denominator polynomial). The rootsof these polynomials are signiﬁcant, because most properties of digital ﬁlters can berestated in terms of the locations of these roots.
Thez-transform method is introduced in this chapter for FIR ﬁlters and ﬁnite-length
sequences in general. We will use the FIR case to introduce the important concept of“domains of representation” for discrete-time signals and systems. Throughout this text,we consider three domains of representation of signals and systems: the n-domain or
time domain (the domain of sequences, impulse responses, and difference equations),
theˆω-domain orfrequency domain (the domain of frequency responses and spectrum
representations), and the z-domain (the domain of z-transforms, operators, and poles
367
368 CHAPTER 9 z-TRANSFORMS
and zeros).1The value of having three different domains of representation is that a
difﬁcult analysis in one domain is often much easier in one of the other domains.
Therefore, increased understanding will result from developing skills for moving from
one representation to another. For example, the cascade combination of LTI systems,
which in the n-domain seems to require the new (less familiar) technique of convolution,
is converted in the z-domain into the more familiar algebraic operation of polynomial
multiplication.
All three domains can be used to analyze signals and systems. The z-domain exists
primarily for its algebraic nature, which is convenient for mathematical analysis andsynthesis. The frequency domain provides analysis techniques that also have physicalsigniﬁcance when analyzing sound, and other tangible signals. It is important, however, tonote that the n-domain is the primary implementation domain where signals are generated
and processed, and where the implementation of ﬁlters often takes place. The frequencydomain is sometimes used for processing because FFT algorithms make frequency-domain implementations practical and efﬁcient.
9-1 Deﬁnition of the z-Transform
A ﬁnite-length signal x[n]consists of a set of signal values {x[0],x[1],...,x [L−1]}
that can be represented by the relation
x[n]=L−1/summationdisplay
k=0x[k]δ[n−k] (9.1)
Each term in the summation, x[k]δ[n−k], is the value x[k]at the time index n=kwhich
is the only index where δ[n−k]is nonzero. The z-transform of the signal x[n]in (9.1)
is deﬁned by the formula
X(z)=L−1/summationdisplay
k=0x[k]z−k(9.2)
where z, the independent variable of the z-transform X(z) , is a complex number. In (9.2)
the signal values {x[0],x[1],...,x [L−1]}are used as coefﬁcients of a polynomial
inz−1, and the exponent of z−kdenotes the fact that the polynomial coefﬁcient x[k]
is the kthvalue of the signal. Although (9.2) is the conventional deﬁnition of the
z-transform,2it is instructive to write X(z) in the form
1Traditionally, signals and systems texts have identiﬁed just two domains: the time domain and the
frequency domain. Many authors consider our ˆω-domain and z-domain together as the “frequency domain.”
This is mainly because, as we will see, the ˆω-domain can be viewed as a special case of the more general
z-domain. However, we feel that because of the different character of the mathematical functions involved in
the two domains, there is a distinct advantage in considering the ˆω- andz-domains as separate, but related,
points of view.
2Some authors use positive powers of zin the deﬁnition of the z-transform, but this convention is not
common in signal processing.
9-1 DEFINITION OF THE z-TRANSFORM 369
X(z)=L−1/summationdisplay
k=0x[k](z−1)k
which emphasizes that X(z) is simply a polynomial of degree L−1 in the variable z−1.
Thez-transform in (9.2) applies only to ﬁnite-length sequences because the upper limit
of the sum is L−1 which implies that the z-transform polynomial has ﬁnite degree. In
Section 9-2.3, we introduce the full-ﬂedged deﬁnition of the z-transform, which has
inﬁnite limits.
When we use (9.2) to determine the z-transform of the signal x[n], we say that we
transform x[n]into a new representation X(z) . Indeed, it is often said that we “take the
z-transform of x[n].” This operation of taking the z-transform amounts to constructing a
polynomial X(z) whose coefﬁcients are the values of the sequence x[n]. Speciﬁcally, the
kthsequence value is the coefﬁcient of the kthpower of z−1in the polynomial X(z) .I ti s
just as easy to go from (9.2) back to (9.1), which is called taking the inverse z-transform,
because we can recover x[n]fromX(z) simply by extracting the coefﬁcient value of the
kthpower of z−1and placing that value in the kthposition of the sequence x[n].
Az-transform pair is a sequence and its corresponding z-transform, which we
denote as
x[n]z←→ X(z) (9.3)
We can emphasize the unique correspondence between a sequence x[n]and its z-transform
by writing
n-Domainz←→ z-Domain
x[n]=L−1/summationdisplay
k=0x[k]δ[n−k]z←→ X(z)=L−1/summationdisplay
k=0x[k]z−k
Notice that nis the independent variable of the sequence x[n]. Thus, we say that (9.1)
represents the signal in the n-domain. Since nis often an index that counts time in a
sampled time waveform, we also refer to (9.1) as the time-domain representation of the
signal. Similarly, observe that zis the independent variable of the z-transform X(z) .I n
other words, X(z) in (9.2) represents the signal in the z-domain, and when taking the
z-transform of a signal, we move from the time domain to the z-domain.
As a simple, but very important, example of a z-transform pair, suppose that the signal
is a shifted impulse (i.e., x[n]=δ [n−n0]). Then, applying the deﬁnition (9.2), it follows
thatX(z)=z−n0, so we can write
n-Domainz←→ z-Domain
x[n]=δ [n−n0]z←→ X(z)=z−n0(9.4)
When the sequence is deﬁned with a list of numerical values, we take the z-transform
and get a general polynomial, as illustrated by the following example.
370 CHAPTER 9 z-TRANSFORMS
EXAMPLE 9-1 z-Transform of a Signal
Consider the sequence x[n]given in the following table:
nn<−1 −1 012345n>5
x[n] 0 0246420 0
Thez-transform of this sequence is
X(z)=2+4z−1+6z−2+4z−3+2z−4
The nonzero values of the sequence {2,4,6,4,2}become the coefﬁcients of the
polynomial X(z) .
Example 9-1 shows how to determine the z-transform given the sequence values.
The next example illustrates the inverse z-transform operation, that is, determining the
sequence values when we are given its z-transform polynomial.
EXAMPLE 9-2 Inverse z-Transform
Consider the z-transform X(z) given by the equation
X(z)=1−2z−1+3z−3−z−5
In thez-transform deﬁnition (9.2), the signal values are the polynomial coefﬁcients. Thus
we can list x[n]in tabular form as in Example 9-1, or we can give a case-by-case equation
for the sequence values as a function of nin the form
x[n]=⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩0 n<0
1 n=0
−2 n=1
0 n=2
3 n=3
0 n=4
−1 n=5
0 n>5
Alternatively, we can go from the z-transform in (9.2) to the time-domain representation
(9.1) in terms of impulse sequences, and then write the corresponding sequence x[n]as
x[n]=δ [n]−2 δ[n−1]+3δ [n−3]−δ [n−5]
9-2 BASIC z-TRANSFORM PROPERTIES 371
9-2 Basic z-Transform Properties
In Section 9-1, we deﬁned the z-transform, and showed for ﬁnite-length sequences that
it is simple to go back and forth between the sequence x[n]and its z-transform X(z) .I n
this section, we explore two universal transform properties that hold for the z-transform,
and also show that when the z-transform is extended to the inﬁnite-length case, these
properties still hold.
9-2.1 Linearity Property of the z-Transform
Thez-transform is a linear transformation because it satisﬁes the superposition property.
To show this, we use superposition (addition and scaling) to form a new sequence x[n]=
ax1[n]+bx 2[n]as the linear combination of x1[n]andx2[n], which are both assumed
to have ﬁnite length less than or equal to L. Then we take the z-transform of the linear
combination:
X(z)=L−1/summationdisplay
n=0(ax1[n]+bx 2[n])z−n
=aL−1/summationdisplay
n=0x1[n]z−n+bL−1/summationdisplay
n=0x2[n]z−n
=aX 1(z)+bX2(z)
These steps are true because multiplication distributes over addition for real and complex
numbers. Thus, the z-transform X(z) has the same linear combination (addition and
scaling) as used in the time domain.
Linearity of the z-Transform
ax1[n]+bx 2[n]z←→ aX 1(z)+bX2(z)(9.5)
9-2.2 Time-Delay Property of the z-Transform
The second important property of the z-transform is that multiplication by the quantity
z−1in the z-domain corresponds to a time shift by one index in the n-domain. First,
we illustrate this property with a numerical example. Consider the length-6 signal x[n]
deﬁned by the following table of values:
nn<0 012345n>5
x[n] 0 314159 0
372 CHAPTER 9 z-TRANSFORMS
Thez-transform of x[n]is the following ﬁfth-degree polynomial (in z−1)
X(z)=3+z−1+4z−2+z−3+5z−4+9z−5
Recall that the signal values x[n]are the coefﬁcients of the polynomial X(z) and that
the exponents correspond to the time locations of the values. For example, the term 4z−2
indicates that the signal value at n=2is4(i.e.,x[2]=4 ).
Now consider the effect of multiplying the polynomial X(z) byz−1:
Y(z)=z−1X(z)
=z−1(3+z−1+4z−2+z−3+5z−4+9z−5)
=0z0+3z−1+z−2+4z−3+z−4+5z−5+9z−6
The resulting polynomial Y(z) is the z-transform representation of a new signal y[n],
which is found by using the polynomial coefﬁcients and exponents in Y(z) to take the
inverse z-transform and obtain the values of y[n]at all time positions. Notice that there
is now a term 4z−3which indicates that the signal value at n=3isy[3]=4 .The result
is the following table of values for y[n]:
nn<0 0123456n>6
y[n] 0 0314159 0
Each of the signal samples has moved over one position in the table, so y[n]=
x[n−1]. In general, for any ﬁnite-length sequence, multiplication of the z-transform
polynomial by z−1simply subtracts one from each exponent in the polynomial, thereby
changing all the time indices by one. Thus, we have the following fundamental relation:
Delay of One Sample
x[n−1]z←→ z−1X(z)(9.6)
which we refer to as the unit-delay property of the z-transform.
The unit-delay property can be generalized for the case of shifting by more than one
sample by simply applying (9.6) multiple times. The general result is
Delay of n0Samples
x[n−n0]z←→ z−n0X(z)(9.7)
9-2.3 A General z-Transform Formula
So far, we have deﬁned the z-transform only for ﬁnite-length signals using (9.2). Our
deﬁnition assumes that the sequence is nonzero only in the interval 0 ≤n≤N,s ot h e
9-3 THE z-TRANSFORM AND LINEAR SYSTEMS 373
limits on the sum in (9.2) are ﬁnite. It is straightforward to extend the deﬁnition to
signals of inﬁnite length by simply extending the upper and lower limits to +∞ and−∞,
respectively, that is,
X(z)=∞/summationdisplay
n=−∞x[n]z−n(9.8)
It is not difﬁcult to see that properties such as linearity and the delay property hold forany polynomial, even inﬁnite-length polynomials, because the operations are performedon individual signal values which are individual polynomial coefﬁcients.
However, inﬁnite sums may cause subtle mathematical difﬁculties with convergence
and thus require special attention. Summing an inﬁnite number of complex terms as in(9.8) could result in an inﬁnite result (i.e., the sum might not converge). A convenientexample of the inﬁnite-length case comes from taking the z-transform of the right-sided
exponential:
3
x[n]=(1
2)nu[n]z←→ X(z)=∞/summationdisplay
n=0(1
2)nz−n(9.9)
The value of1
2is chosen arbitrarily, but it affects the convergence of the sum. If we
combine the (1
2)nandz−nterms as (1
2z−1)n, then we can simplify the sum by recognizing
that it is like the sum of a geometric sequence/summationtextrn=1/(1−r). The result is
X(z)=∞/summationdisplay
n=0(1
2z−1)n=1
1−1
2z−1if|1
2z−1|<1 (9.10)
which is very interesting because the sum with an inﬁnite number of terms is reduced to arational function with a ﬁrst-degree polynomial in the denominator, and the only numberthat appears in the rational function is
1
2. However, there is a condition on zthat must be
satisﬁed for the inﬁnite sum to converge to the closed-form expression (9.10): namely,|z|>
1
2. In other words, the z-transform X(z) is deﬁned for only part of the complex
z-plane, called the region of convergence.
The inﬁnite-length case is considered in depth in Chapter 10 when we study recursive
digital ﬁlters. Even then, a rigorous mathematical development of a complete z-transform
theory for signal and system analysis (with regions of convergence) is better left to another,more advanced, course.
9-3 The z-Transform and Linear Systems
At this point, we have learned how to take the z-transform, and its inverse, but an obvious
question to ask is what are the advantages of transforming from the n-domain to the
z-domain? The key part of the answer is that the input–output (difference) equation of
the FIR ﬁlter is equivalent to polynomial multiplication of z-transforms. As a result, the
3The right-sided exponential and its z-transform are given a detailed treatment in Chapter 10.
374 CHAPTER 9 z-TRANSFORMS
power of algebra for polynomials and rational functions can be employed to simplify
much of the analysis of LTI systems. The remainder of this chapter develops this answeralong with many other properties of the z-transform that are indispensable in the design
and analysis of LTI systems.
9-3.1 Unit-Delay System
The unit-delay operator is one of the basic building blocks for the FIR difference equation,
as shown in the block diagrams of Chapter 5, Section 5-5.2. In fact, the unit-delayoperation can be interpreted as an FIR ﬁlter deﬁned by
y[n]=x [n−1] (9.11)
This is a ﬁrst-order FIR ﬁlter whose two ﬁlter coefﬁcients are b
0=0 andb1=1. On the
other hand, we have just learned the delay property of the z-transform in Section 9-2.2
which tells us that
Y(z)/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
output=(z−1)/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
delayX(z)/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
input(9.12)
Thus the output z-transform Y(z) is the product of two z-transforms, (z−1)andX(z) , and
it seems reasonable to claim that the unit delay is represented by z−1. This fact allows us
to treat the block diagrams in Figs. 9-1(a) and (b) as equivalent.
9-3.2 z−1Notation in Block Diagrams
The delay system representation in (9.12) and Fig. 9-1(b) can be used in block diagrams
of general LTI systems as follows: All the unit delay operators become z−1operators in
the transform domain, and, owing to the linearity property of the z-transform, the scalar
multipliers and adders remain the same as in the time-domain representation. Figure 9-2
shows a block diagram for a general length 2 FIR ﬁlter, y[n]=b 0x[n]+b 1x[n−1],
but uses the z-domain notation z−1to represent the unit-delay operator. Since the block
diagram uses z−1, it is easy to write the z-transform of the output Y(z) in terms of X(z)
and then simplify the algebraic expression to obtain
Y(z)=b0X(z)+b1z−1X(z)=(b0+b1z−1)/bracehtipupleft/bracehtipdownright/bracehtipdownleft /bracehtipupright
H(z)X(z) (9.13)
Once again, the output is the product of two z-transform functions: X(z) andH(z)=
b0+b1z−1which depends on the ﬁlter coefﬁcients. We use the notation H(z) because we
(b) (a)Unit
Delay´/NUL1xŒn/c141 yŒn/c141DxŒn/NUL1/c141 X.´/ Y.´/ D´/NUL1X.´/
yŒn/c141DxŒn/NUL1/c141 xŒn/c141 Figure 9-1 Representations of the unit delay
system. (a) Explicit representation.
(b) Representation using z−1.
9-3 THE z-TRANSFORM AND LINEAR SYSTEMS 375
Equivalent
Unit
Delay´1b0
b1xŒ
xŒnX.´/
´1X.´/
yŒFigure 9-2 Computational structure for a ﬁrst-order
FIR ﬁlter y[n]=b 0x[n]+b 1x[n−1]. The block
diagram uses z−1to denote the unit delay, exploiting
the equivalence shown in Figs. 9-1(a) and (b).
show in Section 9-3.4 that this H(z) is actually the z-transform of the impulse response
of the FIR ﬁlter.
EXERCISE 9.1 Draw a block diagram similar to Fig. 9-2 for the ﬁrst difference system: y[n]=
x[n]−x [n−1]
9-3.3 The z-Transform of an FIR Filter
There are two ways to obtain a z-domain representation of a general FIR ﬁlter. The ﬁrst
is to take the z-transform of the FIR difference equation, the second is to take the z-
transform of the impulse response. The example in Fig. 9-2 suggests how to work with
the FIR difference equation. Recall that the general difference equation of an FIR ﬁlterinvolves the sum of delayed copies of the input signal multiplied by scalars.
y[n]= M/summationdisplay
k=0bkx[n−k] (9.14)
These operations are exactly the ones covered by the linearity property and delay property
of the z-transform. The delay-by-n 0property (9.4) tells us that the z-transform of a term
likex[n−k]isz−kX(z) . The linearity property tells us that the same scaling coefﬁcients
bkand sum will be used in the z-domain. As a result, we can take the z-transform of both
sides of the difference equation (9.14) to obtain
Y(z)=M/summationdisplay
k=0bk/parenleftbig
z−kX(z)/parenrightbig
=/parenleftBiggM/summationdisplay
k=0bkz−k/parenrightBigg
/bracehtipupleft/bracehtipdownright/bracehtipdownleft /bracehtipupright
H(z)X(z) (9.15)
Thus the output is again the product of X(z) and az-domain function H(z) that depends
solely on the ﬁlter coefﬁcients. The z-transform function H(z) is called the system
function of the FIR ﬁlter.
9-3.4 z-Transform of the Impulse Response
The second way to obtain a z-domain representation of an FIR ﬁlter is to take the
z-transform of the impulse response. In this approach, we recall that the FIR system
376 CHAPTER 9 z-TRANSFORMS
iscompletely characterized by its impulse response h[n], which is a ﬁnite-length signal.
Therefore, when we take the z-transform of the impulse response h[n]
H(z)=M/summationdisplay
k=0h[k]z−k(9.16)
we obtain a z-domain representation that must also be a complete description of the FIR
system. The z-transform in (9.16) is called H(z) , but we need to recall one fact from
Section 5-4.2 on p. 179 to claim that it is identical to the system function obtained in
(9.15). That fact is
h[n]=M/summationdisplay
k=0bkδ[n−k] (9.17)
which says that the impulse response values for an FIR ﬁlter are equal to the ﬁltercoefﬁcients.
To summarize, we have added the following important result for FIR systems:
System Function of FIR System
h[n]=M/summationdisplay
k=0bkδ[n−k]z←→ H(z)=M/summationdisplay
k=0h[k]z−k (9.18)
Comparing (9.15) and (9.18), we see that the system function H(z) can be written in two
equivalent forms
H(z)=M/summationdisplay
k=0bkz−k=M/summationdisplay
k=0h[k]z−k(9.19)
because h[k]=b kfor the FIR ﬁlter.
EXERCISE 9.2 Determine the system function H(z) of an FIR ﬁlter whose impulse response is
h[n]=δ [n]−7δ [n−2]−3δ [n−3]
9-3.5 Roots of a z-Transform Polynomial
To illustrate the power of algebra that comes with representing the FIR ﬁlter with a system
function polynomial H(z) , we give two examples that rely on factoring polynomials. The
z-transform of a ﬁnite-length signal, such as H(z) for an FIR ﬁlter, is a function of the
complex variable z, and it is also an Mth-degree polynomial (9.19) in the variable z−1.
Therefore, H(z) has exactly Mroots according to the fundamental theorem of algebra.
9-3 THE z-TRANSFORM AND LINEAR SYSTEMS 377
When H(z) is expressed in terms of its roots, it can be written as the product of ﬁrst-order
factors that completely deﬁne the polynomial to within a multiplicative constant, that is,
H(z)=GM/productdisplay
k=1(1−zkz−1)=GM/productdisplay
k=1(z−zk)
z(9.20)
where Gis a constant. The ﬁrst-degree term (z−zk)in the right-hand product makes
it clear that these roots are also zeros of H(z) (i.e.,Mvalues zk,k=1,2,...,M such
thatH(zk)=0).
EXAMPLE 9-3 Zeros of System Function
Consider an FIR ﬁlter deﬁned by the difference equation
y[n]=6x [n]−5x [n−1]+x [n−2]
Thez-transform system function is H(z)=6−5z−1+z−2which factors as
H(z)=(3−z−1)(2−z−1)=6(z−1
3)(z−1
2)
z2
Thus, the roots of H(z) are1
3and1
2. Note that a different ﬁlter
w[n]=x [n]−5
6x[n−1]+1
6x[n−2]
has a system function with the same roots, but each ﬁlter coefﬁcient is 1/6 as big. This
simply means that w[n]=y [n]/6, and the system function of the second system is1
6H(z) .
EXAMPLE 9-4 Difference Equation from Roots of H(z)
Suppose the system function H(z) has two roots at {−1,1
2}. Then we can use (9.20) to
form the H(z) polynomial from the roots as
H(z)=G(z−(−1))
z(z−1
2)
z=G(1+z−1)(1−1
2z−1)
where Gis a scaling value. In order to ﬁnd H(z) we need to ﬁnd G, which requires that
we know an additional fact. In this example, we assume that the value of H(z) atz=3
is given as 4. Then z−1=1
3, and
4=H(z)/vextendsingle/vextendsingle/vextendsingle/vextendsingle
z=3=G(1+(1
3))(1−1
2(1
3))=(4
3)(5
6)G
ThusG=3.6, and we can multiply the two factors to obtain H(z)=3.6+1.8z−1−1.8z−2.
Finally, we can write the difference equation for this FIR ﬁlter as
y[n]=3.6x [n]+1.8x [n−1]−1.8x [n−2]
378 CHAPTER 9 z-TRANSFORMS
EXERCISE 9.3 Determine the impulse response h[n] of an FIR ﬁlter whose system function is
H(z)=4(1−ejπ/2z−1)(1−e−jπ/ 2z−1)(1+0.8z−1)
Multiply the factors to get a polynomial and then determine the impulse response by
“inverse z-transformation.”
Note: The terms with complex conjugate roots can be simpliﬁed as follows:
(1−rejθz−1)(1−re−jθz−1)=1−2rcos(θ)z−1+r2z−2
9-4 Convolution and the z-Transform
The power of the z-transform lies in the convolution property which states that polynomial
multiplication of z-transforms is equivalent to time-domain convolution. In this section,
we derive this important transform property by generalizing the result in (9.15). To showthat the convolution of two signals can be “transformed” into a product of z-transforms,
recall that discrete convolution of two sequences x[n]andh[n] is given by
y[n]=x [n]∗h[n]= M/summationdisplay
k=0h[k]x[n−k] (9.21)
where M+1 is the length of the sequence h[n]. For the time being we assume that x[n]
also has ﬁnite length, which implies that the length of the result y[n]is ﬁnite. To prove
the desired general result, we take the z-transform of both sides of (9.21). On the right-
hand side of (9.21), only the terms x[n−k]depend on n, and their z-transforms are
z−kX(z) which is obtained with the general delay property (9.7). The convolution sum is
a superposition of these delayed signals (scaled by h[k]), so the linearity property (9.5)
leads to
Y(z)=M/summationdisplay
k=0/parenleftbigg
h[k]/parenleftbig
z−kX(z)/parenrightbig
/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
z-transform/parenrightbigg
(9.22a)
=/parenleftbiggM/summationdisplay
k=0h[k]z−k/parenrightbigg
X(z)=H(z)X(z). (9.22b)
In (9.22a) X(z) is common to all the terms in the sum so it can be factored out to obtain
(9.22b). If x[n]is a ﬁnite-length sequence, its z-transform X(z) is a polynomial, so
we have proven that the z-transform operator transforms convolution into polynomial
multiplication.4The details of polynomial multiplication are illustrated in the following
example.
4This derivation of the convolution property can be extended to inﬁnite-length signals because only the
linearity and delay properties are needed. However, with inﬁnite-length signals there is always a question of
convergence of the inﬁnite sums, so we must say that the convolution property is true if the two z-transforms
being multiplied have overlapping regions of convergence in the z-plane.
9-4 CONVOLUTION AND THE z-TRANSFORM 379
EXAMPLE 9-5 Convolution via H(z)X(z)
Thez-transform method can be used to convolve the following signals:
x[n]=δ [n−1]−δ [n−2]+δ[n−3]−δ [n−4]
h[n]=δ [n]+2 δ[n−1]+3δ [n−2]+4δ[n−3]
Thez-transforms of the sequences x[n]andh[n] are
X(z)=0+1z−1−1z−2+1z−3−1z−4
andH(z)=1+2z−1+3z−2+4z−3
BothX(z) andH(z) are polynomials in z−1, so we can compute the z-transform of the
convolution by multiplying these two polynomials, that is,
Y(z)=H(z)X(z)
=(1+2z−1+3z−2+4z−3)(z−1−z−2+z−3−z−4)
=z−1+(−1+2)z−2+(1−2+3)z−3
+(−1+2−3+4)z−4
+(−2+3−4)z−5+(−3+4)z−6+(−4)z−7
=z−1+z−2+2z−3+2z−4−3z−5+z−6−4z−7
Since the coefﬁcients of any z-polynomial are the sequence values, with their position in
time being indicated by the power of (z−1), we can “inverse transform” Y(z) to obtain
y[n]=δ [n−1]+δ [n−2]+2δ[n−3]+2 δ[n−4]
−3δ[n−5]+δ [n−6]−4 δ[n−7]
To verify that we have obtained the correct convolution result, we now perform the
convolution sum (9.21) directly to compute the output. If we write out a few terms, we
can detect a pattern that is similar to the z-transform polynomial multiplication.
y[0]=h[0 ]x[0]=1(0 )=0
y[1]=h[0 ]x[1]+h[1]x [0]=1(1) +2(0)=1
y[2]=h[0 ]x[2]+h[1]x [1]+h[2 ]x[0]
=1(−1) +2(1)+3(0)=1
y[3]=h[0 ]x[3]+h[1]x [2]+h[2 ]x[1]+h[3]x [0]
=1(1)+2(−1)+3(1)+4(0)=2
y[4]=h[0 ]x[4]+h[1]x [3]+h[2 ]x[2]+h[3]x [1]
=1(−1) +2(1)+3(−1) +4(1)=2
...=...
380 CHAPTER 9 z-TRANSFORMS
For each term above, notice how the index of h[k]and the index of x[n−k]sum to the
same value (i.e., n) for all products that contribute to y[n]. The same thing happens in
polynomial multiplication because exponents add.
In Section 5-4.3.1 on p. 182 we demonstrated a synthetic multiplication table
for evaluating the convolution of x[n]withh[n]. Now we have a justiﬁcation
for this procedure because we are, in fact, multiplying the polynomials X(z)
andH(z) . The procedure is repeated below for the numerical example of this
section.
zz0z−1z−2z−3z−4z−5z−6z−7
x[n], X(z) 0+1−1+1−1000
h[n], H(z) 12 3 4
X(z) 0+1−1+1−1000
2z−1X(z) 0+2−2+2−200
3z−2X(z) 0+3−3+3−30
4z−3X(z) 0+4−4+4−4
y[n], Y(z) 0+1+1+2+2−3+1−4
In thez-transforms X(z) ,H(z) , andY(z) , the power of z−1is implied by the horizontal
position of the coefﬁcient in the table. Each row is produced by multiplying the x[n]
row by one of the h[n] values and shifting the result right by the implied power of
z−1. The ﬁnal answer is obtained by summing down the columns, so the bottom row
has the values of y[n]=x [n]∗h[n] or, equivalently, the coefﬁcients of the polynomial
Y(z) .
In this section we have established that convolution and polynomial multiplication
are essentially the same thing.5Indeed, the most important result of z-transform
theory is
Convolution Maps to Multiplication
ofz-Transforms
y[n]=h[n]∗x [n]z←→ Y(z)=H(z)X(z)
This result has many implications far beyond its use as a basis for understanding and
implementing convolution.
5In MATLAB, there is no special function for multiplying polynomials. Instead, you simply use the
convolution function conv to multiply polynomials since polynomial multiplication is identical to discrete
convolution of the sequences of coefﬁcients.
9-4 CONVOLUTION AND THE z-TRANSFORM 381
EXERCISE 9.4 Use the z-transform of
x[n]=δ [n−1]−δ [n−2]+δ[n−3]−δ [n−4]
and the system function H(z)=1−z−1to ﬁnd the output of a ﬁrst-difference ﬁlter
when x[n]is the input. Compute your answer by using polynomial multiplication
and also by using the difference equation:
y[n]=x [n]−x [n−1]
What is the degree of the z-transform polynomial that represents the output y[n]?
9-4.1 Cascading Systems
One of the main applications of the z-transform in system design is its use in creating
alternative ﬁlter structures that have exactly the same input–output behavior.An important
example is the cascade connection of two or more LTI systems. In block diagramform, the cascade is drawn with the output of the ﬁrst system connected to the inputof the second, as in Fig. 9-3. The input signal is x[n]and the overall output is y[n].
The sequence w[n]is an intermediate signal that can be thought of as temporary
storage.
As we have already seen in Section 5-8 on p. 202, if h
1[n]andh2[n]are
the respective impulse responses of the ﬁrst and second systems, then the overallimpulse response from input x[n]to output y[n]in Fig. 9-3 is h[n]=h
1[n]∗h 2[n]
(i.e., convolution). Therefore, the z-transform of the overall impulse response
h[n] is the product of the individual z-transforms of the two impulse responses,
that is,
Cascade of LTI Systems
h[n]=h 1[n]∗h 2[n]z←→ H(z)=H1(z)H 2(z)
An important consequence of this result follows easily from the fact that
multiplication is commutative; so that H(z)=H1(z)H 2(z)=H2(z)H 1(z). This implies
that convolution must also be a commutative operation and that the two systemscan be cascaded in either order and we still obtain the same overall systemresponse.
LTI 1
H1.´/;h 1Œn/c141LTI 2
H2.´/;h 2Œn/c141 X.´/ Y.´/ W.´/wŒn/c141 xŒn/c141 yŒn/c141Figure 9-3 Cascade of two LTI
systems.
382 CHAPTER 9 z-TRANSFORMS
EXAMPLE 9-6 H(z) for Cascade
To give a simple example of this idea, consider a system described by the difference
equations
w[n]=3x [n]−x [n−1] (9.23a)
y[n]=2 w[n]−w [n−1] (9.23b)
which deﬁne a cascade of two ﬁrst-order systems. As in Fig. 9-3, the output w[n]of
the ﬁrst system is the input to the second system, and the overall output is the output of
the second system. The intermediate signal w[n]in (9.23a) must be computed prior to
being used in (9.23b). We can combine the two ﬁlters into a single difference equationby substituting w[n]from the ﬁrst system into the second, which gives
y[n]=2 w[n]−w [n−1]
=2(3x[n]−x [n−1])−(3x[n−1]−x [n−2])
=6x[n]−5x [n−1]+x [n−2] (9.24)
Thus we have proved that the cascade of the two ﬁrst-order systems is equivalent to a
single second-order system. It is important to notice that the difference equation (9.24)deﬁnes an algorithm for computing y[n]that is different from the algorithm speciﬁed by
(9.23a) and (9.23b) together. However, the outputs of the two different implementationswould be exactly the same, assuming perfectly accurate computation.
Working out the details of the overall difference equation as in (9.24) would be
extremely tedious if the systems were higher order. The z-transform simpliﬁes these
operations into the multiplication of polynomials. The z-transform of the ﬁrst-order
systems gives the following system functions
H
1(z)=3−z−1and H2(z)=2−z−1
Therefore, the overall system function is the product
H(z)=(3−z−1)(2−z−1)=6−5z−1+z−2
whose polynomial coefﬁcients match the ﬁlter coefﬁcients in the difference equation(9.24). Note that, even in this simple example, the z-domain solution is more
straightforward than the n-domain solution.
EXERCISE 9.5 Usez-transforms to combine the following cascaded systems
w[n]=x [n]+x [n−1]
y[n]=w [n]−w [n−1]+w [n−2]
into a single difference equation for y[n]in terms of x[n].
9-4 CONVOLUTION AND THE z-TRANSFORM 383
9-4.2 Factoring z-Polynomials
If we can multiply z-transforms to get higher order systems, we can also factor z-transform
polynomials to break down a large system into smaller modules. Since cascading systems
is equivalent to multiplying their system functions, the factors of a high-order polynomialH(z) represent component systems that make up H(z) in a cascade connection.
EXAMPLE 9-7 Split H(z) into a Cascade
Consider the following third-order system
H(z)=1−2z−1+2z−2−z−3
which we want to split into the cascade of lower order systems with real coefﬁcients.Since we want a product of system functions for the cascade, we need to ﬁnd the rootsand use the product form in (9.20). The MATLAB function
roots([1, -2, 2, -1])
will extract the roots giving
1.0, 0.5000 + 0.8660i, and 0.5000 - 0.8660i
One of the roots of H(z) isz=1, soH1(z)=(1−z−1)is a factor of H(z) . The other two
ﬁrst-order factors have complex roots, but these roots are complex conjugates. Therefore,in order to obtain the other system function for the cascade we must form the product ofthese terms as
H
2(z)=(1−ejπ/3z−1)(1−e−jπ/ 3z−1)=1−z−1+z−2
The resulting second-order factor has real coefﬁcients. This is an instance of the general
property that the complex-valued roots of a polynomial with real coefﬁcients must occurin conjugate pairs. The factorization of H(z) as
H(z)=(1−z
−1)(1−z−1+z−2)
gives the cascade shown in the block diagram of Fig. 9-4. The resulting differenceequations for the cascade are obtained by inverse transforming the factors of H(z)
w[n]=x [n]−x [n−1]
y[n]=w [n]−w [n−1]+w [n−2]
1/NUL´/NUL11/NUL´/NUL1C´/NUL2
H1.´/ H2.´/X.´/ Y.´/ W.´/wŒn/c141 xŒn/c141 yŒn/c141Figure 9-4 Factoring
H(z)=1−2z−1+2z−2−z−3
into the product of a ﬁrst-order
system and a second-order system.
384 CHAPTER 9 z-TRANSFORMS
9-4.3 Deconvolution
The cascading property leads to an interesting question that has practical application. Can
we use the second ﬁlter in a cascade to undo the effect of the ﬁrst ﬁlter? What we would
like is for the output of the second ﬁlter to be equal to the input to the ﬁrst. Stated moreprecisely, suppose that we have the cascade of two ﬁlters H
1(z)andH2(z), and H1(z)is
known. Is it possible to ﬁnd H2(z)so that the overall system has its output equal to the
input? If so, the z-transform analysis tells us that its system function would have to be
H(z)=1, so that
Y(z)=H1(z)H 2(z)X(z) =H(z)X(z) =X(z)
Since the ﬁrst system processes the input via convolution, the second ﬁlter tries to
undo convolution, so the process is called deconvolution. Another term for this is inverse
ﬁltering , and if H1(z)H 2(z)=1, then H2(z)is said to be the inverse ofH1(z)(and vice
versa).
EXAMPLE 9-8 Deconvolution
If we take a speciﬁc example, we can generate a solution in terms of z-transforms. Suppose
thatH1(z)=1+0.1z−1−0.72z−2. We want H(z)=1, so we require that
H1(z)H 2(z)=1
SinceH1(z)is known, we can solve for H2(z)to get
H2(z)=1
H1(z)=1
1+0.1z−1−0.72z−2
What are we to make of this example? It seems that the deconvolver for an FIR ﬁlter
must have a system function that is not a polynomial, but a rational function (ratio of twopolynomials) with a denominator instead. This means that the inverse ﬁlter for an FIR ﬁltercannot be another FIR ﬁlter, and deconvolution suddenly is not as simple as it appeared.Since we have not yet considered the possibility of anything but polynomial systemfunctions, we cannot give the solution in the form of a difference equation. However, inChapter 10, we will see that other types of LTI systems exist that do have rational systemfunctions with denominators. We will explore aspects of the inverse ﬁltering problem inProblem P-10.27.
9-5 Relationship Between the z-Domain and the ˆω-Domain
The FIR system function H(z) has a functional form that is identical to the form of the
frequency response formula H(ejˆω). The same is true for the z-transform of a length-
Lsignal x[n]where the functional form of X(z) is identical to the form of the DTFT
9-5 RELATIONSHIP BETWEEN THE z-DOMAIN AND THE ˆω-DOMAIN 385
X(ejˆω). This is quite easy to see if we display the frequency-domain formulas alongside
thez-transform formulas:
z-Domainz=ejˆω
←→ ˆω-Domain
H(z)=M/summationdisplay
k=0bkz−kH(ejˆω)=M/summationdisplay
k=0bke−jˆωk
X(z)=L−1/summationdisplay
n=0x[n]z−nX(ejˆω)=L−1/summationdisplay
n=0x[n]e−jˆωn
After comparing the left- and right-hand sides, we see a clear correspondence between
thez- andˆω-domains if we make the following substitution in H(z) orX(z)
z=ejˆω(9.25)
because6thenz−n=(ejˆω)−n. The substitution (9.25) connects the frequency domain to
thez-domain, and allows us to get the DTFT X(ejˆω)from the z-transform X(z)
X(ejˆω)=X(z)/vextendsingle/vextendsingle/vextendsingle/vextendsingle
z=ejˆω(9.26)
The same is true for getting the frequency response H(ejˆω)from the z-transform system
function H(z) . For example, when we analyze an FIR ﬁlter whose system function is
H(z)=1−z−2, its frequency response is H(ejˆω)=1−e−j2ˆω, after changing ztoejˆω.
DEMO
Three Domains—FIRWe have implied by the notationz=ejˆω
←→ that going from the z-transform system function
to the DTFT can be reversed. This can be accomplished by expressing H(ejˆω)in terms
of powers of e−jˆωand then replacing each term e−jˆωkbyz−k. The following example
illustrates this process.
EXAMPLE 9-9 Moving from ˆωtoz
Consider a DTFT function expressed as
H(ejˆω)=(1+cos 2ˆω)e−j3ˆω
Using the inverse Euler formula for the cosine term gives
H(ejˆω)=/parenleftBigg
1+ej2ˆω+e−j2ˆω
2/parenrightBigg
e−j3ˆω=(ejˆω)−3+1
2(ejˆω)−1+1
2(ejˆω)−5
Making the substitution ejˆω=zgives
H(z)=z−3+1
2z−1+1
2z−5=1
2z−1+z−3+1
2z−5
6The variables nandkin the summations are dummy indices for counting through the terms in the sum.
386 CHAPTER 9 z-TRANSFORMS
If the impulse response of the system is needed, the inverse z-transform gives
h[n]=1
2δ[n−1]+δ [n−3]+1
2δ[n−5]
9-5.1 The z-Plane and the Unit Circle
Thez-transform X(z) is a complex-valued function of the complex variable z=x+jy,
so a plot of the magnitude |X(z)|would be a three-dimensional (3-D) plot of magnitude
versus xandy, such as Fig. 9-5. The notation X(ejˆω)in (9.26) emphasizes the connection
between the ˆω-domain and the z-domain because it indicates explicitly that the DTFT
X(ejˆω)is obtained from X(z) byevaluating X(z) for a speciﬁc set of values in the
z-plane. These values z=ejˆωare a set of complex numbers whose magnitude is always
one and whose angle is ˆω, which is also the frequency variable of the DTFT. In other
words, the values of z=ejˆωdeﬁne a circle of radius one in the z-plane, which is called
theunit circle, and the DTFT is the z-transform evaluated on the unit circle. This is
illustrated in Fig. 9-6, which shows the unit circle and a typical point z=ejˆω, which is
at a distance of 1 from the origin and at an angle of ˆωwith respect to the real axis of the
z-plane.
Figure 9-5 Thez-transform
X(z)=1+1
2z−1−1
2z−2=(1+z−1)(1−1
2z−1)
evaluated over the region {|z|≤1.5} of the
z-plane that includes the unit circle. The
evaluation of H(z) on the unit circle is the orange
line. The view is from the ﬁrst quadrant, so the
real axis runs right to left, and the point z=1i s
on the left. The two small orange circles indicate
where X(z)=0; these zeros are at z=−1,1
2.
Since|X(z)|→∞ when|z|→0, the height of
the plot is clipped to |H(z)|≤3 to reduce the
vertical range and make the zeros easier to see.
9-5 RELATIONSHIP BETWEEN THE z-DOMAIN AND THE ˆω-DOMAIN 387
1/Ifractur{z}
=2
= ±π /Rfractur{z}z = ejω
ωπ
= −2πˆ
ˆωˆ
ωˆ= 0ωˆωˆ
Figure 9-6 The complex z-plane including
the unit circle, where z=ejˆω. The angle
around the circle is determined by the
frequency ˆω. The thick colored shading of
the unit circle corresponds to a frequencyinterval from 0 to ˆω. The gray dots on the
unit circle are the points {1,j ,−1, −j}
which correspond to ˆω={0,
π
2,±π,−π
2}.
The graphical representation of Fig. 9-6 gives us a convenient way of visualizing the
relationship between the ˆω-domain and the z-domain. Since the ˆω-domain lies on a special
part of the z-domain—the unit circle—many properties of the DTFT are evident from
z-plane plots, as well as from root locations when X(z) has numerator and denominator
polynomials. For example, the periodicity of the DTFT is obvious from Fig. 9-6, which
shows that evaluating the system function at all points on the unit circle requires movingthrough an angle of 2 πrad. But, since the frequency ˆωis also the angle of e
jˆωin the
z-plane, a frequency range of −π< ˆω≤πcovers all the angles with one trip around the
unit circle. If the frequency starts at ˆω=−πand increases to π, the circle is traversed
in a counterclockwise manner starting at z=e−jπ=−1, then to z=e−jπ/ 2=−j, then
toz=ej0=1, and z=+j, and ﬁnally back to z=ejπ=−1. Continuing around
the unit circle more times simply cycles through more periods of the DTFT. Thegray dots in Fig. 9-6 highlight speciﬁc points in the z-plane and their corresponding
frequencies.
In Sections 9-2 and 9-4, a number of useful properties of the z-transform were
derived and their application was demonstrated. It should be clear from the discussionso far in this section that all these properties are inherited by the DTFT by virtueof the substitution z=e
jˆωin (9.26), see Table 9-1. To use the z-transform and
the DTFT to solve signals and systems problems, it is essential to become sofamiliar with these properties that Table 9-1 no longer needs to be searched as areference.
9-5.2 The z-Transform and the DFT
In Chapter 8, we deﬁned the discrete Fourier transform (DFT) for ﬁnite-length sequencesand showed that it is identical to frequency samples of the discrete-time Fourier transform(DTFT). Not surprisingly, given the relationship between the z-transform and the DTFT,
there is also a direct relationship between the z-transform of a length-N sequence and its
N-point DFT. This is easily seen by placing the relevant equations side by side as in
388 CHAPTER 9 z-TRANSFORMS
Table 9-1 Shared properties of z-transforms and DTFTs.
Property n-Domain z-Domain ˆω-Domain
Deﬁnition x[n] X(z)=∞/summationdisplay
n=−∞x[n]z−nX(ejˆω)=∞/summationdisplay
n=−∞x[n]e−jˆωn
Linearity ax1[n]+bx 2[n] aX 1(z)+bX2(z) aX 1(ejˆω)+bX2(ejˆω)
Time delay x[n−n0] z−n0X(z) e−jˆωn0X(ejˆω)
Convolution h[n]∗x [n] H(z)X(z) H(ejˆω)X(ejˆω)
Cascade LTI h1[n]∗h 2[n] H1(z)H 2(z) H1(ejˆω)H2(ejˆω)
z-Domain DFT
X(z)=N−1/summationdisplay
n=0x[n]z−n z=ej(2π/N)k
−→ X[k]=N−1/summationdisplay
n=0x[n]e−j(2π/N)kn
From (9.26), we have the general relation
X[k]=X(ej(2π/N)k)=X(z)/vextendsingle/vextendsingle/vextendsingle/vextendsingle
z=ej(2π/N)kk=0,1,...,N −1 (9.27)
which states that the DFT consists of samples of X(z) evaluated at Npoints on the unit
circle. Note that in representing the transition from the z-transform to the DFT, we have
used the notationz=ej(2π/N)k
−→ , which has a unidirectional arrow to indicate that it may not be
possible to go from the DFT values uniquely back to the z-transform polynomial X(z) by
reversing the substitution. This is because the DFT is a set of Ncomplex numbers obtained
directly by computation from a length-N sequence x[n]. If we know that the length of
the underlying signal is Nor less, then the NDFT coefﬁcients would be sufﬁcient to
recover the signal and its z-transform.
Figure 9-7 shows the z-plane and the unit circle with gray dots corresponding to the
values of zwhere the z-transform is sampled when we evaluate (9.27), assuming N=8,
and smaller colored dots for the sample locations when N=60. Note that the points are
all on the unit circle at a regular angular spacing of (2π/N) . This ﬁgure helps to make three
things clear about the DFT. First, the ﬁgure shows that the set of DFT coefﬁcients X[k]is
a periodic sequence having period N, since if we let kgo outside the range 0 ≤k≤N−1,
thez-plane points z=ej2πk/Nrepeat around the unit circle. Second, the DFT value for
k=0 corresponds to DC (i.e., ˆω=0 andz=1), while k=N/2 (assuming Nis even)
9-6 THE ZEROS AND POLES OF H(z) 389
/Ifractur{z}
/Rfractur{z}(2π/N)k = N/ 4 = 2
k = 3N/4 = 64 = k = N/ 2k = 3
k = 0
k = 7 k = 51z = ejωˆ
Figure 9-7 The complex z-plane including
the unit circle, where z=ejˆω. The gray dots
on the unit circle are locations where values
ofX(z) are evaluated by the N=8-point
DFT, i.e., at the points zk=ej(2π/8)kwith
k=0,1,...,7. The orange dots are
locations where values of X(z) are evaluated
by a 60-point DFT.
corresponds to the frequency ˆω=πandz=−1. Finally, if we compare the N=60
case to the N=8 case, we can say something about zero-padding. Suppose that x[n]is
a sequence of length 8, then its z-transform is a 7th-degree polynomial, and the 8-point
DFT of x[n]is the sampled z-transform
X8[k]=/parenleftbigg7/summationdisplay
n=0x[n]z−n/parenrightbigg/vextendsingle/vextendsingle/vextendsingle/vextendsingle
z=ej(2π/8)kk=0,1,...,7 (9.28)
These are the samples at the eight gray dots in Fig. 9-7. If we want more frequency
samples, say N=60, then we can “zero-pad” the 8-point sequence with 52 zeros and
take a 60-point DFT. The result is to sample the sameX(z) , but at a ﬁner angular spacing:
X60[k]=/parenleftbigg7/summationdisplay
n=0x[n]z−n/parenrightbigg/vextendsingle/vextendsingle/vextendsingle/vextendsingle
z=ej(2π/60)kk=0,1,...,59 (9.29)
These are the samples of X(z) at the 60 orange dots in Fig. 9-7. It is interesting to note
that the eight gray dots are not a subset of the 60 colored dots, which means that zero
padding will not always interpolate new frequency samples while keeping the existingones. Finally, we note that choosing N/greatermuch8 will increase the density of the dots in
Fig. 9-7, and in the limit as N→∞ , for most practical purposes, we will have evaluated
thez-transform everywhere on the unit circle, which means that we have computed the
DTFT.
9-6 The Zeros and Poles of H(z)
The roots of the z-transform polynomials play a key role in simplifying the use of the
system function H(z) for problem solving. The product form of H(z) given in (9.20)
shows that H(z) is a product of ﬁrst-order factors (1−zkz−1). For example, in Example 9-4
the system function was factored as
390 CHAPTER 9 z-TRANSFORMS
H(z)=1−2z−1+2z−2−z−3=(1−1z−1)(1−ejπ/3z−1)(1−e−jπ/ 3z−1)(9.30a)
If we use the identity (1−zkz−1)=(z−zk)/z, thenH(z) also can be written as
H(z)=(z−1)(z−ejπ/3)(z−e−jπ/ 3)
z3(9.30b)
The roots of H(z) are locations where H(z)=0, so these locations, which come from
the factors in the numerator of (9.30b), are called the zeros of the system function. The
factored form in (9.30b) shows clearly that the zeros are located at z1=1,z2=ejπ/3,
andz3=e−jπ/ 3in the z-plane, but notice that the same zeros are evident in (9.30a) as
coefﬁcients of z−1. The zeros of H(z) can be complex as is the case in (9.30b).
Equation (9.30b) also shows that H(z)→∞ when z→0. Values of zfor which
H(z) is inﬁnite (and might be undeﬁned) are called poles ofH(z) . In (9.30b) we say that
the denominator term z3represents three poles at z=0, or equivalently that H(z) has a
third-order pole at z=0.
When H(z) contains only negative powers of z, it is usually most convenient to use
(9.30a), since the negative powers of zhave a direct correspondence to the difference
equation and the impulse response. Furthermore, the factored form in (9.30a) does show
explicitly that the zeros are located at z1=1,z2=ejπ/3, andz3=e−jπ/ 3in thez-plane,
and less directly, that each factor has a pole at z=∞ . This factored form with negative
powers of zis the most commonly used factorization in z-transform theory for signal
processing. Initially, using the negative powers of zcan be confusing, but there are long-
term beneﬁts to this notation.
9-6.1 Pole-Zero Plot
A graphical presentation of the zeros and poles makes it easy to visualize their locations
relative to each other, and their positions relative to the unit circle, so we plot the zerosand poles of H(z) as points in the complex z-plane. The plot in Fig. 9-8 shows the three
zeros and the three poles for Example 9-7. Such a plot is called a pole-zero plot . This plot
was generated in MATLAB using the
zplane function.7Each zero location is denoted
(3)
<f´g=f´g
Figure 9-8 Zeros and poles of H(z) marked in a
z-plane that includes the unit circle.
7In the DSP-First Toolbox, there is a function called zzplane that makes pole-zero plots.
9-6 THE ZEROS AND POLES OF H(z) 391
by a small circle, and the three repeated poles at z=0 are indicated by a single ×with
a numeral 3 beside it. In general, for non-repeated poles the ×symbol alone marks the
location of each pole. Since the unit circle is where H(z) is evaluated to obtain the DTFT
of the LTI system whose system function is H(z) , it is also shown for reference as a gray
circle in Fig. 9-8.
9-6.2 Signiﬁcance of the Zeros of H(z)
Thez-domain zeros can provide a link between the time-domain response of a system
and the system function. In Section 9-6, we showed that the zeros of a polynomial system
function are sufﬁcient to determine H(z) except for a constant multiplier. The system
function determines the FIR difference equation of the ﬁlter because the polynomialcoefﬁcients of H(z) are also the coefﬁcients of the FIR difference equation. The difference
equation (or convolution) is the computational method that turns an input x[n]into the
corresponding output y[n]. However, we can ﬁnd certain inputs where knowledge of the
zero locations is sufﬁcient to make a precise statement about the output without actuallyusing the difference equation to compute y[n]. Such signals are of the form x[n]=z
n
0
for all n, where the subscript signiﬁes that z0is a ﬁxed complex number. In this case, the
output is
y[n]=M/summationdisplay
k=0bkx[n−k] (9.31a)
y[n]=M/summationdisplay
k=0bkzn−k
0 (9.31b)
y[n]=M/summationdisplay
k=0bkzn
0z−k==H(z 0)/bracehtipdownleft/bracehtipupright/bracehtipupleft /bracehtipdownright/parenleftbiggM/summationdisplay
k=0bkz−k
0/parenrightbigg
zn
0 (9.31c)
The quantity H(z 0)is a complex constant obtained by evaluating H(z) atz=z0. The
value of H(z 0), through complex multiplication, causes a magnitude and phase change
of the input signal zn
0. A very interesting case occurs when z0is one of the zeros of H(z) .
ThenH(z 0)=0 so the output from x[n]=zn
0is zero. This zero-output case is called
nulling.
EXAMPLE 9-10 Nulling Signals with Zeros
The system function studied in Example 9-7 is H(z)=1−2z−1+2z−2−z−3, and its
zeros are
z1=1 ⇒H(z 1)=0
z2=1
2+j1
2√
3=1ejπ/3⇒H(z 2)=0
z3=1
2−j1
2√
3=1e−jπ/ 3⇒H(z 3)=0
392 CHAPTER 9 z-TRANSFORMS
As shown in Fig. 9-8, these zeros all lie on the unit circle. Since the angle of a vector
from the origin to a point on the unit circle corresponds to ˆωin the frequency domain,
complex sinusoids with frequencies 0, π/3, and −π/ 3 are “nulled out” by the system.
That is, the output resulting from each of the following three signals will be zero:
x1[n]=(z 1)n=1
x2[n]=(z 2)n=ej(π/ 3)n
x3[n]=(z 3)n=e−j(π/ 3)n
For example, when the input is x2[n], the output is y2[n]=H(z 2)(z2)n=0.
As illustrated by this example, zeros of the system function that lie on the unit circle
are very special. Their angles correspond to frequencies at which the gain of the system
is zero (i.e., where the DTFT (or frequency response) is zero). Thus, complex sinusoidsat those frequencies are blocked, or “nulled” by the system. DEMO
PeZ GUI
EXERCISE 9.6 Double check the fact that the input x2[n]determined in Example 9-10 produces an
output that is zero everywhere by substituting this signal into the difference equationy[n]=x [n]−2 x[n−1]+2 x[n−2]−x[n−3]to show that the complex phasors
cancel out for all values of n.
Also show that the ﬁlter nulls out signals such as 2 cos (πn/3), which is the sum of
x
2[n]andx3[n].
9-6.3 Nulling Filters
We have just shown that if the zeros of H(z) lie on the unit circle, then speciﬁc complex
exponential or sinusoidal input signals are nulled (i.e., removed, by the ﬁlter). Therefore,it should be possible to use this result in designing a practical FIR ﬁlter that can null aninterfering sinusoidal input. Such capability is often needed to eliminate jamming signalsin a radar or communications system. Similarly, interference from a 60-Hz power linecould be eliminated by placing a null at the correct ˆωfrequency.
Zeros in the z-plane can remove only signals that have the special form x[n]=z
n
0.
If we want to eliminate a sinusoidal input signal, then we actually have to remove twosignals, because
x[n]=cos( ˆω
0n)=1
2(ejˆω0)n+1
2(e−jˆω0)n
Each complex exponential can be removed with a ﬁrst-order FIR ﬁlter, and then the twoﬁlters would be cascaded to form the second-order nulling ﬁlter that removes the cosine.
The ﬁrst complex exponential signal is nulled by a ﬁlter with system function
H
1(z)=1−z1z−1
9-6 THE ZEROS AND POLES OF H(z) 393
where z1=ejˆω0because H1(z1)=0a tz=z1, that is,
H1(z1)=1−z1(z1)−1=1−1=0
Similarly, H2(z)=1−z2z−1removes the second complex exponential if z2=e−jˆω0.
Then, we cascade these two ﬁlters to create the second-order nulling ﬁlter whose system
function is the product
H(z)=H1(z)H 2(z)
=(1−z1z−1)(1−z2z−1)
=1−(z1+z2)z−1+(z1z2)z−2
=1−(ejˆω0+e−jˆω0)z−1+(ejˆω0e−jˆω0)z−2
=1−2 cos( ˆω0)z−1+z−2
This second-order FIR ﬁlter has two zeros, at z1=ejˆω0andz2=e−jˆω0, along with
two poles at the origin. Figure 9-9 shows a special case where the two zeros remove
components at z=e±jπ/ 4. From these zeros the numerical values for the coefﬁcients of
H(z) are
H(z)=1−2 cos(π/4 )z−1+z−2
Thus the nulling ﬁlter that removes the signal cos(0 .25πn) from its input is the FIR ﬁlter
whose difference equation is
y[n]=x [n]−√
2x[n−1]+x [n−2] (9.32)
9-6.4 Graphical Relation Between zandˆω
The equation z=ejˆωprovides the link between the z-domain and the ˆω-domain. As we
have shown in (9.26), the DTFT is obtained by evaluating the system function on the unitcircle of the z-plane. The graphical interpretation is that we visualize (or draw) the 3-D
(2)
<f´g=f´g
Figure 9-9 Zeros on unit circle for second-order
nulling ﬁlter to remove complex exponential
components at ˆω0=±π/4.
394 CHAPTER 9 z-TRANSFORMS
Figure 9-10 z-Transform system function for an FIR
ﬁlter evaluated over the region {|z|≤1.5} of the
z-plane that includes the unit circle. Values along the
unit circle are shown as the orange line where the
DTFT (magnitude) is evaluated. The view is from the
ﬁrst quadrant, so the point z=1 is in the foreground
on the left. The height of the plot is clipped at|H(z)|≤13. Zeros on the unit circle at z=e
±j2π/11
are marked with small orange circles.
plot of |H(z)|, and then restrict our attention to the unit circle to get the DTFT plot of
|H(ejˆω)|. The poles and zeros play an important role since they tell us where the 3-D plot
is either inﬁnite or equal to zero. In a 3-D magnitude plot, the area around a zero forms a
“valley,” while the area around a pole is an extremely high “peak.” When we restrict ourattention to the unit circle, we are interested in the proximity of valleys and peaks to thepath in 3-D that is traced out along the unit circle as in Figs. 9-5 and 9-10.
By considering only the pole-zero plot of the system function, it is generally possible
to skip the 3-D plot and just imagine how a 3-D plot of |H(z)|restricted to the unit circle
would form the peaks and nulls of the plot of |H(e
jˆω)|versus ˆω. As an example, we
show in Fig. 9-10 a 3-D plot obtained by evaluating the z-transform magnitude |H(z)|
over a region of the z-plane that includes the unit circle as well as values both inside
and outside the unit circle. The system in this case is an 11-point running sum FIRﬁlter, where the coefﬁcients are all equal to one. The frequency response of the 11-pointrunning-sum ﬁlter was discussed in detail in Section 6-7 on p. 234, and the plot of itsmagnitude response is repeated in Fig. 9-11. Note that there are ten zeros at ˆω=2πk/11,
11
O!ˇˇH.ejO!/ˇˇ
/EM/EM
2/NUL/EM
2–/EM 2/EM
11/NUL2/EM
110Figure 9-11 Frequency response (magnitude
only) for the 11-point running sum. These are
the values of H(z) along the unit circle in the
z-plane. There are 10 zeros spread out uniformly
along the frequency axis except for ˆω=0.
9-6 THE ZEROS AND POLES OF H(z) 395
fork=±1,±2,±3,±4,±5, so we expect to have ten zeros of |H(z)|around the unit
circle in Fig. 9-10, where two of them are easy to see.
The system function for the 11-point running-sum ﬁlter is
H(z)=10/summationdisplay
k=0z−k(9.33)
From the frequency response plot we know the angles of the zeros on the unit circle, so
the polynomial in (9.33) can be represented as the product of ten factors
H(z)=(1−ej2π/11z−1)(1−ej4π/11z−1)···(1−ej18π/ 11z−1)(1−ej20π/11z−1)
(9.34)
Recall that each factor of the form (1−ej2πk/11z−1)represents a zero at z=ej2πk/11
and a pole at z=0. Thus, (9.34) displays the 10 zeros of H(z) atz=ej2πk/11, for
k=1,2,...,10 along with 10 poles at z=0. In Section 9-7, we will use the roots of
unity to factor H(z) and conﬁrm that the ten zeros of H(z) in (9.33) are on the unit circle
at angles ˆω=2πk/11, for k=1,2,...,10.
In the 3-D magnitude plot of Fig. 9-10, the ten zeros pin down the 3-D plot around
the unit circle. Inside the unit circle, the values of H(z) become very large owing to the
ten poles at z=0. The frequency response magnitude/vextendsingle/vextendsingleH(ejˆω)/vextendsingle/vextendsingleis obtained by selecting
the values of the z-transform along the unit circle in Fig. 9-10, which conforms to the
plot of/vextendsingle/vextendsingleH(e
jˆω)/vextendsingle/vextendsingleversus ˆωgiven in Fig. 9-11. The shape of the frequency response can be
explained in terms of the zero locations shown in Fig. 9-12 by recognizing that the ten
poles at z=0 push/vextendsingle/vextendsingleH(e jˆω)/vextendsingle/vextendsingleup, but the zeros along the unit circle make H(e jˆω)=0a t
regular intervals except for the region near ˆω=0 where the regular pattern of zeros is
broken by the missing zero at z=1. The unit circle values follow the ups and downs of/vextendsingle/vextendsingleH(z)/vextendsingle/vextendsingleasˆωgoes from −πto+πwith|z|=1.
This example illustrates that an intuitive picture of the frequency response of an LTI
system can be visualized from a plot of the poles and zeros of the system function H(z) .
We simply need to remember that a pole “pushes up” the frequency response and a zero
“pulls it down.” Furthermore, a zero on the unit circle forces the frequency response to
be exactly zero at the frequency corresponding to the angle of the zero.
(10)
<f´g=f´g
Figure 9-12 Zero and pole distribution for the
11-point running sum. There are ten zeros
spread out uniformly around the unit circle,except for z=1, and ten poles at the origin.
396 CHAPTER 9 z-TRANSFORMS
9-6.5 Three-Domain Movies
With the z-transform, DTFT and impulse response (or difference equation) we now have
three ways to describe an FIR LTI system, and these three methods involve three different
domains characterized with the variables z,ˆω, andn. One vital skill for working with
DEMO
3-Domain MoviesLTI systems is the ability to visualize all three domains simultaneously for certain classesof ﬁlters. We developed such a visualization as a movie that presents plots for all threedomains and then shows how the plots change as one parameter is varied. A typicalexample shows how the frequency response and impulse response change as one or twozeros of the FIR ﬁlter are varied. Figure 9-13 shows a frame from a 3-Domain Moviethat illustrates the tie between the z,ˆω, andndomains. The screen layout has a pole-zero
plot and H(z) for the zdomain, magnitude and phase plots of the frequency response
for the ˆωdomain, and a stem plot of h[n] for the ndomain. The control for these movies
is the zdomain because it is easy to think about moving the zeros and watching what
happens in the ˆωandndomains. In the example of Fig. 9-13, the movie sequence moves
the two complex-conjugate zeros around the unit circle by changing their angles. At thesame time, the coefﬁcients of H(z) are updated, along with the plots of h[n] andH(e
jˆω).
1 + 2.8z−1 + 2.8z−2 + z−3
0 10 20 30−10123IMPULSE RESPONSE: h[n]
Time Index (n)0246DTFT:   MAGNITUDE RESPONSE
−0.5 −0.4 −0.3 −0.2 −0.1 00.1 0.2 0.3 0.4 0.5−0.5 −0.4 −0.3 −0.2 −0.1 00 . 10.2 0.3 0.4 0.5
−180−90090180DTFT:   PHASE RESPONSE (DEGREES)
Normalized Frequency (ω/2π)−1 −0.5 0 0.5 1−1−0.500.51
Real PartImaginary Part3
ˆ
Figure 9-13 One frame of a 3-Domain Movie showing the different domains: time domain (n),
frequency domain (ˆω), thez-transform domain H(z) , and a pole-zero plot. In this movie, the
conjugate zero pair moves around on the unit circle.
9-7 SIMPLE FILTERS 397
Finally, as another way to show the same interrelationships, we mention that there is
also a 3-Domain GUI (called PeZ) in which the user can move the zeros by clicking and
dragging with a pointing tool, and simultaneously see changes in the frequency responseand impulse response (see Fig. 10-28 on p. 473 for more details).DEMO
PeZ GUI, Three
Domains—FIR
9-7 Simple Filters
Now that we have new knowledge of the tie between the zandˆωdomains, we can exploit
that knowledge to design FIR ﬁlters with desirable frequency response characteristics.
In this section, we examine a special class of FIR ﬁlters that are all close relatives of therunning-sum ﬁlter.
9-7.1 Generalize the L-Point Running-Sum Filter
A generalization of the L-point running-sum ﬁlter is
y[n]=L−1/summationdisplay
k=0akx[n−k] (9.35)
Note that the running sum is obtained when a=1. It is still easy to determine that the
system function for (9.35) is
H(z)=L−1/summationdisplay
k=0akz−k(9.36)
The ﬁlter order is M=L−1 which is also the degree of the H(z) polynomial. Recalling
the formula (6.24) from p. 234 for the sum of Lterms of a geometric series, H(z) can be
rewritten in two different rational forms
H(z)=L−1/summationdisplay
k=0akz−k=1−aLz−L
1−az−1=zL−aL
zL−1(z−a)(9.37)
The second form for H(z) is a rational function where the numerator polynomial is
zL−aLand the denominator is zL−1(z−a). The zeros of H(z) are determined by the
roots of the numerator polynomial, which are the values of zsuch that
zL−aL=0 =⇒zL=aLej2πk(9.38)
because ej2πk=1 fork, an integer. Then we can take the Lthroot of both sides to obtain
theLroots
z=aej2πk/Lfork=0,1,2,...,L −1 (9.39)
Notice that when a=1 the values in (9.39) satisfy the equation zL=1, so they are the
Lthroots of unity . In general, all the numerator roots (9.39) lie on a circle of radius |a|.
The roots of the denominator in (9.37), which are either z=0 (of order L−1) orz=a,
398 CHAPTER 9 z-TRANSFORMS
would normally be the poles of H(z) . However, since one of the numerator roots is z=a
(when k=0 in (9.39)) the numerator has a term (z−a)that cancels the corresponding
term of the denominator, so that only the denominator term zL−1actually causes the L−1
poles of H(z) . Therefore, it follows that H(z) has degree L−1 and can be expressed in
the factored form
H(z)=L−1/summationdisplay
k=0akz−k=L−1/productdisplay
k=1/parenleftbigg
1−aej2πk/Lz−1/parenrightbigg
(9.40)
Notice that the product (9.40) does not include the k=0 term which would be the
cancelled root at z=a.
EXAMPLE 9-11 H(ejˆω)fromH(z)
The 11-point running-sum ﬁlter (L =11) is the special case where a=1 in (9.37), so
one way to write its system function is
H(z)=10/summationdisplay
k=0z−k=1−z−11
1−z−1(9.41)
Then the frequency response is obtained by substituting ejˆωforz, followed by reducing
the rational form to a Dirichlet form as was done in (6.25) and (6.26) of Chapter 6
H(ejˆω)=H(z)/vextendsingle/vextendsingle
z=ejˆω=1−e−j11ˆω
1−e−jˆω=D11(ˆω)e−j5ˆω(9.42)
The pole-zero diagram for this case was shown previously in Fig. 9-12, along with
the corresponding frequency response in Fig. 9-11. The 11 factors of the numerator
polynomial (z11−1)in (9.41) include a term (z−1)for the zero at z=1 which is
canceled by the corresponding term (z−1)in the denominator. This explains why we
have only ten zeros around the unit circle with the gap at z=1. The ten zeros around
the unit circle in Fig. 9-12 show up as zeros of H(ejˆω)along the ˆωaxis in Fig. 9-11 at
integer multiples of 2 π/11, except for ˆω=0. Note that it is the gap at z=1 that allows
the frequency response to be larger at ˆω=0. The other zeros around the unit circle
keepH(ejˆω)small, thereby creating the “lowpass” ﬁlter frequency response shown in
Fig. 9-11.
EXERCISE 9.7 For the Mth-order FIR ﬁlter whose impulse response is
h[n]=M/summationdisplay
k=0akδ[n−k] (9.43)
the system function in (9.37) or (9.40) has zeros off the unit circle when a/negationslash=1. From
the pole-zero plot of H(z) shown in Fig. 9-14, determine the value of aand also the
ﬁlter length L.
9-7 SIMPLE FILTERS 399
(6)
<f´g=f´g
Figure 9-14 Pole-zero distribution for
theakﬁlter in (9.43) and (9.37) with
M=L−1=6. The six zeros lie on a
circle of radius a=0.8.
9-7.2 A Complex Bandpass Filter
Now we have a new insight that tells us how to control the frequency response of an FIR
ﬁlter by placing equally spaced zeros on the unit circle to make stopbands, but leavingout one zero to make a passband. This viewpoint makes it easy to create other FIR ﬁlterswhere we control the location of the passband. If we move the passband to a centerfrequency away from ˆω=0, and the ﬁlter passes a small band of frequency components,
we call the ﬁlter a bandpass ﬁlter, or BPF.
One way to move the passband is to use the frequency-shifting property of the DTFT
h[n]e
jˆω0nDTFT←→ H(ej(ˆω−ˆω0))
For a simple BPF we can use the running-sum impulse response for h[n], which is all
ones, and pick ˆω0as the center frequency. The z-transform of h[n]ejˆω0nis obtained by
using (9.40) with a=ejˆω0. The result is
H(z)=L−1/summationdisplay
n=01ejˆω0nz−n=L−1/productdisplay
k=1(1−ejˆω0ej2πk/Lz−1) (9.44)
Therefore, the L−1 zeros are at z=ej(ˆω0+2πk/L)fork=1,2,...L −1, which are still
on the unit circle, equally spaced but missing the zero at z=ejˆω0. An example is shown
in Fig. 9-15 for ˆω0=5π/L andL=11. We expect that the passband of the ﬁlter will
move from the frequency interval around DC (z =1) to a like interval centered around
ˆω0. Figure 9-16 conﬁrms our intuition, because the frequency location of the peak is
ˆω=5π/11. This ﬁlter is a bandpass ﬁlter, since/vextendsingle/vextendsingleH(ejˆω)/vextendsingle/vextendsingleis much smaller for frequencies
outside the narrow passband around ˆω=5π/11.
9-7.3 A Bandpass Filter with Real Coefﬁcients
The previous strategy of frequency shifting gives complex-valued ﬁlter coefﬁcients bk=
ak=ejˆω0kwhich might be undesirable if we want to ﬁlter real signals. However, there is
400 CHAPTER 9 z-TRANSFORMS
(10)
<f´g=f´g
Figure 9-15 Zero and pole distribution for an
11-point complex BPF with ˆω0=5π/11. The zero
at angle 5π/ 11 is missing, but there are ten zeros
spread out at angles spaced by 2 π/11 around the
unit circle.
11
O!ˇˇH.ejO!/ˇˇ
/EM –/EM3/EM
11/NUL3/EM
115/EM
11/NUL5/EM
117/EM
11/NUL7/EM
110Figure 9-16 Frequency response (magnitude
only) for the 11-point complex BPF with
ˆω0=5π/11. These are the values along the
unit circle in the z-plane. There are ten zeros
spaced by 2 π/11 along the frequency axis.
a second strategy that yields real ﬁlter coefﬁcients—we can use a cosine to do frequency
shifting (up and down). Thus the ﬁlter coefﬁcients are now
bk=cos(ˆω0(k−km))fork=0,1,...,L −1
where kmis the midpoint of the impulse response, km=1
2(L−1). Any length-L section
of the cosine could be used, but this choice guarantees that the linear phase condition (tobe discussed in Section 9-9) is satisﬁed.
With these real ﬁlter coefﬁcients, this new BPF can be written as the sum of
two complex BPFs. By expanding the cosine coefﬁcients of z
−kin terms of complex
exponentials we obtain
H(z)=L−1/summationdisplay
k=0/parenleftbig
cos(ˆω0(k−km))/parenrightbig
z−k(9.45a)
=L−1/summationdisplay
k=0/parenleftBig
1
2ejˆω0(k−km)+1
2e−jˆω0(k−km)/parenrightBig
z−k
=1
2e−jˆω0kmL−1/summationdisplay
k=0ejˆω0kz−k+1
2ejˆω0kmL−1/summationdisplay
k=0e−jˆω0kz−k
=H1(z)+H2(z) (9.45b)
Thus we expect that the frequency response will have two “Dirichlet” peaks, which is the
case in Fig. 9-17. Note that kmin the exponent only contributes to the phases of H1(z)and
9-8 PRACTICAL BANDPASS FILTER DESIGN 401
O!ˇˇH.ejO!/ˇˇ
/EM –/EM3/EM
115/EM
117/EM
11/NUL3/EM
11/NUL5/EM
11/NUL7/EM
1111
2
0Figure 9-17 Frequency response (magnitude
only) for the 11-point real BPF exhibits two
passbands near ˆω=±5π/11=±ˆω0. Notice
that the peak magnitudes are not locatedexactly at ˆω=±5π/11=0.4545π since the
sidelobes of one Dirichlet form add to the otherpeak to produce H(e
jˆω). The peak value is
5.569 at ˆω=±0.439π .
(10) (2)
<f´g=f´g
Figure 9-18 Pole-zero distribution for the 11-point
real BPF shown in Fig 9-17. Of the original 11 rootsof unity, two have been dropped off the unit circle atthe angles ±5π/ 11, but there is now a double zero
on the real axis at z=−1. There are ten poles at the
origin.
H2(z). In fact, the sum in (9.45b) is the addition of complex quantities, not magnitudes,
so the phase matters when doing the sum. There is no problem in constructing a frequency
response plot in MATLAB which is shown in Fig. 9-17. In addition, the pole-zero diagramin Fig. 9-18 can be made with the zplane function in MATLAB.
9-8 Practical Bandpass Filter Design
Although much better ﬁlters can be designed by more sophisticated methods, the example
of BPF design discussed in Section 9-7 is a useful illustration of the power of thez-transform to simplify the analysis of such problems. Its characterization of a ﬁlter by
the zeros (and poles) of H(z) is used frequently in ﬁlter design and implementation.
The underlying reason is that the z-transform converts difﬁcult problems involving
convolution and frequency response into simple algebraic ideas based on multiplyingand factoring polynomials. Thus, skills with basic algebra become essential everydaytools in design.
As a ﬁnal example of FIR ﬁlters, we present a high-order FIR ﬁlter that has been
designed by a computer-aided ﬁlter-design program. Most digital ﬁlter design is carriedout by software tools that permit much more sophisticated control of the passbandand stopband characteristics than we were able to achieve with the simple analysis ofSection 9-7. Design programs such as
firpm andfir1 can be found in the MATLAB
software augmented with the Signal Processing Toolbox. The discussion in Section 7-4described the underlying methodology of the window method for FIR ﬁlter design which
402 CHAPTER 9 z-TRANSFORMS
0.10.2Center of Symmetry
hŒn/c141
23
2
/NUL0:3/NUL0:2/NUL0:10
TimeI nde x.n/0 5 10 15 20 25Figure 9-19 Impulse response for the 24-point
BPF designed with MATLAB’s fir1 function.
These are the FIR ﬁlter coefﬁcients {bk},
k=0,1,2,...,23, which are needed in the
difference equation implementation.
underliesfir1 , so it is interesting to examine the output from the program fir1 to
get a notion of what can be achieved with a sophisticated design method. The software
allows us to specify the frequency range for the passband, and then computes a goodapproximation to an ideal ﬁlter that has unity gain over the passband and zero gain in thestopband. An example is shown in Figs. 9-19, 9-20, and 9-21 for a length-24 FIR BPF.
The impulse response of the 24-point FIR BPF is shown in Fig. 9-19. Notice that the
coefﬁcients would be labeled {b
k}, from k=0,1,2,...,23. The plot shows an obvious
symmetry about a midpoint at n=23/2. Table 9-2 lists the values for the impulse response
and ﬁlter coefﬁcients. These are the coefﬁcients used in the difference equation
y[n]=23/summationdisplay
k=0bkx[n−k]
to implement the ﬁlter whose frequency response is shown in Fig. 9-20. Notice thewide passbands in the frequency ranges corresponding to 2 π(0.24)<|ˆω|<2π(0.36).
Table 9-2 Filter coefﬁcients of 24-point FIR bandpass.
b0=−0.0108 =b23
b1=0.0037 =b22
b2=−0.0052 =b21
b3=0.0300 =b20
b4=0.0000 =b19
b5=−0.0526 =b18
b6=0.0164 =b17
b7=−0.0219 =b16
b8=0.1275 =b15
b9=0.0000 =b14
b10=−0.3236 =b13
b11=0.2330 =b12
9-8 PRACTICAL BANDPASS FILTER DESIGN 403
1
O!ˇˇH.ejO!/ˇˇ
/EM /NUL/EM 0
–0:72/EM –0:48/EM0:48/EM 0:72/EMFigure 9-20 Frequency response (magnitude
only) for the 24-point BPF. The passbands
are the intervals 0 .48π≤|ˆω|≤0.72π.
The design was performed with
fir1(23,2*[0.2,0.4],kaw) , where
kaw = kaiser(24,2.75) is a Kaiser
window.
 (23)
<f´g=f´g
Figure 9-21 Zero and pole distribution
for a 24-point BPF designed withMATLAB’s
fir1 function. The section
of unit circle corresponding to thepassband of H(e
jˆω)in Fig. 9-20 is
outlined in black.
In these intervals, the gain of the ﬁlter deviates only slightly from one, so the amplitudes
of sinusoidal input signals with these frequencies are not affected by the ﬁlter. We willsee in Section 9-9 that this ﬁlter has linear phase, so these frequency components onlyexperience delay.
Also note that in the regions |ˆω|<2π(0.16)and 2π(0.44)<|ˆω|<2π(0.5)the gain
is very nearly equal to zero. These regions are the “stopbands” of the ﬁlter, since theamplitudes of sinusoids with these frequencies are multiplied by a very small gain andthus blocked from appearing in the output.
Observe that the frequency response tapers smoothly from the passbands to the
stopbands. In these transition regions, sinusoids are reduced in amplitude according tothe gain shown in Fig. 9-20. In many applications, we would want such transition regionsto be very narrow. Ideally, we might even want them to have zero width. While this istheoretically achievable, it comes with a high price, as discussed in Section 7-4.2.5. Itturns out that for an FIR frequency selective (lowpass, bandpass, highpass) ﬁlter, thewidth of the transition region is inversely proportional to M, the order of the system
function polynomial. The higher the order, the narrower the transition regions can be,and as M→∞ , the transition regions shrink to zero. Unfortunately, increasing Malso
increases the amount of computation required to compute each sample of the output, soa trade-off is always required in any practical application.
404 CHAPTER 9 z-TRANSFORMS
Figure 9-21 shows the pole-zero plot of the FIR ﬁlter. Notice the distinctive pattern
of locations of the zeros. In particular, note how the zeros off the unit circle seem to be
grouped into sets of four zeros. Indeed, for each zero that is not on the unit circle, thereare also zeros at the conjugate location, at the reciprocal location, and at the conjugatereciprocal location. These groups of four zeros are strategically placed automaticallyby the design process to form the passband of the ﬁlter. Similarly, the design processplaces zeros on (or close to) the unit circle to ensure that the gain of the ﬁlter is lowin the stopband regions of the frequency axis. Also, note that all complex zeros appearin conjugate pairs, and since the system function is a 23
rdorder polynomial, there are
23 poles at z=0. In Section 9-9, we will show that these properties of the pole-zero
distribution are the direct result of the symmetry of the sequence of ﬁlter coefﬁcients.
9-9 Properties of Linear-Phase Filters
The ﬁlter that was discussed in Section 9-8 is an example of a class of systems where the
sequence of coefﬁcients (impulse response) has symmetry of the form bk=bM−k, for
k=0,1,...,M . Such systems have a number of interesting properties that are easy to
show in the z-domain representation.
9-9.1 The Linear-Phase Condition
FIR systems that have symmetric ﬁlter coefﬁcients (and, therefore, symmetric impulseresponses) have frequency responses with linear phase. An example that we have alreadystudied is the L-point running sum, whose coefﬁcients are all the same and therefore
clearly satisfy the condition b
k=bM−k, fork=0,1,...,M . The example of Section
9-8 also has linear phase because it satisﬁes the same symmetry condition. To see whylinear phase results from this symmetry, let us consider a simple example where thesystem function is of the form
H(z)=b
0+b1z−1+b2z−2+b1z−3+b0z−4(9.46)
Thus, M=4 and the length of the sequence is L=M+1=5 samples. After working
out the frequency response for this special case, the generalization will be obvious. First,observe that we can write H(z) as
H(z)=/parenleftbig
b
0(z2+z−2)+b1(z1+z−1)+b2/parenrightbig
z−2
IfMwere greater, we would simply have more groups of factors of the form (zk+z−k).
Now when we substitute z=ejˆω, each of these factors becomes a cosine term, that is,
H(ejˆω)=/parenleftbig
2b0cos(2ˆω)+2b1cos(ˆω)+b2/parenrightbig
e−jˆωM/ 2
In this speciﬁc example, we have shown that H(ejˆω)is of the form
H(ejˆω)=R(ejˆω)e−jˆωM/ 2(9.47)
9-9 PROPERTIES OF LINEAR-PHASE FILTERS 405
where, in this case, M=4 andR(ejˆω)is the real function
R(ejˆω)=/parenleftbig
2b0cos(2ˆω)+2b1cos(ˆω)+b2/parenrightbig
By following this style of analysis for the general case, it is easy to show that (9.47) holds
whenever bk=bM−k, fork=0,1,...,M . In the general case, it can be shown that the
result depends on whether the integer Mis even or odd
R(ejˆω)=⎧
⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩b
M
2+M−2
2/summationtext
k=02bkcos[(M
2−k)ˆω]Meven
M−1
2/summationtext
k=02bkcos[(M
2−k)ˆω] Modd(9.48)
Equation (9.47) shows that the frequency response of any symmetric ﬁlter has the form
of a real amplitude function R(ejˆω)times a linear-phase factor e−jˆωM/ 2. The phase factor,
as we have seen in Section 6-5.1 on p. 226, corresponds to a delay of M/2 samples. Thus,
the analysis presented in Section 6-7 for the running-average ﬁlter is typical of whathappens in the general symmetric FIR case. The main difference is that by choosing theﬁlter coefﬁcients carefully, as in Section 9-8, we can shape the function R(e
jˆω)to have
a much more selective frequency response.
9-9.2 Locations of the Zeros of FIR Linear-Phase Systems
If the ﬁlter coefﬁcients satisfy the symmetry condition bk=bM−k, fork=0,1,...,M ,
thez-transform polynomial obeys the following “reciprocal property”
H(1/z)=zMH(z) (9.49)
To demonstrate this reciprocal property of linear-phase ﬁlters, consider a 4-point system
function H(z) and replace zwith 1/z
H(1/z)=b0+b1(1/z)−1+b1(1/z)−2+b0(1/z)−3
=b0+b1z1+b1z2+b0z3
=z3(b0+b1z−1+b1z−2+b0z−3)
=z3H(z)
Following the same style for a general M, (9.49) is easily proved for the general case.
The reciprocal property of linear-phase ﬁlters is responsible for the distinctive pattern
of zeros in the pole-zero plot of Fig. 9-21. The zeros that are not on the unit circle occuras quadruples. Furthermore, these quadruples are responsible for creating the passbandof the BPF. Zeros on the unit circle occur in pairs because the complex conjugate partnermust be present, and these zeros are mainly responsible for creating the stopband of theﬁlter.
406 CHAPTER 9 z-TRANSFORMS
These properties can be shown to be true in general for linear-phase ﬁlters.
Speciﬁcally,
When bk=bM−k, fork=0,1,...,M , then if z0is a zero of H(z) ,
so are its conjugate, its inverse, and its conjugate inverse, that is,
{z0,z∗
0,1/z 0,1/z∗
0}are all zeros of H(z) .
The conjugate zeros are included because the ﬁlter coefﬁcients, which are also the
coefﬁcients of H(z) , are real. Therefore, all of the zeros of H(z) must occur in complex-
conjugate pairs. The inverse property of the roots is a consequence of the reciprocal
property (9.49). Using (9.49), and assuming that z0is a zero of H(z) ,w eg e t
H(1/z 0)=zM
0H(z 0)=0
Since H(z 0)=0, then we must have H(1/z 0)=0 also. Most FIR ﬁlters are designed
with a symmetry property, so the zero pattern of Fig. 9-21 is typical.
9-10 Summary and Links
Thez-transform method was introduced in this chapter for FIR ﬁlters and ﬁnite-length
sequences in general. The z-transform reduces the manipulation of LTI systems into
simple operations on polynomials and rational functions. Roots of these z-transform
polynomials are quite important because ﬁlter properties such as the frequency responsecan be inferred directly from the root locations.
We also introduced the important concept of “domains of representation” for discrete-
time signals and systems. There are three domains: the n-domain or time domain, the
ˆω-domain or frequency domain, and the z-domain. With three different domains at our
disposal, even the most difﬁcult problems generally can be simpliﬁed by switching toone of the other domains.
Among the laboratory projects on the website we have already provided two on the
topic of FIR ﬁltering in Chapters 5 and 6. The ﬁrst one deals with FIR ﬁltering of sinusoidalwaveforms, convolution, and deconvolution; the second one explores the frequencyresponses of common ﬁlters such as the ﬁrst difference and the L-point averager. In
two other labs with projects, FIR ﬁlters are used in practical systems, such as a Touch-Tone decoding system, and an octave band ﬁlter bank for piano note detection. Each ofthese labs should be easier to understand and simpler to carry out with the newly acquiredbackground on z-transforms.LAB
Encoding and Decoding
Touch-Tone Signals
LAB
Octave Band Filtering
The Companion Website also contains some demonstrations of the relationship
between the z-plane and the frequency domain and time domain.
(a) A set of 3-domain movies that show how the frequency response and the impulse
response of an FIR ﬁlter change as a zero location is moved. Several different ﬁltersare demonstrated.DEMO
Three Domains—FIR
(b) A movie that animates the relationship between the z-plane and the unit circle
where the frequency response lies.DEMO
Zt oF r e q
9-11 PROBLEMS 407
(c) The MATLAB program PeZ that facilitates exploring the three domains. There is
also a lab based on PeZ which presents various useful ﬁlters (e.g., nulling ﬁlters)
in the three domains. Please refer to Section 10-12.4 for a concise description of
how to use the interactive controls in PeZ.LAB
PeZ 3 Domains
NOTE
Problems with Solutions9-11 Problems
The problems in this section address the major concepts of the z-transform presented
this chapter. In addition, there are many related homework problems available on thewebsite, which can be used for review and practice because most of them have detailedsolutions.
P-9.1 Use the superposition and time-delay properties of (9.5) and (9.6) to ﬁnd the
z-transforms of the following signals:
x
1[n]=6δ [n]
x2[n]=7δ [n−3]
x3[n]=2 δ[n]+9δ [n−5]
x4[n]=6δ [n]−7δ [n−3]−2 δ[n]−9δ [n−5]
P-9.2 Use the superposition and time-delay properties of (9.5) and (9.6) to determine
thez-transform Y(z) in terms of X(z) if
y1[n]=x [n]−x [n−1]and
y2[n]=x [n]+x [n−1]
and in the process obtain the two system functions.
P-9.3 Suppose that an LTI system has a system function
H(z)=1−3z−2+3z−4+4z−6+7z−7
(a) Determine the difference equation that relates the output y[n]of the system to the
inputx[n].
(b) Determine and plot the output sequence y[n]when the input is x[n]=δ [n].
P-9.4 An LTI system is described by the difference equation
y[n]=0 .2(x[n]−1.5x [n−1]+0 .5x[n−2])
(a) Determine the system function H(z) for this system.
(b) Plot the poles and zeros of H(z) in the z-plane.
(c) From H(z) obtain an expression for H(ejˆω), the frequency response of this system.
408 CHAPTER 9 z-TRANSFORMS
(d) Sketch the frequency response (magnitude and phase) as a function of frequency
for−π≤ˆω≤π.
(e) Determine the output if the input is
x[n]=7 −6 cos[(π/3)(n −1)]+5 cos[0 .75πn ].
P-9.5 Consider an LTI system whose system function is the product of ﬁve terms
H(z)=(1−z−1)(1−0.7e−jπ/ 2z−1)(1−0.7ejπ/2z−1)(1+ej2π/3z−1)(1+e−j2π/3z−1)
(a) Write the difference equation that gives the relation between the input x[n]and the
output y[n].
Hint: Multiply the factors of H(z) to obtain a polynomial.
(b) Plot the poles and zeros of H(z) in the complex z-plane.
(c) If the input is of the form x[n]=Aejφejnˆω, for what values of −π< ˆω≤πis it
true that y[n]=0?
P-9.6 The diagram in Fig. P-9.6(a) depicts a cascade connection of two LTI systems,
where the output of the ﬁrst system is the input to the second system and the overall
output is the output of the second system.
(a) Suppose that LTI 1 is a 3-point averager described by the difference equation
y1[n]=1
3(x[n]+x [n−1]+x [n−2])and LTI 2 is a 4-point averager described
by the system function H2(z)=1
4(1+z−1+z−2+z−3). Determine the system
function of the overall cascade system in Fig. P-9.6(a).
(b) For the cascade system in Fig. P-9.6(b), assume that LTI 1 is a 4-point averager
and LTI 2 is a 3-point averager. Determine the z-transforms, Y2(z)andW(z) when
x[n]=δ [n]−δ [n−1].
(c) Obtain a single difference equation that relates y[n]tox[n]in Fig. P-9.6(a). Is the
cascade of the two averagers the same as a 7-point averager?
(d) Plot the poles and zeros of H(z)=H1(z)H 2(z)in the complex z-plane.
x[n]
X(z)w[n]
W(z)y2[n]
Y2(z)(a)
(b)H1(z), h1[n]LTI 1x[n]
X(z)y[n]
Y(z)y1[n]
Y1(z) H1(z), h1[n]LTI 1
H2(z), h2[n]LTI 2
H2(z), h2[n]LTI 2
Figure P-9.6
9-11 PROBLEMS 409
P-9.7 Factor the following polynomial and plot its roots in the complex plane.
P(z)=1+z−1+z−2−z−3
In MATLAB, use the functions called roots andzplane .
P-9.8 An LTI system is described by the difference equation
y[n]=1
4{x[n]+x [n−1]+x [n−2]+x[n−3]}
=1
43/summationdisplay
k=0x[n−k]
(a) What is h[n], the impulse response of this system?
(b) Determine the system function H(z) for this system.
(c) Plot the poles and zeros of H(z) in the complex z-plane.
Hint: Remember the Lthroots of unity.
(d) From H(z) , obtain an expression for the frequency response H(ejˆω)of this system.
(e) Sketch the frequency response (magnitude and phase) as a function of frequency (or
plot it using freqz( ) in MATLAB, or freekz( ) in the SP-First Toolbox).
(f) Suppose that the input is
x[n]=5 +4 cos(0 .2πn)+3 cos(0 .5πn+π/4)
for−∞<n<∞. Obtain an expression for the output in the form
y[n]=A +Bcos(ˆω0n+φ0).
P-9.9 Suppose that a system H(z) is the cascade of three ﬁrst-difference and two 2-point
running sum ﬁlters.
(a) Determine the system function H(z) for the overall system.
(b) Plot the poles and zeros of H(z) in the z-plane.
(c) From H(z) , obtain an expression for the frequency response H(ejˆω)of the overall
cascade system.
(d) Use multiplication of z-transform polynomials to determine the impulse response
h[n] of the overall cascade system.
P-9.10 Suppose that an LTI system has system function equal to
H(z)=z−6−3z−7+2z−8−z−9
The input to the system is the sequence
x[n]=3δ [n]+2 δ[n−3]−7δ [n−6]+4 δ[n−9]
410 CHAPTER 9 z-TRANSFORMS
(a) Without actually computing the output, determine the values of N1andN2so that
the following is true:
y[n]=0 for n<N 1andn>N 2
(b) Using the above N1andN2, determine the (nonzero) values of y[N1],
y[(N 1+N2)/2]andy[N2].
(c) Use z-transforms and polynomial multiplication to ﬁnd the entire sequence y[n]=
x[n]∗h[n].
P-9.11 The intention of the following MATLAB program is to ﬁlter a sinusoid using
theconv function.
omega = pi/6;
nn = [ 0:29 ];xn = cos(omega*nn - pi/4);b b = [ 1001 ] ;yn = conv( bb, xn );
(a) Determine H(z) and the zeros of the FIR ﬁlter.
(b) Determine a formula for y[n], the signal contained in the vector yn. Ignore the ﬁrst
few points, so your formula must be correct only for n≥3. This formula should
give numerical values for the amplitude, phase and frequency of y[n].
(c) Give a value of omega such that the output is guaranteed to be zero, for n≥3.
P-9.12 A system is deﬁned by the system function
H(z)=(1−z−1)(1+z−1+z−2)(1+z−3)
(a) Write the time-domain description of this system in the form of a difference
equation.
(b) Write a formula for the frequency response of the system.
(c) Derive simple formulas for the magnitude response versus ˆωand the phase response
versus ˆω. These formulas must contain no complex terms and no square roots.
(d) This system can “null” certain input signals. For which input frequencies ˆω0is the
response to x[n]=cos( ˆω0n)equal to zero?
(e) When the input to the system is x[n]=cos(πn/4 ), determine the output signal
y[n]in the form:
Acos(ˆω0n+φ)
Give numerical values for the constants A,ˆω0, andφ.
9-11 PROBLEMS 411
P-9.13 An LTI system has zeros at ±1 and ±3, and four poles at z=0. The input to
this system is
x[n]=50 −60δ[n]+20 cos(0 .5πn+π/3)
for−∞<n<∞.I fh[0 ]=1, determine the output of the system y[n]corresponding
to the above input x[n]. Give an equation for y[n]that is valid for all n.
Note: Superposition makes this problem easier.
P-9.14 The input to the C-to-D converter in Fig. P-9.14 is
x(t)=3+cos(600 πt−π/6)−2 cos(1200 πt)
The system function for the LTI system is
H(z)=1−z−1+z−4−z−5
Iffs=2400 samples/s, determine an expression for y(t), the output of the D-to-C
converter.
x(t) y(t) x[n]
fs=y[n] Ideal
C-to-DIdeal
D-to-CLTI
System
H(z)
1
Tsfs=1
Ts Figure P-9.14
P-9.15 Refer to the system for discrete-time ﬁltering of a continuous-time signal shown
in Fig. P-9.14. Assume that the discrete-time LTI system has a system function H(z)
deﬁned as
H(z)=5/parenleftbig
1+b1z−1+z−2/parenrightbig
(a) For the case where b1=0.8, determine a formula for the frequency response of the
discrete-time ﬁlter. Express your answer in the following form by ﬁnding αandβ:
H(ejˆω)=e−jˆω/parenleftbig
α+βcos(ˆω)/parenrightbig
(b) For the case where b1=0.8, plot the magnitude response of the digital ﬁlter versus
frequency for −π< ˆω≤π.
412 CHAPTER 9 z-TRANSFORMS
(c) The overall frequency response of this system from x(t) toy(t) is able to null
out one continuous-time sinusoid (e.g., a system that removes a 60-Hz sinusoidal
interference from an EKG signal). The value of the ﬁlter coefﬁcient b1controls the
frequency location of the null. If the sampling rate is fs=8000 Hz, determine the
value of b1so that the overall frequency response has a null at 1600 Hz.
P-9.16 In the cascade system of Fig. P-9.6(a), it is known that the system function H(z)
of the overall system is the product of four terms
H(z)=(1−z−2)(1−0.8ejπ/4z−1)(1−0.8e−jπ/ 4z−1)(1+z−2)
(a) Determine the poles and zeros of H(z) and plot them in the complex z-plane.
(b) It is possible to determine two system functions H1(z)andH2(z)so that (1) the
overall cascade system has the given system function H(z) , and (2) the output of
the ﬁrst system is y1[n]=x [n]−x [n−4]. Find H1(z)andH2(z).
(c) Determine the difference equation that relates y[n]toy1[n]for your answer in (b).
P-9.17 A causal FIR ﬁlter is known to have four zeros: {0.8e±jπ/ 3,1.25e±jπ/ 3}, but the
zeros do not completely deﬁne the system.
(a) If the ﬁrst sample of the impulse response is h[0]=7, determine the impulse
response of the ﬁlter.
(b) If the DC value of the frequency response is H(ej0)=2, determine the system
function of the ﬁlter.
P-9.18 In Section 9-9, we showed that symmetric FIR ﬁlters have special properties.
In this problem, we consider the antisymmetric case where bk=−bM−k, for
k=0,1,...,M . Consider the speciﬁc example
H(z)=b0+b1z−1−b1z−3−b0z−4
where in this case of even order, b2=−b2=0.
(a) Show that, for this example, H(z)/vextendsingle/vextendsingle
z=1=0.
(b) Show that, for this example,
H(ejˆω)=[2b0sin(2ˆω)+2b1sin(ˆω)]ej(π/ 2−jˆω2)
(c) Show that, for this example,
H(1/z)=−z4H(z)
(d) Generalize these results for any M; the even-order and odd-order cases are slightly
different.
9-11 PROBLEMS 413
P-9.19 Refer to Fig. P-9.6(a) which depicts a cascade connection of two LTI systems.
(a) Suppose that System 1 and System 2 both have a “square pulse” impulse response
of the form
h1[n]=h 2[n]=δ [n]+δ [n−1]+δ [n−2]+δ[n−3]
Determine the system functions H1(z)andH2(z)for the two systems.
(b) Use z-transforms to determine the system function H(z) of the overall system.
(c) Determine the impulse response h[n] for the overall system.
(d) Obtain a single difference equation that relates y[n]tox[n]in the cascade system.
(e) Show that H1(z)=H2(z)can be expressed as
H1(z)=H2(z)=1−z−4
1−z−1
(f) For the overall system H(z) , plot the poles and zeros in the complex z-plane.
(g) Show that the frequency responses of the two systems are
H1(ejˆω)=H2(ejˆω)=sin(2ˆω)
sin(ˆω/2)e−j3ˆω/2
(h) From the frequency responses found in (g) obtain an expression for the frequency
response H(ejˆω)and sketch the magnitude of the frequency response of the overall
cascade system for −π< ˆω≤π.
CHAPTER
10
IIR Filters
This chapter introduces a new class of linear time-invariant (LTI) systems that have inﬁnite
duration impulse responses. These systems are often called IIR ﬁlters, where IIR is short
for inﬁnite-impulse-response. In contrast to the FIR case, the output of an IIR ﬁlter iscomputed using previously computed values of the output signal as well as values of theinput signal. Since the output is “fed back” to be combined with the input, these systemsare examples of the general class of feedback systems. From a computational point of
view, the output samples are determined from previously computed output values, so theterm recursive ﬁlter is also used.
Thez-transform system functions for IIR ﬁlters are rational functions that have poles
at the roots of the denominator polynomial and zeros at the roots of the numerator. Justas for the FIR case, we will show that many insights into the important properties of IIRﬁlters can be obtained directly from the locations of the poles and zeros in the z-plane.
We begin this chapter with the ﬁrst-order IIR system, which is the simplest case
because it involves feedback of only the previous output sample. We construct the impulseresponse of this system and show that its duration is inﬁnite. Then the frequency responseand the z-transform are developed for the ﬁrst-order ﬁlter. After the relationships among
the three domains of representation for this simple case have been established, we considersecond-order ﬁlters. These ﬁlters are particularly important because they can be used tomodel resonances such as would occur in a speech synthesizer, as well as many other
414
10-1 THE GENERAL IIR DIFFERENCE EQUATION 415
natural phenomena that exhibit vibratory behavior.The frequency response for the second-
order case can exhibit a narrowband character that leads to the concepts of bandwidth andcenter frequency, both of which can be controlled by appropriate choice of the feedbackcoefﬁcients of the ﬁlter. The analysis and insights developed for the ﬁrst- and second-ordercases form the basis for understanding and implementing higher-order systems.
10-1 The General IIR Difference Equation
FIR ﬁlters are extremely useful and have many nice properties, but the class of FIR ﬁltersis not the most general class of LTI systems. This is because the output y[n]is formed
solely from a ﬁnite set of samples of the input signal x[n]. The most general class of
discrete-time LTI systems that can be implemented with a ﬁnite amount of computationis obtained when the output is formed not only from the input, but also from previouslycomputed outputs.
DEMO
IIR Filtering
The deﬁning equation for this wider class of digital ﬁlters is the following general
difference equation:
Difference Equation with Feedback
y[n]=N/summationdisplay
/lscript=1a/lscripty[n−/lscript]+M/summationdisplay
k=0bkx[n−k](10.1)
The ﬁlter coefﬁcients in the two sets {bk}and{a/lscript}are constants. For reasons that
will become obvious in the following simple example, the coefﬁcients {a/lscript}are called
thefeedback coefﬁcients, and the {bk}are called the feed-forward coefﬁcients. In all,
N+M+1 coefﬁcients are needed to deﬁne the difference equation1(10.1).
Notice that if the feedback coefﬁcients {a/lscript}are all zero, the difference equation
(10.1) reduces to the difference equation of an FIR system. Indeed, we have asserted that(10.1) deﬁnes the most general class of LTI systems that can be implemented with ﬁnitecomputation, so FIR systems must be a special case. When discussing FIR systems wehave referred to Mas the order of the system because Mis the degree or order of the
polynomial system function, as well as the number of delay terms in the FIR differenceequation. For IIR systems, we have both MandNas measures of the number of delay
terms, and we see that the system function of an IIR system is the ratio of an M
th-order
polynomial to an Nth-order polynomial. Thus, there can be some ambiguity as to the
order of an IIR system. In general, we deﬁne N, the number of feedback terms, to be the
order of an IIR system.
EXAMPLE 10-1 IIR Block Diagram
As a ﬁrst step toward understanding the general form given in (10.1), consider the ﬁrst-
order case where M=N=1, that is,
1The difference equation of the IIR ﬁlter is also called a recursion formula for generating the output
sequence. Thus, IIR systems are often called recursive ﬁlters.
416 CHAPTER 10 IIR FILTERS
Feed-Forward Part Feedback Parta1 b1b0
z−1z−1x[n] y[n]
y[n − 1]v[n]
x[n-1] Figure 10-1 First-order IIR
system showing one feedback
coefﬁcient a1and two feed-forward
coefﬁcients b0andb1.
y[n]=a 1y[n−1]+b 0x[n]+b 1x[n−1]/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
v[n](10.2)
The block diagram representation of this difference equation, which is shown in Fig. 10-1,
is constructed by noting that the signal v[n]=b 0x[n]+b 1x[n−1]is computed by the left
half of the diagram, and we “close the loop” by computing a1y[n−1]from the delayed
output and adding it to v[n]to produce the output y[n]. In the diagram of Fig. 10-1, all
the paths in the feed-forward section go left-to-right, which is forward from the input to
the output; in the feedback section, the path through the delay goes right-to-left which is
from the output back to the input.
We begin by studying a simpliﬁed version of the system deﬁned by (10.2) and depicted
in Fig. 10-1. Our objective is to characterize the ﬁlter in each of the three domains: time
domain, frequency domain, and z-domain. Since the ﬁlter is deﬁned by a time-domain
difference equation (10.2), we ﬁrst study how the difference equation is used to computethe output from the input, and then we illustrate how feedback results in an impulseresponse of inﬁnite duration.
10-2 Time-Domain Response
To illustrate how the difference equation can be used to implement an IIR system, consider
a numerical example where the ﬁlter coefﬁcients in (10.2) are a1=0.8,b0=5, and
b1=0, so that
y[n]=0 .8y[n−1]+5x [n] (10.3a)
In addition, assume that the input signal is
x[n]=2 δ[n]−3δ [n−1]+2 δ[n−3] (10.3b)
so that the total duration of the input is four samples, as shown in Fig. 10-2.
Although it is not a requirement, it is logical that the output sequence values should be
computed in normal order (i.e., from left to right in a plot of the sequence). Furthermore,since the input is zero before n=0, it would be natural to assume that n=0 is the starting
10-2 TIME-DOMAIN RESPONSE 417
0 23456  n22
… …
1
31 2xŒ
Figure 10-2 Input signal to
recursive difference
equation.
index of the output. Thus, we proceed to compute the output from the difference equation
(10.3a) in the order y[0],y[1],y[2],... . For example, the value of x[0]is 2, so we can
evaluate (10.3a) at n=0 obtaining
y[0]=0.8y[0−1]+5x [0]=0.8y[−1]+5(2 ) (10.4)
Immediately we run into a problem: The value of y[n]atn=−1 is not known. We cannot
solve this problem by changing where we start computing the output y[n], because at
any point along the n-axis, we still need to know the output at the previous time n−1.
If we know the value y[n−1], however, we can use the difference equation (10.3a) to
compute the next value of the output signal at time n. Once the process is started, it can
be continued indeﬁnitely by iteration of the difference equation. The solution requires thefollowing two assumptions, which taken together are called the initial rest conditions:
Initial Rest Conditions
1. The input must be assumed to be zero prior to some starting time n0(i.e.,
x[n]=0 for n<n 0). We say that such inputs are suddenly applied .
2. The output is likewise assumed to be zero prior to the starting time of the
signal (i.e., y[n]=0 for n<n 0). We say that the system is initially at rest
if its output is zero prior to the application of a suddenly applied input.
These conditions are not particularly restrictive, especially in the case of a real-time
system, where a new output must be computed as each new sample of the input is taken.Real-time systems must, of course, be causal in the sense that the computation of the
present output sample must not involve future samples of the input or output. Furthermore,any practical device would have a time at which it ﬁrst begins to operate.All that is neededis for the memory containing the delayed output samples to be set initially to zero.
2
With the initial rest assumption, we let y[n]=0 for n<0, so now we can evaluate
y[0]as
y[0]=0.8y[−1]+5(2 )=0.8(0)+5(2)=10
2In the case of a digital ﬁlter applied to sampled data stored completely in computer memory, the causality
condition is not required, but, generally, the output is computed in the same order as the natural order of the
input samples. The difference equation could be recursed backwards through the sequence, but this would
require a different deﬁnition of initial conditions.
418 CHAPTER 10 IIR FILTERS
0 34567  n10
5.52
4.423.532.832.26……
1 2 3
75:612 Figure 10-3 Output signal from recursive
difference equation of (10.4) for the input of
Fig. 10-2. For n>3, the sequence is proportional to
(0.8)n, because the input signal ends at n=3.
Once we have started the recursion, the rest of the values follow easily, since the input
signal and previous outputs are known.
y[1]=0 .8y[0]+5x [1]=0 .8(10)+5(−3) =−7
y[2]=0.8y[1]+5x [2]=0.8(−7) +5(0)=−5.6
y[3]=0 .8y[2]+5x [3]=0 .8(−5.6) +5(2)=5.52
y[4]=0.8y[3]+5x [4]=0.8(5.52 )+5(0)=4.416
y[5]=0 .8y[4]+5x [5]=0 .8(4.416)+5(0)=3.5328
......
This output sequence is plotted in Fig. 10-3 up to n=7.
One key feature to notice in Fig. 10-3 is the structure of the output signal after
the input becomes zero. When x[n]=0 for n>3, the difference equation for n>3
becomes
y[n]=0 .8y[n−1]+
 :05x[n] forn>3
Then the ratio between successive terms is a constant, and the output signal decays
exponentially with a rate determined by a1=0.8. Therefore, we can write the following
expression
y[n]=y [3](0.8)n−3forn≥3
for the rest of the sequence y[n]once the value for y[3]is known.
10-2.1 Linearity and Time Invariance of IIR Filters
When applied to the general IIR difference equation of (10.1), the condition of initial
rest is sufﬁcient to guarantee that the system implemented by iterating the difference
equation is both linear and time-invariant. Although the feedback terms make theproof more complicated than the FIR case (see Section 5-6.3 on p. 197), we can
10-2 TIME-DOMAIN RESPONSE 419
show that, for suddenly applied inputs and initial rest conditions, the principle of
superposition holds because the difference equation involves only linear combinationsof the input and output samples. Furthermore, since the initial rest condition mustbe true just before the beginning of a suddenly applied input, time invariance alsoholds.
EXERCISE 10.1 Assume that the input to the difference equation (10.3a) is x1[n]=10 x[n−4], where
x[n]is given by (10.3b) and Fig. 10-2. Thus the input is 10 times bigger and delayed
by 4. Use iteration of (10.3a) to compute the corresponding output y1[n]forn=
0,1,...,11 assuming the initial rest condition. Compare your result to the output
plotted in Fig. 10-3, and verify that the system behaves as if it is both linear andtime-invariant, that is, the output should be 10 times bigger and delayed by 4.
10-2.2 Impulse Response of a First-Order IIR System
In Chapter 5, we showed that the response to a unit impulse sequence characterizes an LTIsystem completely. Recall that when x[n]=δ [n], the resulting output signal, denoted by
h[n], is by deﬁnition the impulse response. Since any other input signal can be written
as a superposition of weighted and delayed impulses, the corresponding output for thatsignal can be constructed from weighted and shifted versions of the impulse response,h[n]. In other words, since the recursive difference equation with initial rest conditionsis an LTI system, its output can always be represented via the weighting and shifting ofh[n] in the convolution sum
y[n]=
∞/summationdisplay
k=−∞x[k]h[n−k] (10.5)
Therefore, it is of interest to characterize the recursive difference equation by its impulse
response.
To illustrate the nature of the impulse response of an IIR system, consider the ﬁrst-
order recursive difference equation with b1=0,
y[n]=a 1y[n−1]+b 0x[n] (10.6)
By deﬁnition, the impulse response h[n] is the output when the input is x[n]=δ [n],s o
the difference equation
h[n]=a 1h[n−1]+b 0δ[n] (10.7)
must be satisﬁed by h[n] for all values of n. However, (10.7) is not an explicit formula
forh[n]. If we want an explicit general formula for the impulse response in terms of the
parameters a1andb0, we could use (10.7) to construct a table of the ﬁrst few values,
420 CHAPTER 10 IIR FILTERS
and then, in this simple case, write down the general formula by inspection. The following
table shows the sequences involved in the computation of h[n]:
n n<0 0 1 2 3 4···
δ[n] 0 1 0 0 0 0···
h[n−1] 0 0b0b0(a1)b0(a1)2b0(a1)3···
h[n] 0b0b0(a1)b0(a1)2b0(a1)3b0(a1)4···
From this table, we see that the explicit formula for the impulse response is
h[n]=/braceleftBigg
b0(a1)nforn≥0
0 for n<0(10.8a)
If we recall the deﬁnition of the unit step sequence from (5.17),
u[n]=/braceleftBigg
1 for n≥0
0 for n<0(10.8b)
(10.8a) can be expressed in a more compact form
h[n]=b 0(a1)nu[n] (10.8c)
where multiplication of b0(a1)nbyu[n] enforces the conditions in (10.8a) for n≥0 and
n<0.
EXAMPLE 10-2 Impulse Response
For the system in (10.3a) with a1=0.8 and b0=5, the impulse response is
h[n]=5(0 .8)nu[n]=/braceleftBigg
5(0.8)nforn≥0
0 for n<0(10.9)
This impulse response is nonzero for 0 ≤n<∞ (i.e., it has inﬁnite duration), which is
what we mean by the designation IIR.
A slightly more general problem is to determine the impulse response of the ﬁrst-
order system when a shifted version of the input signal is also included in the differenceequation, that is,
y[n]=a
1y[n−1]+ b0x[n]+b 1x[n−1]/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
input = superposition of two terms(10.10a)
Because this system is linear and time-invariant, and the input consists of two terms, itfollows that its impulse response can be written as a superposition of two terms as in
h[n]=b
0(a1)nu[n]+b 1(a1)n−1u[n−1] (10.10b)
When plotting h[n], this compact form should be rewritten as three cases
h[n]=⎧
⎪⎨
⎪⎩0 n<0
b0 n=0
(b0+b1a−1
1)(a1)nn≥1(10.10c)
10-2 TIME-DOMAIN RESPONSE 421
from which it is easy to see that the impulse response still decays exponentially (for
n≥1) at a rate dependent only on a1.
EXERCISE 10.2 Determine the impulse response h[n] of the following ﬁrst-order system:
y[n]=− 0.5y[n−1]−4 x[n]+5x [n−1].
Plot the resulting impulse response as a function of n.
10-2.3 Response to Finite-Length Inputs
For ﬁnite-length inputs, the output of an IIR (or FIR) system can be written as a weighted
sum of shifted copies of the impulse response. The ﬁnite-length signal can be written as
x[n]=N2/summationdisplay
k=N 1x[k]δ[n−k]
where x[n]=0 for n<N 1andn>N 2. Then the corresponding output is obtained via
a convolution sum (10.5), but with ﬁnite limits as in
y[n]=N2/summationdisplay
k=N 1x[k]h[n−k]
Each term x[k]h[n−k]is a shifted copy of the impulse response weighted by x[k].
EXAMPLE 10-3 IIR Response to General Input
Consider again the LTI system deﬁned by the difference equation (10.3a), whose impulseresponse was shown in Example 10-2 to be h[n]=5(0 .8)
nu[n]. For the input of (10.3b)
and Fig. 10-2,
x[n]=2 δ[n]−3δ [n−1]+2 δ[n−3]
it is easily seen that
y[n]=2 h[n]−3h[n −1]+2 h[n−3]
=10(0.8)nu[n]−15(0 .8)n−1u[n−1]+10 (0.8)n−3u[n−3]
To evaluate this expression for a speciﬁc time index, we need to take into account the
different regions over which h[n],h[n−1], and h[n−3]are nonzero. Once we do, we
obtain
422 CHAPTER 10 IIR FILTERS
y[n]=⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩0 n<0
10 n=0
10(0.8)−15=−7 n=1
10(0.8)
2−15(0.8)=−5.6 n=2
10(0.8)3−15(0.8)2+10=5.52 n=3
5.52(0.8)n−3n>3
A comparison to the output obtained by iterating the difference equation (see Fig. 10-3
on p. 418) shows that we have obtained the same values of the output sequence by
superposition of scaled and shifted impulse responses.
Example 10-3 illustrates two important points about IIR systems.
1. The initial rest condition guarantees that the output sequence does not begin until
the input sequence begins (or later).
2. Because of the feedback, the impulse response can be inﬁnite in extent, and the
output due to a ﬁnite-length input sequence, being a superposition of scaled andshifted impulse responses, is generally (but not always) inﬁnite in extent. This is incontrast to the FIR case, where a ﬁnite-length input always produces a ﬁnite-lengthoutput sequence.
10-2.4 Step Response of a First-Order Recursive System
When the input signal is inﬁnitely long, the computation of the output of an IIR system
using the difference equation is no different than for an FIR system; we simply continueto iterate the difference equation as long as samples of the output are desired. In the FIRcase, the difference equation and the convolution sum are the same thing. This is not truein the IIR case, and computing the output using convolution is practical only in caseswhere simple formulas exist for both the input and the impulse response. Thus, IIR ﬁltersare generally implemented by iterating the difference equation with feedback.
The computation of the response of a ﬁrst-order IIR system to a unit step input
provides a relatively simple illustration of the issues involved. We use the same systemas in (10.6)
y[n]=a
1y[n−1]+b 0x[n]
and assume that the input is the unit step sequence (10.8b) (i.e., x[n]=u[n]). For n≥0,
the input term b0u[n] is equal to b0, so iterating the difference equation is equivalent to
“multiplying the previous output by a1and adding b0” to produce the output sequence
one sample at a time. The ﬁrst few values are tabulated here.
10-2 TIME-DOMAIN RESPONSE 423
n x[n]y[n]
n<0 0 0
0 1b0
1 1a1(b0)+b0
2 1a1(a1(b0)+b0)+b0
3 1a1(a2
1+a1+1)(b 0)+b0
4 1(a4
1+a3
1+a2
1+a1+1)b 0
...1...
Work through the table to be sure that you understand the computation. From the tabulated
values, it can be seen that a general formula for the step response y[n]is
y[n]=b 0(1+a1+a2
1+···+ an
1)
=b0n/summationdisplay
k=0ak
1(10.11)
With a bit of manipulation, we can get a simple closed-form expression for the general
term in the sequence y[n]. For this we need to recall the formula
n/summationdisplay
k=0rk=⎧
⎪⎨
⎪⎩1−rn+1
1−rr/negationslash=1
n+1 r=1(10.12)
which is the formula for summing the ﬁrst n+1 terms of a geometric series. Armed with
this fact, the expression (10.11) for y[n](when a1/negationslash=1) can be manipulated into the form
y[n]=b 01−an+1
1
1−a1forn≥0, (10.13)
Three cases can be identiﬁed: |a1|>1,|a1|<1, and |a1|=1. Further investigation
of these cases reveals two types of behavior.
1. When |a1|>1, the term an+1
1in the numerator dominates as n→∞ , and the
values for y[n]grow without bound. This is called an unstable condition and is
usually a situation to avoid. We will say more about the issue of stability later in
Sections 10-5.3 and 10-10.
2. When |a1|<1, the term an+1
1decays to zero as n→∞ . In this case, the system
isstable. Therefore, we can determine a limiting value for step response y[n]as
n→∞
lim
n→∞y[n]= lim
n→∞b01−an+1
1
1−a1=b0
1−a1
424 CHAPTER 10 IIR FILTERS
0 2 4 6 8 10 12 14 1601
0 2 4 6 8 10 12 14 16010
221
2
2025
Time Index .n/
(b)(a)
yŒFigure 10-4 (a) Unit-step signal u[n]. (b) Step
response of the ﬁrst-order IIR ﬁlter in (10.3a)
where a1=0.8.
3. When |a1|=1, we might have an unbounded output, but not always. For example,
whena1=1, the step response (10.11) gives y[n]=(n +1)b 0forn≥0, and the
output y[n]grows as n→∞ . On the other hand, for a1=−1, the step response
alternates; it is y[n]=b 0forneven, but y[n]=0 for nodd.3
The MATLAB plot in Fig. 10-4 shows the unit-step signal and the step response for
the ﬁrst-order system
y[n]=0 .8y[n−1]+5x [n]
Sincea1=0.8<1, this is the second case above and the limiting value as n→∞ is 25,
which can be calculated from the ﬁlter coefﬁcients
lim
n→∞y[n]=b0
1−a1=5
1−0.8=25
It is also possible to compute the step response by the convolution sum
y[n]=x [n]∗h[n]=∞/summationdisplay
k=−∞x[k]h[n−k] (10.14)
Since the input and output are given by the formulas x[n]=u[n] andh[n]=b 0(a1)nu[n],
the result of the convolution is a compact formula that can be obtained with the
z-transform. We will revisit this convolution in Section 10-9.1 once we have the partial
fraction method for z-transforms.
3Even though the output may sometimes be bounded when a1=1, the system is still considered to be
unstable since not every bounded input produces a bounded output.
10-3 SYSTEM FUNCTION OF AN IIR FILTER 425
10-3 System Function of an IIR Filter
We saw in Chapter 9 for the FIR case that the system function H(z) is thez-transform
of the impulse response of the system. The system function for an FIR ﬁlter is always a
polynomial, and one of its key properties is the convolution property :
Convolution in the n-domain corresponds
to multiplication in the z-domain.
y[n]=x [n]∗h[n]z←→ Y(z)=X(z)H(z)
This is also true for the IIR case. However, when the difference equation has feedback,
it turns out that the system function H(z) is the ratio of two polynomials. Ratios of
polynomials are called rational functions. In this section, we study the system function
for the case of a ﬁrst-order IIR system, and show how the system function, impulseresponse, and difference equation are related.
10-3.1 The General First-Order Case
The general form of the ﬁrst-order difference equation with feedback (10.10a) is repeated
here:
y[n]=a 1y[n−1]+b 0x[n]+b 1x[n−1] (10.15a)
Since this equation must be satisﬁed for all values of n, we can use the delay property
(9.7) on p. 372 to determine the z-transform of both sides of the equation and obtain the
following equation relating the output z-transform Y(z) to the input X(z) :
Y(z)=a1z−1Y(z)+b0X(z)+b1z−1X(z) (10.15b)
Subtracting the term a1z−1Y(z) from both sides of the equation leads to the following
manipulations:
Y(z)−a1z−1Y(z)=b0X(z)+b1z−1X(z) (10.15c)
(1−a1z−1)Y(z) =(b0+b1z−1)X(z) (10.15d)
Since the system is an LTI system, it should be true that Y(z)=H(z)X(z) , where H(z)
is the system function of the LTI system. Solving (10.15d) for H(z)=Y(z)/X(z),w e
obtain
H(z)=Y(z)
X(z)=b0+b1z−1
1−a1z−1=B(z)
A(z)(10.15e)
Thus, we have shown that H(z) for the ﬁrst-order IIR system is a ratio of two polynomials.
The numerator polynomial B(z)=b0+b1z−1is deﬁned by the weighting coefﬁcients b0
andb1that multiply the input signal x[n]and its delayed versions; the denominator
426 CHAPTER 10 IIR FILTERS
polynomial A(z)=1−a1z−1is deﬁned by the feedback coefﬁcient a1. That this
correspondence is true in general should be clear from the analysis that leads to the
formula for H(z) . Indeed, the following is true for IIR systems of anyorder:
The coefﬁcients of the numerator polynomial of the system function of an IIR
system are the coefﬁcients of the feed-forward terms of the difference equation.
For the denominator polynomial, the constant term is one, and the remaining
coefﬁcients are the negatives of the feedback coefﬁcients.
In other words, there is one-to-one correspondence between H(z) and the difference
equation. If the system function contains higher degree polynomials
H(z)=M/summationdisplay
k=0bkz−k
1−N/summationdisplay
/lscript=1a/lscriptz−/lscript(10.16a)
then the corresponding difference equation is
y[n]=N/summationdisplay
/lscript=1a/lscripty[n−/lscript]+M/summationdisplay
k=0bkx[n−k] (10.16b)
In MATLAB, the filter function follows this same format. The statement
yy = filter(bb,aa,xx)
implements an IIR ﬁlter, where the vectors bbandaahold the ﬁlter coefﬁcients for the
numerator and denominator polynomials, respectively.
EXAMPLE 10-4 MATLAB for IIR Filter
The following feedback ﬁlter:
y[n]=0 .5y[n−1]−3x [n]+2 x[n−1]
would be implemented in MATLAB by
yy = filter([-3,2], [1,-0.5], xx)
wherexxandyyare the input and output signal vectors, respectively. Notice that the
aavector has 1 for its ﬁrst element and −a1for its second element, just like in the
denominator polynomial A(z) in (10.15e).
In general, we arrange the difference equation so that the coefﬁcient multiplying y[n]
is 1 (e.g., by rescaling coefﬁcients if necessary).
10-3 SYSTEM FUNCTION OF AN IIR FILTER 427
EXERCISE 10.3 Find the z-transform system function H(z) of the following feedback ﬁlter:
y[n]=0 .5y[n−1]−3x [n]+2 x[n−1]
EXERCISE 10.4 Determine H(z) for the system implemented by the following MATLAB statement:
yy = filter(5, [1,0.8], xx) .
10-3.2 H( z ) from the Impulse Response
In the analysis of Section 10-3.1, we assumed implicitly that the system function is
thez-transform of the impulse response of an IIR system. While this is true, we have
demonstrated only that it is true for the FIR case. In the ﬁrst-order IIR case, we need tobe able to take the z-transform of an inﬁnitely long sequence. As an example of such a
sequence, consider the impulse response h[n]=a
n
1u[n].
Applying the deﬁnition of the z-transform from (9.8) on p. 373, we would write
H(z)=∞/summationdisplay
n=0h[n]z−n=∞/summationdisplay
n=0an
1z−n=∞/summationdisplay
n=0(a1z−1)n(10.17a)
which deﬁnes H(z) as an inﬁnite power series where the ratio between successive terms
isa1z−1. In order for H(z) to be a legitimate function, the sum of all the terms in the
geometric series (10.17a) must be ﬁnite, which is true if |a1z−1|<1. When the sum is
ﬁnite, H(z) is given by the closed-form expression
H(z)=∞/summationdisplay
n=0an
1z−n=1
1−a1z−1(10.17b)
The condition for the inﬁnite sum to equal the closed-form expression can be expressed
as|a1|<|z|. The set of values of zin the complex plane satisfying this condition is
called the region of convergence (ROC). From the preceding analysis, we can state the
following z-transform pair:
an
1u[n]z←→1
1−a1z−1(10.18)
which is the building block for all higher-order IIR z-transforms.
428 CHAPTER 10 IIR FILTERS
EXAMPLE 10-5 H( z ) from Impulse Response
As an example of using (10.18), we can ﬁnd the difference equation that generates an
impulse response such as
h[n]=2 (0.9)nu[n]+5(0 .9)n−1u[n−1] (10.19)
Using the linearity and delay properties of the z-transform, as well as the z-transform
pair in (10.18), the system function for the system having the given impulse response is
H(z)=2/parenleftbigg1
1−0.9z−1/parenrightbigg
+5z−1/parenleftbigg1
1−0.9z−1/parenrightbigg
=2+5z−1
1−0.9z−1(10.20)
Note that this is identical in form to H(z) in (10.15e) which we obtained previously in
Section 10-3.1 by taking the z-transform of a difference equation (10.15a). In other words,
the one-to-one correspondence between the system function and difference equation
given in (10.16a) and (10.16b) can be used to write the following difference equation thatgenerates h[n] in (10.19):
y[n]=0 .9y[n−1]+2 x[n]+5x [n−1] (10.21)
In this section, focusing on the ﬁrst-order case, we have presented the three notable
concepts of the z-transform method which can be linked to one another: the difference
equation (10.15a), the system function (10.15e), and the impulse response h[n]=a
n
1u[n].
The coefﬁcients of the numerator and denominator polynomials of the system function
are the same as the coefﬁcients of the difference equation. The system function H(z) can
be obtained by taking the z-transform of the impulse response, and for the ﬁrst-order case,
it is possible by taking the inverse z-transform to go directly from the system function to
the impulse response of the system without the tedious process of iterating the differenceequation. These methods also work for higher-order systems but the process of inversez-transformation must be based on breaking the z-transform into a sum of ﬁrst-order
terms via the method of partial fractions, which is discussed in Section 10-9.2.
10-4 The System Function and Block Diagram Structures
The system function displays the coefﬁcients of the difference equation in a convenient
way that makes it easy to move back and forth between the difference equation and thesystem function. In this section, we exploit this correspondence to derive other differenceequations, which are alternative implementation equations of exactly the same systemfunction.
10-4.1 Direct Form I Structure
To illustrate the connection between the system function and the block diagram, recall
the block diagram of Fig. 10-1, which is repeated in Fig. 10-5 for convenience. Block
10-4 THE SYSTEM FUNCTION AND BLOCK DIAGRAM STRUCTURES 429
Feed-Forward Part
B(z)Feedback Part
1
A(z)a1 b1b0
z−1z−1x[n] y[n]
y[n − 1]v[n]
x[n-1]
Figure 10-5 First-order IIR system showing one
feedback coefﬁcient a1and two feed-forward coefﬁcients
b0andb1in a Direct Form I structure, which is the
cascade of a feed-forward ﬁlter and a feedback ﬁlter.
diagrams such as Fig. 10-5 are called implementation structures, or, more commonly,
simply structures, because they give a pictorial representation of the computations in the
difference equations that can be used to implement the system.
Recall that the product of two z-transform system functions corresponds to the cascade
of two systems. Therefore, the system function for the ﬁrst-order feedback ﬁlter can be
factored into an FIR piece and an IIR piece, as in
H(z)=b0+b1z−1
1−a1z−1=/parenleftbigg1
1−a1z−1/parenrightbigg/parenleftbig
b0+b1z−1/parenrightbig
=/parenleftbigg1
A(z)/parenrightbigg
B(z) (10.22)
The conclusion to be drawn from the algebraic factors in (10.22) is that a valid
implementation for H(z) is the pair of difference equations
v[n]=b 0x[n]+b 1x[n−1] (10.23a)
y[n]=a 1y[n−1]+v [n] (10.23b)
We see in Fig. 10-5 that the polynomial B(z) is the system function of the feed-forward
part (10.23a) of the block diagram, and that 1/A(z) is the system function of the feedback
part (10.23b) that completes the system. The system implemented in this way is calledtheDirect Form I implementation because it is possible to go directly from the system
function to the ﬁlter coefﬁcients of this block diagram (or the difference equations thatit represents) by using the coefﬁcients of the numerator and denominator polynomialsinH(z) .
10-4.2 Direct Form II Structure
We know that for an LTI cascade system, we can change the order of the systems without
changing the overall system response. This is obvious from the system function since
H(z)=/parenleftbigg1
A(z)/parenrightbigg
B(z)=B(z)/parenleftbigg1
A(z)/parenrightbigg
(10.24)
Using the correspondences that we have established, the right-hand side of (10.24)leads to the block diagram shown in Fig. 10-6 where the feedback block is ﬁrst in the
430 CHAPTER 10 IIR FILTERS
´1´1
Feed-Forward Part
B.´/Feedback Part
1
A.´/a1b0
b1xŒ wŒ
wŒn wŒnyŒ
(a)
´1
a1b0
b1xŒ wŒ
wŒnyŒ
(b)Figure 10-6 (a) First-order IIR system
showing one feedback coefﬁcient a1and two
feed-forward coefﬁcients b0andb1in a
cascade structure with the feedback part ﬁrst.
(b) First-order IIR system in Direct Form IIstructure. The two delays in (a) have beenmerged into one.
cascade. Note that we have deﬁned a different intermediate variable w[n]as the output
of the feedback part and input to the feed-forward part. Thus, the block diagram shows
that an equivalent implementation of the system deﬁned by (10.25) is
w[n]=a 1w[n−1]+x [n] (10.25a)
y[n]=b 0w[n]+b 1w[n−1] (10.25b)
The block diagram representation of Fig. 10-6(a) can be simpliﬁed according to
the following observation. Notice that the input to each of the unit delay operators isthe same signal w[n]. Thus, there is no need for two distinct delay operations; they
can be combined into a single delay, as in Fig. 10-6(b). Since delay operations areimplemented with memory in a computer, the implementation of Fig. 10-6(b) wouldrequire less memory than the implementation of Fig. 10-6(a). Note, however, thatboth block diagrams represent the same difference equations (10.25a) and (10.25b).
Again, because there is such a direct and simple correspondence between the ﬁlter
coefﬁcients in Fig. 10-6(b) and the polynomial coefﬁcients in H(z) , this implementation
is called the Direct Form II implementation of the ﬁrst-order IIR system with system
function
H(z)=b
0+b1z−1
1−a1z−1
10-4 THE SYSTEM FUNCTION AND BLOCK DIAGRAM STRUCTURES 431
x[n] y[n]
v[n]z−1
a1 b1b0
v[n-1]
Figure 10-7 Computational structure from (10.26) for a
general ﬁrst-order IIR ﬁlter as a Transposed Direct Form II
structure.
EXERCISE 10.5 Find the z-transform system function of the following set of cascaded difference
equations:
w[n]=− 0.5w[n−1]+7x [n]
y[n]=2 w[n]−4 w[n−1]
Draw the block diagrams of this system in both Direct Form I and Direct Form II.
10-4.3 The Transposed Form Structure
In the direct form structures of Figs. 10-5 and 10-6, the sequence of operations on the
signals is delay, multiply, and then add. If the z-transform of the general ﬁrst-order
difference equation (10.15a) is rewritten as
Y(z)=b0X(z)+z−1
/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
delay(b1X(z)+a1Y(z))/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
V( z ) is mult. & add(10.26)
a different computational structure is obtained, where the order of operations is multiply,add, and then delay, as shown in the block diagram of Fig. 10-7. The correspondingdifference equations are
y[n]=b
0x[n]+v [n−1] (10.27a)
v[n]=b1x[n]+a 1y[n] (10.27b)
Speciﬁcally, the signals x[n]andy[n]are multiplied by b1anda1, respectively, and then
added together. The result is the signal v[n]in (10.27b) and in Fig. 10-7. In (10.27a), the
previous version of v[n]is added to b0x[n]to get the output y[n]. The feedback structure
given in the block diagram of Fig. 10-7 is called the transposed form4of the Direct Form
II structure shown in Fig. 10-7.
4For directed graphs, transposing is a well-deﬁned mathematical operation that reverses all the branches.
For block diagrams, nodes with multiple inputs must become adders while nodes with multiple outputs
become branch points; also we must relabel the input as the output, and vice versa, to get the same systemfunction.
432 CHAPTER 10 IIR FILTERS
In order to verify the actual difference equation for the transposed form, we need to
write the equations that are deﬁned by the block diagram. There is an orderly procedure
for doing this if we follow two rules:
1. Assign variable names to the inputs of all delay elements. For example, v[n]is used
in Fig. 10-7, so the output of the delay is v[n−1].
2. Write equations at all of the summing nodes; there are two in this case. The result
is the two difference equations in (10.27a) and (10.27b).
The block diagram speciﬁes an actual computation, so (10.27a) and (10.27b) require
three multiplications and two additions at each time step n. Equation (10.27a) must be
done ﬁrst, because y[n]is needed in (10.27b). Owing to the feedback, it is impossible
to manipulate these n-domain equations into one of the cascade forms by eliminating
variables. However, we can recombine these two equations in the z-transform domain to
verify that we have the correct system function. First, we take the z-transform of each
difference equation obtaining
Y(z)=b0X(z)+z−1V( z ) (10.28a)
V( z )=b1X(z)+a1Y(z) (10.28b)
Now we eliminate V( z ) by substituting the second equation into the ﬁrst as follows:
Y(z)=b0X(z)+z−1(b1X(z)+a1Y(z)) (10.28c)
The result is identical to (10.26) which is one form of the z-transform of the general
ﬁrst-order difference equation (10.15a). Since they have the same system function andimplement the same difference equation, (10.27a) and (10.27b) are equivalent to theDirect Form I (10.23a) and (10.23b), and to the Direct Form II (10.25a) and (10.25b).
Why are these different implementations of the same system function of interest to
us? They all use the same number of multiplications and additions to compute exactlythe same output from a given input. However, this is true only when the arithmetic isperfect. On a computer with ﬁnite precision (e.g., 16-bit words), each calculation involvesround-off errors, which means that each implementation behaves slightly differently. Inpractice, the implementation of high-quality digital ﬁlters in hardware demands carefulengineering to control round-off errors and overﬂows.
10-5 Poles and Zeros
Since the z-transform system function for an IIR ﬁlter is a rational function, its numerator
and denominator polynomials have roots. These root locations in the complex z-plane
provide an efﬁcient way to characterize the system.Although we prefer to write the systemfunction in terms of z
−1to facilitate the correspondence with the difference equation,
when ﬁnding roots it might be better to rewrite the polynomials with powers of z. Thus
10-5 POLES AND ZEROS 433
we multiply the numerator and denominator of the ﬁrst-order system function (10.15e)
byzto obtain
H(z)=b0+b1z−1
1−a1z−1=b0z+b1
z−a1(10.29)
The roots are zeros of the numerator and denominator polynomials, so the numerator has
one root which is obtained by solving
b0z+b1=0=⇒ Root at z=−b1
b0
Likewise, the denominator root comes from solving
z−a1=0=⇒ Root at z=a1
If we consider H(z) as a function of zover the entire complex z-plane, the root of the
numerator is a zero of the numerator polynomial and thus a zero of the system function
H(z) , that is,
H(z)/vextendsingle/vextendsingle
z=−(b 1/b0)=0
Furthermore, the root of the denominator is a location in the z-plane where the
denominator polynomial is zero, and thus where the function H(z) blows up
H(z)/vextendsingle/vextendsingle
z=a1→∞
so this location (z=a1)is called a pole of the system function H(z) .
EXERCISE 10.6 Verify that the poles and zeros of the following z-transform system function are
located at z=−0.5 and z=−4/3:
H(z)=3+4z−1
1+0.5z−1
EXERCISE 10.7 For the system function H(z) of the following IIR system
y[n]=0 .5y[n−1]−x [n]+3x [n−1]
determine the locations of the poles and zeros.
434 CHAPTER 10 IIR FILTERS
10-5.1 Roots in MATLAB
Since MATLAB is used extensively in the labs and demonstrations that accompany this
text, it is worthwhile to point out how MATLAB handles polynomials and their roots. Notsurprisingly, the MATLAB format for polynomials is a vector of coefﬁcients. The orderingin the vector is compatible with the order of the coefﬁcients in the functions
filter and
freqz . For example, the system function in (10.29) would be represented in MATLAB
by the vectors b=[b0,b1] anda=[1,-a1] where the coefﬁcients are thought of in terms
of powers of z−1moving left-to-right in the vector as in the numerator and denominator
of the ﬁrst rational form in (10.29). This is the format assumed by the MATLAB function
filter(b,a,xx) for implementing the difference equation of the system, and also for
freqz(b,a,omega) which computes samples of its frequency response. When using
the MATLAB function roots , we can use exactly the same vectors banda, because the
roots function assumes that the ﬁrst coefﬁcient in a vector of polynomial coefﬁcients is
the coefﬁcient of the highest power of zas in the numerator and denominator polynomials
of the right-hand form of (10.29). Thus, the MATLAB statements zeros=roots(b) and
poles=roots(a) compute the zeros and poles for a system function represented as a
ratio of polynomials in the variable z.
The MATLAB function zplane , or the DSP-First functionzzplane , makes a pole-
zero plot in the z-plane. Several other MATLAB-based resources are available to illustrate
and demonstrate the pole-zero plot and its relation to the impulse response and frequencyresponse of an LTI system. These relationships are illustrated by the MATLAB
PeZGUI.DEMO
PeZ GUI
10-5.2 Poles or Zeros at z=0or∞
When the numerator and denominator polynomials have a different number of
coefﬁcients, we can have either zeros or poles at z=0, or at z=∞ . We saw this
behavior in Chapter 9, where causal FIR systems, whose system functions have onlya numerator polynomial, had a number of poles at z=0 equal to the number of zeros of
the polynomial. In the general IIR case, if we include all the poles and zeros at z=∞ ,
as well as all at z=0, then we can assert that the number of poles of H( z ) equals the
number of zeros. The following examples illustrate this.
EXAMPLE 10-6 Find Poles and Zeros
The system function of the IIR system
y[n]=0 .5y[n−1]+3x [n]
can be written down directly from the ﬁlter coefﬁcients as
H(z)=3
1−0.5z−1
10-5 POLES AND ZEROS 435
When we express H(z) in positive powers of z
H(z)=3z
z−0.5
we see that there is one pole at z=0.5 and one zero at z=0.
In the next example, the poles at z=∞ are found by taking the limit as z→∞ .
EXAMPLE 10-7 Zeros at z=∞
The system function of the IIR system
y[n]=0 .5y[n−1]+3x [n−2]
can be written down from the ﬁlter coefﬁcients as
H(z)=3z−2
1−0.5z−1=3
z(z−0.5)
The system has poles at z=0 andz=0.5, and taking the limit lim
z→∞H(z) , we get H(z)→
3/z2→0. Thus, it also has two zeros at z=∞ .
10-5.3 Output Response from Pole Location
The pole location of a ﬁrst-order ﬁlter determines the shape of the impulse response. In
Example 10-5 on p. 428, we showed that a ﬁrst-order system with a numerator (b0+b1z−1)
has a system function that can be written as the sum of two ﬁrst-order terms
H(z)=b0/parenleftbigg1
1−a1z−1/parenrightbigg
+b1z−1/parenleftbigg1
1−a1z−1/parenrightbigg
Thus the corresponding impulse response has two terms:
h[n]=b 0(a1)nu[n]+b 1(a1)n−1u[n−1] (10.30a)
=⎧
⎪⎨
⎪⎩0 forn<0
b0 forn=0
(b0+b1a−1
1)an
1 forn≥1(10.30b)
This IIR system has a single pole at z=a1and its impulse response (10.30b) is
proportional to an
1forn≥1. If we change the numerator polynomial to include a term
withz−n0, this statement is modiﬁed to be true for n≥n0, although the constant of
proportionality would be different. Similar behavior was observed in Example 10-3 for
a ﬁrst-order IIR ﬁlter with a ﬁnite-length input. For all of these cases, eventually theresponse of the IIR system behaves as (pole)
noncen≥n0, and this (pole)nbehavior
occurs when the input signal is zero.
436 CHAPTER 10 IIR FILTERS
Since the pole of the system function is at z=a1, we see that the location of the
pole can tell us whether the impulse response decays or grows as n→∞ .I f|a 1|<1,
the response dies out as n→∞ , but if |a1|≥1, the response does not die out. In fact,
if|a1|>1, the output signal grows exponentially without bound, which is undesirable
because a system that produces unbounded outputs is generally useless. A system that
exhibits this property is called an unstable system.As we will see in Section 10-6, systemsthat produce bounded outputs when the input is bounded are called stable systems.
For the ﬁrst-order case, stability can be determined by checking the pole location
with respect to the unit circle. If |a
1|<1, the pole of the system function is inside the
unit circle of the z-plane, and the system is stable. In Section 10-6, we will show that this
poles inside the unit-circle condition is true even for causal higher-order IIR systems.
Thus, stability of a system can be determined at a glance from a z-plane pole-zero plot
of the system function.
EXAMPLE 10-8 Stability from Pole Location
The causal system whose system function is
H(z)=1−2z−1
1−0.8z−1=z−2
z−0.8
has a zero at z=2 and a pole at z=0.8. Therefore, the system is stable. The location of
the zero, which is outside the unit circle, has nothing to do with stability of the system.
EXERCISE 10.8 Assume that the system function of an IIR ﬁlter is
H(z)=2+2z−1
1−1.25z−1
Plot the pole and zero in the z-plane, and determine whether or not the system is
stable.
10-6 Stability of IIR Systems
We have just seen that the pole location of a ﬁrst-order IIR system is sufﬁcient to determine
whether or not the system is stable. In this section, a general discussion of stability ispresented which applies to all causal LTI systems. The general condition for stability isshown to be the absolute summability of the impulse response, which, in the case of acausal IIR system with multiple poles, leads to the statement that all the poles must be
inside the unit circle.
Because IIR systems have impulse responses of inﬁnite duration due to the feedback
inherent in their difference equations, it is important that the response does not “blowup” as the difference equation is iterated indeﬁnitely. This requires that the system be
10-6 STABILITY OF IIR SYSTEMS 437
stable. One common deﬁnition of stability is that the output of a stable system can always
be bounded, |y[n]|<M y<∞, for any input that is bounded as |x[n]|<M x<∞. The
ﬁnite constants MxandMycan be different. This deﬁnition for stability is called bounded-
input, bounded-output or BIBO stability; it is a mathematically precise way of saying
that “the output doesn’t blow up.”
For an LTI system, the BIBO deﬁnition can be reduced to one simple test on
the impulse response of the LTI system, because the input and output are related byconvolution. In the case of a causal LTI system, the lower limit on the convolution sum
is zero, so
y[n]= ∞/summationdisplay
m=0h[m]x [n−m]
Therefore, a bound on the size of |y[n]|can be obtained as follows:
/vextendsingle/vextendsingley[n]/vextendsingle/vextendsingle=/vextendsingle/vextendsingle/vextendsingle/vextendsingle
∞/summationdisplay
m=0h[m]x [n−m]/vextendsingle/vextendsingle/vextendsingle/vextendsingle≤∞/summationdisplay
m=0|h[m]| |x [n−m]|/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
≤Mx(10.31a)
where we have used the fact that the magnitude of a sum of terms is less than or equal
to the sum of the magnitudes. We can strengthen the inequality (10.31a) by replacing|x[n−m]|for all mby its bound M
x.
|y[n]|<M x∞/summationdisplay
m=0|h[m]|
/bracehtipupleft/bracehtipdownright/bracehtipdownleft /bracehtipupright
=My?(10.31b)
Therefore, a sufﬁcient condition5for bounding |y[n]|withMy<∞, whenever |x[n]|<
Mx<∞,i s
Condition for Stability of a Causal LTI System
∞/summationdisplay
m=0/vextendsingle/vextendsingleh[m]/vextendsingle/vextendsingle<∞ (10.32)
When (10.32) is satisﬁed, we say that the impulse response is absolutely summable, and
this property guarantees that the LTI system is stable.
In the case of FIR systems, the impulse response has ﬁnite duration, and (10.32) is
satisﬁed as long as the values of h[n] are ﬁnite. Therefore, all practical FIR systems are
stable. However, in the case of IIR systems, the impulse response is an inﬁnitely long
sequence, so some IIR systems might not be stable.
5It can be shown that (10.32) is also a necessary condition—any system that violates (10.32) is an unstable
system.
438 CHAPTER 10 IIR FILTERS
EXAMPLE 10-9 Unstable System
Consider the ﬁrst-order difference equation where the lone feedback coefﬁcient is a1=1,
y[n]=y [n−1]+x [n] (10.33)
This system is often called an accumulator system because it simply adds the current
sample of the input, x[n], to the total of previous samples, y[n−1]. The impulse response
of this system can be shown by iteration (10.8c) to be the unit-step signal h[n]=u[n].
From the z-transform pair in (10.18) with a=1, it follows that the system function is
H(z)=∞/summationdisplay
n=0z−n=1
1−z−1(10.34)
where the associated ROC for the inﬁnite sum is 1 <|z|.
Applying the condition for stability in (10.32) to h[n]=u[n], we conclude that this
is NOT a stable system, because the absolutely summability test is
∞/summationdisplay
n=0|u[n]| =∞/summationdisplay
n=01→∞
Thus, it must be true that there is some bounded input that produces an unbounded output.
One such example is a shifted step input x[n]=u[n −1], for which the bound is Mx=1.
The result of Exercise 10.9 is that the output y[n]=nu[n −1]grows linearly with n,s o
we cannot ﬁnd a constant Mysuch that |y[n]|<M yfor all n.
EXERCISE 10.9 Show by iteration of (10.33) that the output due to the shifted step input, x[n]=
u[n−1],i s
y[n]=nu[n −1] (10.35)
Note that having this one example (10.35) of an unbounded output is enough to
prove that the accumulator system (10.33) is unstable. On the other hand, observing
that one or even many bounded inputs produce corresponding bounded outputs is not
sufﬁcient to prove that the accumulator system is stable. For this particular system,
there are many bounded inputs that do produce a bounded output. One such input is
the signal (−1)nu[n], which is bounded by one and produces as output the response,
y[n]=(0 .5+0.5(−1)n)u[n], which is bounded by one. Fortunately, (10.32) is a necessary
and sufﬁcient condition for stability of an LTI system with impulse response h[n], and
we do not have to test the system for all inputs. We only need to apply the absolutesummability test (10.32) once to the impulse response.
10-6.1 The Region of Convergence and Stability
In this section, we show that stability can be tested in the z-transform domain. Speciﬁcally,
the ROC of H(z) can be related to stability of the IIR system because both concepts are
10-6 STABILITY OF IIR SYSTEMS 439
based on absolute summability. The deﬁnition of the system function is the z-transform
of the impulse response, and, if the system is causal, the lower limit on the z-transform
sum is n=0, so
H(z)=∞/summationdisplay
n=0h[n]z−n(10.36)
The inﬁnite sum (10.36) might not be ﬁnite everywhere in the z-plane, but within the
ROC the sum converges to ﬁnite (complex) values. Finiteness of |H(z)|in (10.36) can
be guaranteed by requiring absolute convergence of the inﬁnite sum
/vextendsingle/vextendsingle/vextendsingle/vextendsingle/vextendsingle∞/summationdisplay
n=0h[n]z−n/vextendsingle/vextendsingle/vextendsingle/vextendsingle/vextendsingle
/bracehtipupleft
/bracehtipdownright/bracehtipdownleft /bracehtipupright
|H(z)|≤∞/summationdisplay
n=0/vextendsingle/vextendsingleh[n]/vextendsingle/vextendsingle/vextendsingle/vextendsinglez
−n/vextendsingle/vextendsingle<∞
/bracehtipupleft/bracehtipdownright/bracehtipdownleft /bracehtipupright
absolute convergence(10.37)
The inequality in (10.37) relies on the fact that the magnitude of a sum is less than the
sum of the magnitudes of the individual terms. Also, on the right-hand side, we have
used the fact that the magnitude of a product of two terms is equal to the product of themagnitudes. Thus, the ROC is deﬁned to be the set of zvalues where the sum (10.36)
converges absolutely.
The unit circle in the z-plane is the case where z=e
jˆω,o r|z|=1, and if we evaluate
the right-hand sum in (10.37) on the unit circle we get
∞/summationdisplay
n=0/vextendsingle/vextendsingleh[n]/vextendsingle/vextendsingle
 *1 /vextendsingle/vextendsinglee−jˆωn/vextendsingle/vextendsingle=∞/summationdisplay
n=0/vextendsingle/vextendsingleh[n]/vextendsingle/vextendsingle<∞ (10.38)
which implies that if the unit circle lies within the ROC, then the impulse response is
absolutely summable. Thus, we can state a z-domain condition for stability of an LTI
system based on the ROC:
An IIR system is stable, if and only if the region of convergence
for its system function H(z) includes the unit circle of the z-plane.
An easy case to remember is the ﬁrst-order case (10.18), h[n]=an
1u[n], where the
ROC is {z:|a1|<|z|}which is a subset of the z-plane that is the exterior of a disk of
radius |a1|. When |a1|<1, the exterior of the disk contains the unit circle. Note that it is
also true that the ﬁrst-order impulse response is absolutely summable when |a1|<1.
For a general causal LTI IIR system, we can prove that the ROC must be the exterior of
a disk. In the following sections, we will show that the impulse response of a higher-ordercausal LTI system is the weighted sum of exponential terms
h[n]= N/summationdisplay
k=1Akpn
ku[n] (10.39)
440 CHAPTER 10 IIR FILTERS
where the pkare the poles of the system and Akare constant weights.6To have a valid
system function H(z) , each of the exponential terms pn
ku[n] must have a z-transform that
is absolutely convergent, so the ROC for each term is the disk exterior {z:|pk|<|z|}.
Then the ROC of H(z) is the intersection of all the disk exteriors which is also a disk
exterior of the form {z:R<|z|}, where Ris the magnitude of the pole that is farthest
from the origin of the z-plane. For stability, we need to have the unit circle inside the
ROC which is true only if all the poles are inside the unit circle.
10-7 Frequency Response of an IIR Filter
In Chapter 6, we introduced the concept of frequency response H(ejˆω)as the complex
function that determines the amplitude and phase change experienced by a complex
exponential input to an LTI system. That is, if x[n]=ejˆωn, then the output is
y[n]=H(ejˆω)ejˆωn(10.40)
In Chapter 7, we generalized the frequency response to be the same as the DTFT of theimpulse response. In Section 9-5 on p. 384, we showed that the frequency response of anFIR system is related to the system function by
H(e
jˆω)=H(z)/vextendsingle/vextendsingle
z=ejˆω (10.41)
That is, the frequency response is identical to the system function evaluated on the unit
circle of the z-plane (z =ejˆω). The relation (10.41) also holds for IIR systems, but we need
one extra provision: The IIR system must be stable in order for the frequency response
to exist and to be given by (10.41). Recall that the condition for stability in (10.32) isthe absolute summability of the impulse response, which in turn guarantees that the unitcircle lies in the ROC, so the substitution in (10.41) is then legitimate. In Chapter 7, thecondition for existence of the DTFT (7.7) was also shown to be absolute summability ofthe sequence.
Recall that the system function for the general ﬁrst-order IIR system has the form
H(z)=b
0+b1z−1
1−a1z−1
where the ROC is |a1|<|z|. This system is stable if |a1|<1, so we can obtain a formula
for the frequency response by evaluating H(z) on the unit circle:
H(ejˆω)=H(z)/vextendsingle/vextendsingle
z=ejˆω=b0+b1e−jˆω
1−a1e−jˆω(10.42)
This rational function (10.42) contains terms with e−jˆω, which are periodic in ˆωwith
period 2 π,s oH(ejˆω)is periodic with a period equal to 2 π, as expected for the frequency
response of a discrete-time system.
6Equation (10.39) is true only when all the poles {pk}are distinct.
10-7 FREQUENCY RESPONSE OF AN IIR FILTER 441
The frequency response H(ejˆω)in (10.42) is a complex-valued function of frequency
ˆω, so we can reduce (10.42) to two separate real formulas for the magnitude and the phase
as functions of frequency. For the magnitude response, it is expedient to compute the
magnitude squared ﬁrst, and then take the positive square root. The magnitude squaredcan be formed by multiplying H(e
jˆω)in (10.42) by its complex conjugate (denoted by
H∗). For our ﬁrst-order example,
/vextendsingle/vextendsingleH(ejˆω)/vextendsingle/vextendsingle2=H(ejˆω)H∗(ejˆω)
=b0+b1e−jˆω
1−a1e−jˆω·b∗
0+b∗
1e+jˆω
1−a∗
1e+jˆω
=|b0|2+|b1|2+b0b∗
1e+jˆω+b∗
0b1e−jˆω
1+|a1|2−a∗
1e+jˆω−a1e−jˆω
=|b0|2+|b1|2+2/Rfractur{b∗
0b1e−jˆω}
1+|a1|2−2/Rfractur{a 1e−jˆω}
This derivation does not assume that the ﬁlter coefﬁcients are real. If the coefﬁcients are
real, we get the further simpliﬁcation
/vextendsingle/vextendsingleH(e jˆω)/vextendsingle/vextendsingle2=|b0|2+|b1|2+2b0b1cos(ˆω)
1+|a1|2−2a1cos(ˆω)(10.43)
This formula is not particularly informative, because it is difﬁcult to use it to visualize
the shape of |H(ejˆω)|. However, it could be used to write a program for evaluating and
plotting the frequency response. The phase response is even messier. Arctangents are
needed to compute the angles of the numerator and denominator, and then the two phasesmust be subtracted. When the ﬁlter coefﬁcients are real, the phase is
∠H(e
jˆω)=tan−1/parenleftbigg−b1sinˆω
b0+b1cosˆω/parenrightbigg
−tan−1/parenleftbigga1sinˆω
1−a1cosˆω/parenrightbigg
Again, the formula is so complicated that we cannot gain much insight from it directly.
In a later section, we will use the poles and zeros of the system function together with therelationship (10.41) to construct an approximate plot of the frequency response withoutrecourse to such complicated formulas.
10-7.1 Frequency Response Using MATLAB
Frequency responses can be computed and plotted easily by many signal processingsoftware packages. In MATLAB, for example, the function
freqz is provided for just
that purpose.7The frequency response is evaluated over an equally spaced grid in the ˆω
domain, and then its magnitude and phase can be plotted. In MATLAB, the functions
7The function freqz is part of MATLAB’s Signal Processing Toolbox. In case a substitute is needed,
there is a similar function called freekz that is part of the DSP-First Toolbox.
442 CHAPTER 10 IIR FILTERS
05101520
00
Frequency .O!/
(b)(a)ˇˇˇH.e jO!/ˇˇˇ
†H.e
jO!/2
2–4
–2–2–2–4
2Figure 10-8 Frequency response (magnitude
and phase) for a ﬁrst-order feedback ﬁlter. The
pole is at z=0.8, and the numerator has a zero
atz=−1.
abs andangle compute the magnitude and the angle of each element in a complex
vector.
EXAMPLE 10-10 Plot H( ejˆω)via MATLAB
Consider the example
y[n]=0 .8y[n−1]+2 x[n]+2 x[n−1]
In order to deﬁne the ﬁlter coefﬁcients in MATLAB, we put all the terms with y[n]on
one side of the equation, and the terms with x[n]on the other.
y[n]−0 .8y[n−1]=2 x[n]+2 x[n−1]
Then we read off the ﬁlter coefﬁcients and deﬁne the vectors aaandbbas
a a=[1 ,−0 . 8] b b=[2 ,2]
Thus, the vectors aaandbbare in the same form as for the filter function. The
following call to freqz generates a 401-point vector HHcontaining the values of
the frequency response at the vector of frequencies speciﬁed by the third argument,
2*pi*[-1:.005:1] :
HH = freqz( bb, aa, 2*pi*[-1:.005:1] );
Plots of the resulting magnitude and phase are shown in Fig. 10-8. An extended frequency
interval −2π≤ˆω≤+2πis shown so that the 2 π-periodicity of H(ejˆω)is evident.8
In this example, we can look for a connection between the poles and zeros and the
shape of the frequency response. From the coefﬁcients of the difference equation, weobtain the system function
8The labels on the graph were created using special plotting functions.
10-7 FREQUENCY RESPONSE OF AN IIR FILTER 443
<f´g=f´g
Figure 10-9 Pole-zero plot for a ﬁrst-order IIR
ﬁlter. The pole is at z=0.8, and the numerator has
a zero at z=−1.
H(z)=2+2z−1
1−0.8z−1
which, as shown in Fig. 10-9, has a pole at z=0.8 and a zero at z=−1.
The point z=−1 is the same as ˆω=πbecause z=−1=ejπ=ejˆω/vextendsingle/vextendsingle
ˆω=π. Thus,
H(ejˆω)has the value zero at ˆω=π, since H(z) is zero at z=−1. In a similar manner,
the pole at z=0.8 has an effect on the frequency response near ˆω=0. Since H(z) blows
up atz=0.8, the nearby points on the unit circle must have large values. The closest
point on the unit circle is at z=ej0=1. In this case, we can evaluate the frequency
response directly from the H(z) formula to get
H(ejˆω)/vextendsingle/vextendsingle/vextendsingle/vextendsingle
ˆω=0=H(z)/vextendsingle/vextendsingle/vextendsingle/vextendsingle
z=1=2+2z−1
1−0.8z−1/vextendsingle/vextendsingle/vextendsingle/vextendsingle
z=1=2+2(1)
1−0.8(1)=4
0.2=20
10-7.2 Three-Dimensional Plot of a System Function
The relationship between H(ejˆω)and the pole-zero locations of H(z) can be illustrated
by making a 3-D plot of H(z) over the complex z-plane. The frequency response H(ejˆω)
is obtained by selecting the values of H(z) only along the unit circle, because z=ejˆω
deﬁnes the unit circle for −π< ˆω≤π.
In this section, we use as an example the system function
H(z)=1
1−0.8z−1(10.44)
to illustrate the relationship between H(z) and the frequency response. Figures 10-10
and 10-11 are plots of the magnitude and phase of H(z) over the region |z|≤1.4o f
thez-plane. In the magnitude plot of Fig. 10-10, we observe that the pole (at z=0.8)
creates a large peak that makes all nearby values very large. At the precise location of
the pole, H(z)→∞ , but the 3-D surface has been truncated vertically, so the plot stays
within a ﬁnite vertical scale. The phase response in Fig. 10-11 also exhibits its most rapidtransition at ˆω=0 which is the point z=1 (the closest point on the unit circle to the
pole at z=0.8). DEMO
Zt oF r e q
444 CHAPTER 10 IIR FILTERS
Figure 10-10 Magnitude of H(z) in (10.44)
evaluated over a region of the z-plane including the
unit circle. The ﬁrst-order ﬁlter has a pole at z=0.8
and a zero at z=0 (shown with an orange dot).
Values of |H(z)|along the unit circle are shown as a
solid orange line where the frequency response
(magnitude) is evaluated. The view is from the ﬁrst
quadrant, so the point z=1 is in the foreground on
the left.
Figure 10-11 Phase of H(z) evaluated over a region
of the z-plane that includes the unit circle. Values of
the phase along the unit circle are shown as a solidorange line. View is from the ﬁrst quadrant, so the
pointz=1 lies to the left in the foreground.
The frequency response H(ejˆω)is obtained by selecting the values of the z-transform
along the unit circle in Figs. 10-10 and 10-11. Two-dimensional plots of H(ejˆω)versus
ˆωare given in Fig. 10-12. The shape of the frequency response can be explained in terms
of the pole location by recognizing that in Fig. 10-10 the pole at z=0.8 pushes H(ejˆω)
up in the region near ˆω=0, which is the same as the point z=1. The unit circle values
follow the ups and downs of H(z) asˆωgoes from −πto+π.DEMO
Three Domains - IIR
10-8 Three Domains
As depicted in Fig. 10-13, the coefﬁcients {ak,bk}play a key role in linking the n,ˆω, and
zdomain representations of signals and LTI systems.
10-8 THREE DOMAINS 445
10
(a)
(b)O!O!
†H.ejO!/jH.ejO!/j
22
–2–2
––
4
–400Figure 10-12 Frequency response for the
ﬁrst-order IIR ﬁlter (10.44). (a) Magnitude.
(b) Phase. The pole is at z=0.8 and the
numerator has a zero at z=0. These are
the values of H(z) along the unit circle in
thez-plane of Figs. 10-10 and 10-11.
To illustrate the use of the analysis tools that we have developed in these three
domains, we consider the general second-order IIR digital ﬁlter which is the following
feedback difference equation
y[n]=a 1y[n−1]+a 2y[n−2]+b 0x[n]+b 1x[n−1]+b 2x[n−2]
with constant ﬁlter coefﬁcients {a1,a2,b0,b1,b2}. This equation provides the algorithm
for computing the output signal from the input signal by iteration. For example, the outputis the impulse response h[n] when the input is x[n]=δ [n].
LAB
PeZ - The z,n, and ˆω
DomainsFollowing the procedures illustrated for the ﬁrst-order case, we can obtain the
z-transform system function directly from the ﬁlter coefﬁcients as
H(z)=b0+b1z−1+b2z−2
1−a1z−1−a2z−2
Input–Output
ComputationPoles and
Zeros
Passbands and
StopbandsH.ejO!/H.´/
fak;bkg
Figure 10-13 Relationship among the n-,z-,
andˆω-domains for an LTI system. The ﬁlter
coefﬁcients {ak,bk}play a central role in
connecting the three domains for an IIR
system. For an FIR system the set of ﬁltercoefﬁcients is only {b
k}.
446 CHAPTER 10 IIR FILTERS
and, when the poles are inside the unit circle, we can obtain the frequency response, or
the DTFT, by evaluating on the unit circle (z=ejˆω)
H(ejˆω)=b0+b1e−jˆω+b2e−j2ˆω
1−a1e−jˆω−a2e−j2ˆω
SinceH(z) is a ratio of polynomials, either the coefﬁcients {ak,bk}or the poles and zeros
ofH(z) comprise a small set of parameters that completely deﬁne the ﬁlter.
Finally, the shapes of the passbands and stopbands of the frequency response are
highly dependent on the pole and zero locations with respect to the unit circle, and thecharacter of the impulse response can be related to the pole locations. The
PeZ GUI
discussed in Section 10-12.4 is useful for visualizing these relationships among the threedomains for a system. To make this last point for the general case, we require one moretool—a technique for getting h[n] directly from H(z) . This process, which applies to
anyz-transform and its corresponding sequence, is called the inverse z-transform and is
presented in the next section.DEMO
PeZ GUI
10-9 The Inverse z-Transform and Applications
We have seen how the three domains are connected for the ﬁrst-order IIR system. Many of
the concepts that we have introduced for the ﬁrst-order system can be extended to higher-order systems in a straightforward manner. However, ﬁnding the impulse response fromthe system function is not an obvious extension of what we have done for the ﬁrst-ordercase. We need to develop a process for inverting the z-transform that can be applied
to systems with more than one pole. This process is called the inverse z-transform.
In this section, we show how to ﬁnd the inverse for a general rational z-transform and
then illustrate the process with some examples of determining the impulse responses ofsecond-order and higher-order systems.
10-9.1 Revisiting the Step Response of a First-Order System
In Section 10-2.4, we computed the step response of a ﬁrst-order system by iteration.Now we show how the inverse z-transform can be used to obtain the same result with
some simple algebra. Consider a system whose system function is
H(z)=b
0+b1z−1
1−a1z−1
Recall that the z-transform of the output of this system is Y(z)=H(z)X(z) , so the
z-transform approach to ﬁnding the output for a given input x[n]is as follows:
1. Determine the z-transform X(z) of the input signal x[n].
2. Multiply X(z) byH(z) to get Y(z) .
3. Determine the inverse z-transform of Y(z) to get the output y[n].
10-9 THE INVERSE z-TRANSFORM AND APPLICATIONS 447
This procedure will work and will avoid iteration of the difference equation (or
convolution) if we can determine X(z) and if we can perform the necessary inverse
transformation. Our focus in this section is on deriving a general procedure for step 3
which is actually two steps.
In the case of the step response, the input x[n]=u[n] is a special case of the
more general sequence anu[n] (i.e.,a=1). Therefore, from (10.18) it follows that the
z-transform of x[n]=u[n] is
X(z)=1
1−z−1
soY(z)=H(z)X(z) is
Y(z)=b0+b1z−1
(1−a1z−1)(1−z−1)(10.45a)
=b0+b1z−1
1−(1+a1)z−1+a1z−2(10.45b)
Now we need to go back to the n-domain by inverse z-transformation. A standard
approach is to use a table of z-transform pairs and simply look up the answer in the
table. Our previous discussions in Chapter 9 and earlier in this chapter have developedthe basis for a simple version of such a table. A summary of the z-transform knowledge
that we have developed so far is given in Table 10-1. Although more extensive tables canbe constructed, the results assembled in Table 10-1 are adequate for most purposes in thistext.
The problem of ﬁnding y[n]fromY(z) in (10.45a) is that none of the entries in
Table 10-1 are exactly the same as the given Y(z) , so we have to rearrange Y(z) into a
form where entries 1, 5, and 6 in the table can be used. The algebraic technique that we
Table 10-1 Summary of important z-transform properties and pairs.
Short Table of z-Transforms
x[n]z←→ X(z)
1.ax1[n]+bx 2[n]z←→ aX 1(z)+bX2(z)
2. x[n−n0]z←→ z−n0X(z)
3.y[n]=x [n]∗h[n]z←→ Y(z)=H(z)X(z)
4. δ[n]z←→ 1
5. δ[n−n0]z←→ z−n0
6. anu[n]z←→1
1−az−1
448 CHAPTER 10 IIR FILTERS
use is based on the partial fraction expansion9ofY(z) , which is a general method for
expressing a rational function Y(z) as asum of ﬁrst-order rational functions, that is,
Y(z)=H(z)X(z) (10.46a)
=b0+b1z−1
(1−a1z−1)(1−z−1)(10.46b)
=A
1−a1z−1+B
1−z−1(10.46c)
If the expression in (10.46c) is pulled together over a common denominator, it should
be possible to ﬁnd AandBso that the numerator of the resulting rational function is
equal to b0+b1z−1as in (10.46b). Equating the two numerators would lead to solving
the following two equations in the two unknowns AandB:
A+B=b0
−A−a1B=b1
However, there is a much quicker way that also generalizes to higher-orderz-transforms. A systematic procedure for ﬁnding AandBis based on the observation
that, for this example,
Y(z)( 1−a
1z−1)=A+B(1−a1z−1)
1−z−1
Then we can evaluate at the pole z=a1to isolate Aas follows:
Y(z)( 1−a1z−1)/vextendsingle/vextendsingle/vextendsingle/vextendsingle
z=a1=A+B(1−a1z−1)
1−z−1/vextendsingle/vextendsingle/vextendsingle/vextendsingle
z=a1=A
Since multiplying Y(z) by(1−a1z−1)cancels the same factor in the denominator, we
obtain
A=Y(z)( 1−a1z−1)/vextendsingle/vextendsingle
z=a1=b0+b1z−1
1−z−1/vextendsingle/vextendsingle/vextendsingle/vextendsingle
z=a1=b0+b1a−1
1
1−a−1
1
Similarly, we can ﬁnd Bby evaluating at the pole z=1a s
B=Y(z)( 1−z−1)/vextendsingle/vextendsingle
z=1=b0+b1z−1
1−a1z−1/vextendsingle/vextendsingle/vextendsingle/vextendsingle
z=1=b0+b1
1−a1
Now using the superposition property of the z-transform (entry 1 in Table 10-1), and the
exponential z-transform pair (entry 6 in Table 10-1), we can use (10.46c) to write down
the desired answer as y[n]=Aan
1u[n]+Bu [n]or
y[n]=/parenleftBigg
b0+b1a−1
1
1−a−1
1/parenrightBigg
an
1u[n]+/parenleftbiggb0+b1
1−a1/parenrightbigg
u[n]
9The partial fraction expansion is an algebraic decomposition often presented in calculus for evaluating
integrals that contain rational forms.
10-9 THE INVERSE z-TRANSFORM AND APPLICATIONS 449
The two terms above can be put over a common denominator to express y[n]as
y[n]=/parenleftbigg(b0+b1)−(b0a1+b1)an
1
1−a1/parenrightbigg
u[n] (10.47)
If we substitute the value b1=0 into (10.47), we get
y[n]=b 0/parenleftBigg
1−an+1
1
1−a1/parenrightBigg
u[n]
which is the same result obtained in Section 10-2.4 by iteration of the difference equation
(10.13).
With this two-pole example, we have established the framework for using the basic
properties of z-transforms together with the partial fraction expansion10and a few basic
z-transform pairs to perform inverse z-transformation for any rational z-transform. We
summarize this procedure in the following subsection.
10-9.2 A General Procedure for Inverse z-Transformation
LetX(z) be any rational z-transform of degree Nin the denominator and Min the
numerator. Assuming that M<N , we can ﬁnd the sequence x[n]that corresponds to
X(z) by the following procedure:
Procedure for
Inverse z-Transformation (M<N )
1. Factor the denominator polynomial of X(z)
and express the pole factors as (1−pkz−1)
fork=1,2,...,N .
2. Make a partial fraction expansion of X(z) to
obtain a sum of terms of the form
X(z)=N/summationdisplay
k=1Ak
1−pkz−1
where Ak=X(z)( 1−pkz−1)/vextendsingle/vextendsingle
z=pk
3. Write down the inverse transform as
x[n]=N/summationdisplay
k=1Ak(pk)nu[n]
10In MATLAB the function residuez computes the parameters of a partial fraction expansion assuming
pole factors of the form (1−pkz−1).
450 CHAPTER 10 IIR FILTERS
This procedure will always work for any rational z-transform if the poles, pk, are
distinct. Repeated poles complicate the process, but can be handled systematically. In
this text, we restrict our attention to the case of non-repeated poles. Next we illustrate theuse of this procedure with two examples that have real poles.
EXAMPLE 10-11 Inverse z-Transform
We want to determine the signal x[n]when its z-transform X(z) is
X(z)=1−2.1z−1
1−0.3z−1−0.4z−2=1−2.1z−1
(1+0.5z−1)(1−0.8z−1)
After factoring the denominator, the next step is to write X(z) in the additive form
X(z)=A
1+0.5z−1+B
1−0.8z−1
Invoking the procedure for partial fraction expansion, we obtain
A=X(z)( 1+0.5z−1)/vextendsingle/vextendsingle
z=−0.5=1−2.1z−1
1−0.8z−1/vextendsingle/vextendsingle/vextendsingle/vextendsingle
z=−0.5=1+4.2
1+1.6=2
andB=X(z)( 1−0.8z−1)/vextendsingle/vextendsingle
z=0.8=1−2.1z−1
1+0.5z−1/vextendsingle/vextendsingle/vextendsingle/vextendsingle
z=0.8=1−2.1/0.8
1+0.5/0.8=−1
Therefore,
X(z)=2
1+0.5z−1−1
1−0.8z−1(10.48)
and the two ﬁrst-order terms can be inverted using entry 6 in Table 10-1 to obtain
x[n]=2 (−0.5)nu[n]−(0 .8)nu[n]
Note that the poles at z=p1=−0.5 and z=p2=0.8 give rise to terms in x[n]of the
formpn
1u[n] andpn
2u[n].
In Example 10-11, the degree of the numerator is M=1, which is less than the
degree of the denominator, which is N=2. This is important because the partial fraction
expansion works only for rational functions such that M<N . The next example shows
why this is so, and illustrates a method of dealing with this complication.
EXAMPLE 10-12 Long Division and Partial Fractions
In this case, deﬁne Y(z) with a second-order numerator as
Y(z)=2−2.4z−1−0.4z−2
1−0.3z−1−0.4z−2=2−2.4z−1−0.4z−2
(1+0.5z−1)(1−0.8z−1)
10-10 STEADY-STATE RESPONSE AND STABILITY 451
Now we must add a constant term to the partial fraction expansion, otherwise, we cannot
generate the term −0.4z−2in the numerator when we combine the partial fractions over
a common denominator—that is, we must assume the following form for Y(z) :
Y(z)=A
1+0.5z−1+B
1−0.8z−1+C
How can we determine the constant C? One way is to perform long division of the
denominator polynomial into the numerator polynomial until we get a remainder whosedegree is lower than that of the denominator. In this case, the polynomial long divisionis carried out as follows:
1
−0.4z
−2−0.3z−1+1−0.4z−2−2.4z−1+2
−0.4z−2−0.3z−1+1
−2.1z−1+1/bracehtipupleft/bracehtipdownright/bracehtipdownleft /bracehtipupright
remainder
Thus, if we place the remainder (1−2.1z−1)over the denominator (in factored form),
we can write Y(z) as a rational part (fraction) plus the constant 1, that is,
Y(z)=1−2.1z−1
(1+0.5z−1)(1−0.8z−1)+1
The next step is to apply the partial fraction expansion technique to the rational part of
Y(z) . Since the rational part turns out to be identical to X(z) in (10.48) from Example
10-11, the results would be the same as in that example, so we can write Y(z) as
Y(z)=2
1+0.5z−1−1
1−0.8z−1+1
Therefore, from entries 4 and 6 in Table 10-1,
y[n]=2 (−0.5)nu[n]−(0 .8)nu[n]+δ [n]
Notice again that the time-domain sequence has terms of the form pn
ku[n]. The constant
term in the system function is the z-transform of an impulse, which is nonzero only at
n=0 (entry 4 in Table 10-1).
10-10 Steady-State Response and Stability
We can use the inverse z-transform method developed in Section 10-9 to demonstrate an
important point about stability, the frequency response, and the sinusoidal steady-stateresponse. To illustrate this point, consider the ﬁrst-order LTI system deﬁned by
y[n]=a
1y[n−1]+b 0x[n]
452 CHAPTER 10 IIR FILTERS
From our presentation of the three domains, we can write down the impulse response,
system function, and frequency response directly from the difference equation. Theimpulse response is
h[n]=b
0an
1u[n]
and the system function of this system is
H(z)=b0
1−a1z−1
We can then obtain the frequency response by evaluating H(z) on the unit circle
H(ejˆω)=H(z)/vextendsingle/vextendsingle
z=ejˆω=b0
1−a1e−jˆω
but this is true only if the system is stable (|a 1|<1). The objective of this section is to
reﬁne the concept of stability and demonstrate its impact on the response to a sinusoid
applied at n=0.
Recall from Section 10-7 and (10.40) and (10.42) that the output of this system for a
complex exponential input x[n]=ejˆω0nfor−∞<n<∞ is
y[n]=H(ejˆω0)ejˆω0n=/parenleftbiggb0
1−a1e−jˆω0/parenrightbigg
ejˆω0n(10.49)
forall time (i.e.,−∞<n<∞). What happens if the complex exponential input
sequence is suddenly applied instead of existing for all n? The z-transform tools that
we have developed make it easy to solve this problem. Indeed, the z-transform is ideally
suited for situations where the sequences are suddenly applied exponentials. For thesuddenly applied complex exponential sequence with frequency ˆω
0
x[n]=ejˆω0nu[n]
thez-transform is found from entry 6 of Table 10-1 to be
X(z)=1
1−ejˆω0z−1
and the z-transform of the output of the LTI system is
Y(z)=H(z)X(z) =/parenleftbiggb0
1−a1z−1/parenrightbigg/parenleftbigg1
1−ejˆω0z−1/parenrightbigg
=b0
(1−a1z−1)(1−ejˆω0z−1)
Using the technique of partial fraction expansion, we can show that
Y(z)=/parenleftbiggb0a1
a1−ejˆω0/parenrightbigg
1−a1z−1+/parenleftbiggb0
1−a1e−jˆω0/parenrightbigg
1−ejˆω0z−1
10-10 STEADY-STATE RESPONSE AND STABILITY 453
Therefore, the output due to the suddenly applied complex exponential sequence is
y[n]=/parenleftbiggb0a1
a1−ejˆω0/parenrightbigg
(a1)nu[n]
/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
transient component+/parenleftbiggb0
1−a1e−jˆω0/parenrightbigg
ejˆω0nu[n]
/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
steady-state component(10.50)
Equation (10.50) shows that the output consists of two terms that start at n=0. One
term is proportional to an exponential sequence an
1that is determined solely by the pole at
z=a1.I f|a 1|<1, this term dies out with increasing n, in which case it would be called
appropriately the transient component . The second term is a complex amplitude times
the input complex exponential signal, and the result is identical to (10.49). The complex
amplitude is H(ejˆω0), the frequency response of the system evaluated at ˆω0, the frequency
of the suddenly applied complex sinusoid. This complex exponential component is thesinusoidal steady-state component of the output, because this component remains after
the exponentially decaying transient component becomes negligibly small.
Now we see that the location of the pole of H(z) is crucial if we want the output to
reach the sinusoidal steady state, and the transient to die out. When |a
1|<1, the system
is stable and the pole is inside the unit circle. Under this condition, the exponential an
1
dies out and we ﬁnd that the limiting value for large nis
y[n]→/parenleftbiggb0
1−a1e−jˆω0/parenrightbigg
ejˆω0n=H(ejˆω0)ejˆω0n
Otherwise, if |a1|≥1, the term in (10.50) that is proportional to an
1grows with increasing
nand soon dominates the output. The following example gives a speciﬁc numerical
illustration.
EXAMPLE 10-13 Transient and Steady-State Responses
Ifb0=5,a1=−0.8, and ˆω0=2π/10, the transient component in (10.50) is
yt[n]=/parenleftbigg−4
−0.8−ej0.2π/parenrightbigg
(−0.8)nu[n]
=2.3351e−j0.3502(−0.8)nu[n]
=2.1933(−0 .8)nu[n]−j 0.8012(−0.8)nu[n]
Similarly, the steady-state component in (10.50) is
yss[n]=/parenleftbigg5
1+0.8e−j0.2π/parenrightbigg
ej0.2πnu[n]
=2.9188ej0.2781ej0.2πnu[n]
=2.9188 cos (0.2πn+0.2781)u[n]+j 2.9188 sin (0.2πn+0.2781)u[n]
Figure 10-14 shows the real parts of the total output (a), the transient component (b), andthe steady-state component (c). The signals all start at n=0 which is when the complex
454 CHAPTER 10 IIR FILTERS
exponential is applied at the input. Note how the transient component (−0.8)noscillates,
but dies away, which explains why the steady-state component eventually equals the total
output. In Fig. 10-14, y[n]in (a) and yss[n]in (c) look identical for n>15.
On the other hand, if the pole were at z=1.1, the system would be unstable and the
output would “blow up” as shown in Fig. 10-15. In this case, the output contains a term(1.1)
nthat eventually dominates and grows without bound.
The result of Example 10-13 can be generalized by observing that the only difference
between this example and a system with a higher-order system function is that the total
0 5 10 1505
0 5 10 1505
0 5 10 1505
555
202020
(a)
(b)
Time Index .n/
(c)<fyŒg <fytŒng <fy ssŒngFigure 10-14 Illustration of transient and
steady-state responses of a stable IIR system:
(a) Total output /Rfractur{y[n]}, (b) decaying transient
component /Rfractur{y t[n]}, and (c) steady-state
response /Rfractur{y ss[n]}.
0 5 10 1501030
20
20
Time Index .n/<fyŒg
Figure 10-15 Illustration of an unstable IIR
system where the output is dominated by thegrowing exponential component. Pole is atz=1.1.
10-11 SECOND-ORDER FILTERS 455
output would include Nexponential terms for the Npoles of the system function as well
as the term H(ejˆω0)ejˆω0nu[n]. Speciﬁcally, it can be shown that for a suddenly applied
exponential input sequence x[n]=ejˆω0nu[n], the output of an Nth-order IIR (N>M )
system is always of the form
y[n]=N/summationdisplay
k=1Ak(pk)nu[n]
/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
transient response+H(ejˆω0)ejˆω0nu[n]/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
steady-state response
where pk,k=1,2,...,N are the distinct poles of the system function. Therefore, the
sinusoidal steady state exists and will dominate in the total response as n→∞ if the
poles of the system function all lie strictly inside the unit circle. This makes the concept of
frequency response useful in a practical setting where the system is stable and all signalsmust have a starting point at some ﬁnite time.
10-11 Second-Order Filters
We now focus our attention on ﬁlters with two feedback and three feed-forward
coefﬁcients. The general difference equation (10.1) becomes the second-order differenceequation
y[n]=a
1y[n−1]+a 2y[n−2]+b 0x[n]+b 1x[n−1]+b 2x[n−2] (10.51)
As in Section 10-8, we can characterize the second-order ﬁlter (10.51) in each of the three
domains: time domain, frequency domain, and z-domain. We start with the z-transform
domain because by now we have demonstrated that the poles and zeros of the systemfunction give a great deal of insight into most aspects of both the time and frequencyresponses.
DEMO
PeZ GUI
10-11.1 z-Transform of Second-Order Filters
Using the approach followed in Section 10-3.1 for the ﬁrst-order case, we can take thez-transform of the second-order difference equation (10.51) by replacing each delay with
z
−1(second entry in Table 10-1). Then we can solve for H(z) by moving all the Y(z) terms
to the left-hand side and then dividing to ﬁnd H(z) asY(z)/X(z). For the second-order
ﬁlter we obtain
H(z)=Y(z)
X(z)=b0+b1z−1+b2z−2
1−a1z−1−a2z−2(10.52)
Thus, the system function H(z) for an IIR ﬁlter is a ratio of two second-degree
polynomials, where the numerator polynomial depends on the feed-forward coefﬁcients{b
k}and the denominator depends on the feedback coefﬁcients {a/lscript}. In order to work
problems such as Exercise 10.10, it is only necessary to read the ﬁlter coefﬁcients fromthe difference equation and then substitute them directly into the z-transform expression
(10.52) for H(z) . Conversely, given the system function H(z) , it is a simple matter to
write down the difference equation.
456 CHAPTER 10 IIR FILTERS
EXERCISE 10.10 Find the system function H(z) of the IIR ﬁlter deﬁned by the difference equation:
y[n]=0 .5y[n−1]+0 .3y[n−2]−x[n]+3x [n−1]−2 x[n−2]
EXERCISE 10.11 For the system function
H(z)=1+2z−1+z−2
1−0.8z−1+0.64z−2
write down the difference equation that relates the input x[n]to the output y[n].
10-11.2 Structures for Second-Order IIR Systems
The difference equation (10.51) with two feedback terms can be interpreted as an
algorithm for computing the output sequence from the input. As we showed in
Section 10-4, other computational orderings are possible, and the z-transform has the
power to derive alternative structures through polynomial manipulations. Two alternativecomputational orderings that implement the system deﬁned by H(z) in (10.52) are given
in Figs. 10-16 and 10-17.
In order to verify that the block diagram in Fig. 10-16 has the correct system function,
we need to write the equations of the structure at the adders, and then eliminate the internalvariable(s). For the case of the Direct Form II in Fig. 10-16, the equations at the outputof the summing nodes on the output and input sides are
y[n]=b
0w[n]+b 1w[n−1]+b 2w[n−2]
w[n]=x [n]+a 1w[n−1]+a 2w[n−2](10.53)
b2b1
a2a1b0
x[n] y[n] w[n]
w[n −1]
w[n −2]z−1
z−1Figure 10-16 Direct Form II (DF-II) computational
structure for the second-order recursive ﬁlter. The signal
w[n]is delayed twice, then multiplied by ﬁlter coefﬁcients
and followed by adding to form the output signal y[n]and
to update w[n].
10-11 SECOND-ORDER FILTERS 457
It is impossible to eliminate w[n]in these two time-domain equations, but easy if we work
with algebra in the z-transform domain. The corresponding z-transform equations are
Y(z)=b0W(z)+b1z−1W(z)+b2z−2W(z)
W(z)=X(z)+a1z−1W(z)+a2z−2W(z)
which can be rearranged into the form
Y(z)=(b0+b1z−1+b2z−2)W(z)
X(z)=(1−a1z−1−a2z−2)W(z)
Since the system function H(z) is the ratio of Y(z) toX(z) , we divide the two equations
to obtain
H(z)=Y(z)
X(z)=b0+b1z−1+b2z−2
1−a1z−1−a2z−2
Thus we have proved that the Direct Form II structure in Fig. 10-16 which implements
the pair of difference equations (10.53) is identical to the system deﬁned by the single
difference equation (10.51).
The Transposed Direct Form II in Fig. 10-17 can be worked out similarly. The
difference equations represented by the block diagram are
y[n]=b 0x[n]+v 1[n−1]
v1[n]=b1x[n]+a 1y[n]+v 2[n−1]
v2[n]=b2x[n]+a 2y[n](10.54)
Taking the z-transform of each of the three equations gives
Y(z)=b0X(z)+z−1V1(z)
V1(z)=b1X(z)+a1Y(z)+z−1V2(z)
V2(z)=b2X(z)+a2Y(z)(10.55)
b0
b1 a1
a2 b2v1[n]
v2[n]x[n] y[n]
z−1
z−1Figure 10-17 Transposed Direct Form II (TDF-II)
computational structure for the second-order recursive
ﬁlter. The signals x[n]andy[n]are ﬁrst multiplied by
ﬁlter coefﬁcients, followed by adding, delaying, andadding once more to form the output.
458 CHAPTER 10 IIR FILTERS
Using these equations, we can eliminate V1(z)andV2(z)as follows:
Y(z)=b0X(z)+z−1(b1X(z)+a1Y(z)+z−1V2(z))
Y(z)=b0X(z)+z−1(b1X(z)+a1Y(z)+z−1(b2X(z)+a2Y(z)))
Moving all the X(z) terms to the right-hand side and the Y(z) terms to the left-hand side
gives
(1−a1z−1−a2z−2)Y(z) =(b0+b1z−1+b2z−2)X(z)
After division, we obtain the same result again
H(z)=Y(z)
X(z)=b0+b1z−1+b2z−2
1−a1z−1−a2z−2
Thus we have shown that the Transposed Direct Form II is equivalent to the system
function for the basic Direct Form I difference equation in (10.51). Both cases illustrate
the power of the z-transform approach in manipulating the difference equation sets that
correspond to different structures.
In theory, the system with system function given by (10.52) can be implemented by
iterating any of the difference equation sets (10.51), (10.53), or (10.54). For example,the MATLAB function
filter uses the Transposed Direct Form II structure. However,
as mentioned before, the reason for having different block diagram structures is that theorder of calculation deﬁned by the difference equations in (10.51), (10.53), or (10.54)is different. In a hardware implementation, the different structures behave differently,especially when using ﬁxed-point arithmetic where rounding error is fed back into thestructure. With double-precision ﬂoating-point arithmetic as in MATLAB, there is littledifference.
10-11.3 Poles and Zeros
Finding the poles and zeros of H(z) is less confusing if we rewrite the polynomials as
functions of zrather than z−1. Thus, the general second-order rational z-transform would
become
H(z)=b0+b1z−1+b2z−2
1−a1z−1−a2z−2=b0z2+b1z+b2
z2−a1z−a2
after multiplying the numerator and denominator by z2. Recall from algebra the following
important property of polynomials:
Property of Real Polynomials
A polynomial of degree NhasNroots.
If all the coefﬁcients of the polynomial are real, the roots either must be real or
must occur in complex conjugate pairs.
10-11 SECOND-ORDER FILTERS 459
Therefore, in the second-order case, the numerator and denominator polynomials each
have two roots, and there are two possibilities: Either the roots are complex conjugates of
each other, or they are both real. We will now concentrate on the roots of the denominator,but exactly the same results hold for the numerator. From the quadratic formula, we gettwo poles at
a
1+/radicalBig
a2
1+4a2
2anda1−/radicalBig
a2
1+4a2
2
When a2
1+4a2≥0, both poles are real, and when a2
1+4a2=0, they are real and equal.
However, when a2
1+4a2<0, the square root produces an imaginary result, and we have
complex conjugate poles with values
p1=1
2a1+j1
2/radicalBig
−/parenleftbig
a2
1+4a2/parenrightbig
and p2=1
2a1−j1
2/radicalBig
−/parenleftbig
a2
1+4a2/parenrightbig
(10.56)
The complex poles can be expressed in polar form as p1=rejθandp2=re−jθ, where
ris the radius and ±θthe angles. A simple way to express the relationship between
complex roots and ﬁlter coefﬁcients is to expand the complex conjugate factors
(1−rejθz−1)(1−re−jθz−1)=1−2rcos(θ)z−1+r2z−2(10.57)
To summarize we write
Complex Poles
a2=−r2a1=2rcosθ
r=√−a2θ=cos−1/parenleftbigga1
2√−a2/parenrightbigg(10.58)
EXAMPLE 10-14 Complex Poles
The following H(z) has two poles and two zeros.
H(z)=2+2z−1
1−z−1+z−2=2z2+z
z2−z+1
The system function can be written in factored form as either of the two forms
H(z)=2z(z+1)
(z−ejπ/3)(z−e−jπ/ 3)(10.59a)
=2(1+z−1)
(1−ejπ/3z−1)(1−e−jπ/ 3z−1)(10.59b)
460 CHAPTER 10 IIR FILTERS
<f´g=f´g
Figure 10-18 Pole-zero plot for system with
H(z)=2+2z−1
1−z−1+z−2. The two poles are on the unit
circle at angles θ=±π/3. There is one zero at z=−1
and another zero at z=0.
In the form (10.59a), it is easy to see that the poles {p1,p2}and zeros {z1,z2}are
p1=1
2+j1
2√
3=ejπ/3
p2=1
2−j1
2√
3=e−jπ/ 3
z1=0
z2=−1
The poles and zeros are plotted in Fig. 10-18.
10-11.4 Impulse Response of a Second-Order IIR System
We have derived the general z-transform system function for the second-order ﬁlter
H(z)=B(z)
A(z)=b0+b1z−1+b2z−2
1−a1z−1−a2z−2(10.60)
and we have seen that the denominator polynomial A(z) has two roots that deﬁne the
poles of the second-order ﬁlter. Expressing H(z) in terms of the poles gives
H(z)=b0+b1z−1+b2z−2
(1−p1z−1)(1−p2z−1)(10.61)
Using the partial fraction expansion technique developed in Section 10-9, we can express
the system function (10.60) as
H(z)=(−b 2/a2)+A1
1−p1z−1+A2
1−p2z−1
where A1andA2can be evaluated by Ak=H(z)( 1−pkz−1)/vextendsingle/vextendsingle
z=pk(as long as p1/negationslash=p2).
Therefore, the impulse response has the form
h[n]=(−b 2/a2)δ[n]+A 1(p1)nu[n]+A 2(p2)nu[n] (10.62)
In (10.62), the poles may both be real or they may be a pair of complex conjugates. In
the following examples, we examine these two cases separately.
10-11 SECOND-ORDER FILTERS 461
10-11.4.1 Distinct Real Poles
Ifp1andp2are real, the impulse response is composed of two real exponentials of the
formpn
1u[n] andpn
2u[n]. This case is illustrated by the following example.
EXAMPLE 10-15 Second-Order System Real Poles
Assume that the system function is
H(z)=1
1−5
6z−1+1
6z−2=1
(1−1
2z−1)(1−1
3z−1)(10.63)
After factoring the denominator, we see that the poles are at z=1
2andz=1
3. In addition,
there are two zeros at z=0. The poles and zeros of H(z) are plotted in Fig. 10-19. We
can extract the ﬁlter coefﬁcients directly from the denominator of H(z) and write the
following difference equation
y[n]=5
6y[n−1]−1
6y[n−2]+x[n] (10.64)
which must be satisﬁed for any input and its corresponding output. Speciﬁcally, the
impulse response would satisfy the difference equation
h[n]=5
6h[n−1]−1
6h[n−2]+δ[n] (10.65)
which can be iterated to compute h[n] if we know the values of h[−1] andh[−2].
Speciﬁcally, to start the iteration, we need to know the values of the impulseresponse sequence just prior to n=0 where the impulse ﬁrst becomes nonzero. These
values are supplied by the initial rest condition, which means that h[−1]=0 and
(2)
<f´g=f´g
Figure 10-19 Pole-zero plot for system of Example 10-15. The
poles are at z=1
2andz=1
3; there are two zeros at z=0.
462 CHAPTER 10 IIR FILTERS
h[−2]=0. The following table shows the computation of a few values of the impulse
response:
n n<0 012 3 4···
x[n] 0 100 0 0···
h[n−2] 0 00 15
619
36···
h[n−1] 0 015
619
3665
216···
h[n] 0 15
619
3665
216211
1296···
In contrast to the simpler ﬁrst-order case, iteration is not too helpful because it is very
difﬁcult to guess the general nthterm for the impulse response sequence. Fortunately, we
can rely on the inverse z-transform technique to give us the general formula. Applying
the partial fraction expansion to (10.63), we obtain
H(z)=3
1−1
2z−1−2
1−1
3z−1
Then the inverse z-transform yields h[n]=3(1
2)nu[n]−2 (1
3)nu[n]. Since both poles are
inside the unit circle, the impulse response dies out for nlarge (i.e., the system is stable).
EXERCISE 10.12 Find the impulse response of the following second-order system:
y[n]=1
4y[n−2]+5x [n]−4 x[n−1]
Hint: It will help to show that the poles are at z=±1
2.
10-11.5 Complex Poles
In this section, we study the case where the coefﬁcients a1anda2in the second-order
difference equation are such that the poles of H(z) are complex. If we express the poles
in polar form
p1=rejθand p2=re−jθ=p∗
1
it is convenient to rewrite the denominator polynomial in terms of the parameters rand
θ. From (10.58), we can write
A(z)=/parenleftbig
1−p1z−1/parenrightbig/parenleftbig
1−p2z−1/parenrightbig
=1−2rcosθz−1+r2z−2(10.66)
The system function is therefore
H(z)=b0+b1z−1+b2z−2
1−2rcosθz−1+r2z−2(10.67)
10-11 SECOND-ORDER FILTERS 463
We can also identify the two feedback ﬁlter coefﬁcients as a1=2rcosθanda2=−r2,
so the corresponding difference equation is
y[n]=(2 rcosθ)y[n−1]−r2y[n−2]+b 0x[n]+b 1x[n−1]+b 2x[n−2]
(10.68)
This parameterization is signiﬁcant because it allows us to see directly how the poles
deﬁne the feedback terms of the difference equation (10.68). For example, if we want to
change the angles of the poles, ±θ, then we vary only the coefﬁcient a1.
EXAMPLE 10-16 Second-Order System: Complex Poles
Consider the following system
y[n]=y [n−1]−y [n−2]+2x[n]+2 x[n−1]
whose system function is
H(z)=2+2z−1
1−z−1+z−2=2(1+z−1)
(1−ejπ/3z−1)(1−e−jπ/ 3z−1)(10.69)
A pole-zero plot for this H(z) was already given in Fig. 10-18. Using the partial fraction
expansion technique, we can write H(z) in the form
H(z)=/parenleftbigg2+2e−jπ/ 3
1−e−j2π/3/parenrightbigg
1−ejπ/3z−1+/parenleftbigg2+2ejπ/3
1−ej2π/3/parenrightbigg
1−e−jπ/ 3z−1=2e−jπ/ 3
1−ejπ/3z−1+2ejπ/3
1−e−jπ/ 3z−1
The right-hand side is the sum of two ﬁrst-order terms for which entry 6 in Table 10-1
applies with a=ejπ/3anda=e−jπ/ 3. The individual terms are complex conjugates, so
their sum is purely real:
h[n]=2 e−jπ/ 3ej(π/ 3)nu[n]+2 ejπ/3e−j(π/ 3)nu[n]=4 cos ((2π/6)(n−1))u[n]
The two complex exponentials with frequencies ±π/ 3 combine to form the cosine. The
impulse response is plotted in Fig. 10-20.
An important observation about the system in Example 10-16 is that it produces a
pure sinusoid when stimulated by an impulse. Such a system is an example of a sine wave
0 5 10 15024
2
4
20
Time Index .n/Figure 10-20 Impulse response for system
withH(z)=2+2z−1
1−z−1+z−2.
464 CHAPTER 10 IIR FILTERS
oscillator. After being stimulated by the single input sample from the impulse, the system
continues indeﬁnitely to produce a sinusoid of frequency ˆω0=(2π/6).This frequency is
equal to the angle of the poles. A ﬁrst-order ﬁlter (or a ﬁlter with all real poles) can only
decay (or grow) as (p)nor oscillate up and down as (−1)n, but a second-order system can
oscillate with different periods. This is important when modeling physical signals suchas speech, music, or other sounds.
Note that in order to produce the continuing sinusoidal output, the system must have
its poles on the unit circle
11of the z-plane (i.e., r=1). Also note that the angle of the
poles is exactly equal to the radian frequency of the sinusoidal output. Thus, we cancontrol the frequency of the sinusoidal oscillator by adjusting the a
1coefﬁcient of the
difference equation (10.68) while leaving a2ﬁxed at a2=−1.
EXAMPLE 10-17 Poles on Unit Circle
As an example of an oscillator with a different frequency, we can use (10.68) to deﬁne
a difference equation with prescribed pole locations. If we take r=1 and θ=π/2, as
shown in Fig. 10-21, we get a1=2rcosθ=0 and a2=−r2=−1, and the difference
equation (10.68) becomes
y[n]=− y[n−2]+x[n] (10.70)
The system function of this system is
H(z)=1
1+z−2=1
(1−ejπ/2z−1)(1−e−jπ/ 2z−1)
=1
2
1−ejπ/2z−1+1
2
1−e−jπ/ 2z−1
The inverse z-transform gives a general formula for h[n]:
h[n]=1
2ej(π/ 2)nu[n]+1
2e−j(π/ 2)nu[n]=cos ((2π/4)n)u[n] (10.71)
(2)
<f´g=f´g
Figure 10-21 Pole-zero plot for system with H(z)=1
1+z−2.
The poles are on the unit circle at z=±j, and there are two
zeros at z=0.
11Strictly speaking, a system with poles on the unit circle is unstable, so for some inputs the output may
increase without bound. As in the case of the accumulator system in Section 10-9, the impulse response of
this second-order system does not blow up.
10-11 SECOND-ORDER FILTERS 465
Once again, the frequency of the cosine term in the impulse response is equal to the angle
of the pole, π/2=(2π/4).
The preceding two examples have shown that if the complex conjugate poles of the
second-order system lie on the unit circle, the output oscillates sinusoidally and doesnot decay to zero. If the poles lie outside the unit circle, the output grows exponentially,whereas if they are inside the unit circle, the output decays exponentially to zero.
EXAMPLE 10-18 Stable Complex Poles
As an example of a stable system, we make the radius of the poles less than one with
r=1
2and the angles ±π/ 3, as shown in Fig. 10-22. Then the ﬁlter coefﬁcients are
a1=2rcosθ=2(1
2)(1
2)=1
2anda2=−r2=−(1
2)2=−1
4, so the difference equation
(10.68) becomes
y[n]=1
2y[n−1]−1
4y[n−2]+x[n] (10.72)
The system function of this system is
H(z)=1
1−1
2z−1+1
4z−2=1√
3e−jπ/ 6
1−1
2ejπ/3z−1+1√
3ejπ/6
1−1
2e−jπ/ 3z−1
and the inverse z-transform of the right-hand side gives the general formula for h[n] after
combining two complex exponential terms into a real sinusoid as
h[n]=2√
3(1
2)ncos((2π/6)n−π/6)u[n] (10.73)
In this case, the general formula for h[n] has an exponential decay of (1
2)nmultiplying a
periodic cosine with period 6. The frequency of the cosine term in the impulse response(10.73) is again the angle of the pole, π/3=2π/6; while the decaying term r
n=(1
2)nis
controlled by the radius of the pole r. Figure 10-23 shows h[n] for this example. Note the
rapid decay of the impulse response. This rapid decay can be predicted from the pole-zeroplot in Fig. 10-22, since, in general, poles that are not close to the unit circle correspondto rapidly decaying exponential components of the impulse response.
DEMO
IIR Filtering
(2)
<f´g=f´g
Figure 10-22 Pole-zero plot for system with
H(z)=1
1−1
2z−1+1
4z−2. The two poles are
inside the unit circle at a radius of r=1/2 and at
angles θ=±π/3. There are two zeros at z=0.
466 CHAPTER 10 IIR FILTERS
0 5 10 1501
1
2
20
Time Index .n/Figure 10-23 Impulse response for a two-pole
system with system function H(z)=1
1−1
2z−1+1
4z−2.
10-12 Frequency Response of Second-Order IIR Filter
The general formula for the frequency response of a second-order system is
H(ejˆω)=b0+b1e−jˆω+b2e−j2ˆω
1−a1e−jˆω−a2e−j2ˆω(10.74)
The numerator and denominator of (10.74) contain terms like e−jˆωande−j2ˆω,s oH(ejˆω)
is a periodic function with a period of 2 π. Formulas for the magnitude and phase of
H(ejˆω)can be obtained but they do not provide much insight. Rather than work out a
general formula, we take a speciﬁc numerical example to show the kind of formulas that
result.
EXAMPLE 10-19 Frequency Response of a Second-Order System
Consider the case where the system function is
H(z)=1−z−2
1−0.9z−1+0.81z−2(10.75)
In order to ﬁnd the magnitude of the frequency response, we work with the magnitudesquared and then take the positive square root at the end. The magnitude squared is derivedby multiplying out all the terms in the numerator and denominator of H(e
jˆω)H∗(ejˆω),
and then collecting terms where the inverse Euler formula applies.
|H(ejˆω)|2=H(ejˆω)H∗(ejˆω)
=1−e−j2ˆω
1−0.9e−jˆω+0.81e−j2ˆω·1−ej2ˆω
1−0.9ejˆω+0.81ej2ˆω
=2−2 cos(2 ˆω)
2.4661−3.258 cos ˆω+1.62 cos(2 ˆω)
This formula is useful for computations because it is expressed completely in terms of
cosine functions. The procedure is general, so a similar formula could be derived for anyIIR ﬁlter. Since the cosine is an even function, |H(e
jˆω)|2is an even function of ˆω, that is,
|H(e−jˆω)|2=|H(ejˆω)|2
This is true for any system function when the difference equation has real coefﬁcients.The magnitude |H(e
jˆω)|, which requires a square root, is also an even function.DEMO
Three Domains–IIR
10-12 FREQUENCY RESPONSE OF SECOND-ORDER IIR FILTER 467
The phase response is a bit messier. Recall that the angle of a complex number z
can be found via tan−1(/Ifractur{z}//Rfractur{z}). If arctangents are used to extract the angles of the
numerator and denominator, then the two angles must be subtracted to get the phase. The
ﬁlter coefﬁcients in this example are real, so the phase is
∠H(ejˆω)=tan−1/parenleftbiggsin(2ˆω)
1−cos(2ˆω)/parenrightbigg
−tan−1/parenleftbigg0.9 sinˆω−0.81 sin (2ˆω)
1−0.9 cos ˆω+0.81 cos(2 ˆω)/parenrightbigg
which can be shown to be an odd function of ˆω(i.e.,∠H(e−jˆω)=−∠H(ejˆω)).
The even magnitude and odd phase are general characteristics of the frequency
response (or any DTFT) of a real impulse response (or any real sequence). As discussedin Section 6-4.3 for the FIR case and now demonstrated for an IIR ﬁlter, the frequencyresponse has conjugate symmetry such that
H(e
−jˆω)=H∗(ejˆω)
whenever the impulse response is real.
The formulas obtained in this example are too complicated to provide much insight
directly. Subsequent discussions will show how to use the poles and zeros of H(z)
to construct an approximate plot of the frequency response without recourse to suchformulas.
10-12.1 Frequency Response via MATLAB
As discussed in Sect. 10-7.1, the MATLAB function freqz can be used to evaluate the
frequency response over a grid in the ˆωdomain for −π< ˆω≤π. Then the magnitude
and phase of H(ejˆω)can be extracted with the functions absandangle prior to plotting
the frequency response.
EXAMPLE 10-20 MATLAB for H( ejˆω)
Consider the system introduced in Example 10-19:
y[n]=0 .9y[n−1]−0 .81y[n−2]+x[n]−x [n−2] (10.76)
In order to deﬁne the ﬁlter coefﬁcients in MATLAB, we put all the terms with y[n]on
one side of the equation, and the terms with x[n]on the other.
y[n]−0 .9y[n−1]+0 .81y[n−2]=x[n]−x [n−2]
Then we read off the ﬁlter coefﬁcients and deﬁne the vectors aaandbbas follows:
a a=[1 ,−0.9, 0.81 ]
b b=[1 ,0 ,−1]
468 CHAPTER 10 IIR FILTERS
The following call to freqz generates a vector HHcontaining the values of the
frequency response evaluated at the vector of frequencies speciﬁed by the third argument,
[-pi:(pi/100):pi] :
HH = freqz(bb, aa, [-pi:(pi/100):pi])
A plot of the resulting magnitude and phase is shown in Fig. 10-24. Since H(ejˆω)is
always periodic with a period of 2 π, it is sufﬁcient to make the frequency response plot
over the range −π< ˆω≤π.
In this example, we can show a connection between the poles and zeros and the shape
of the frequency response. For this system, we have the system function
H(z)=1−z−2
1−0.9z−1+0.81z−2
which has its poles at z=0.9e±jπ/ 3and zeros at z=1 andz=−1. Since z=−1i st h e
same as z=ejπ, we conclude that H(ejˆω)is zero at ˆω=π, because H(z)=0a tz=−1;
likewise, the zero of H(z) atz=+1 is a zero of H(ejˆω)atˆω=0. The poles have angles
of±π/ 3 rad, so the poles have an effect on the frequency response near ˆω=±π/3. Since
H(z) is inﬁnite at z=0.9e±jπ/ 3, the nearby points on the unit circle (at z=e±jπ/ 3) must
have large values. In this case, we can evaluate the frequency response directly from the
formula to get
H(ejˆω)/vextendsingle/vextendsingle
ˆω=π/ 3=H(z)/vextendsingle/vextendsingle
z=ejπ/3
=1−z−2
1−0.9z−1+0.81z−2/vextendsingle/vextendsingle/vextendsingle/vextendsingle
z=ejπ/3
=1−(−1
2−j1
2√
3)
1−0.9(1
2−j1
2√
3)+0.81(−1
2−j1
2√
3)
⇒/vextendsingle/vextendsingleH(e jπ/3)/vextendsingle/vextendsingle=/vextendsingle/vextendsingle/vextendsingle1.5+j0.5(√
3)/vextendsingle/vextendsingle/vextendsingle
/vextendsingle/vextendsingle/vextendsingle0.145+j0.045(√
3)/vextendsingle/vextendsingle/vextendsingle=10.522
This value of the frequency response magnitude is a good approximation to the true
maximum value of 10.5257, which occurs at ˆω=0.334π.
10-12.2 3-dB Bandwidth
The width of the peak of the frequency response in Fig. 10-24 is called the bandwidth.F o r
consistency, bandwidth must be measured at some standard point on the plot of |H(ejˆω)|.
The most common practice is to plot |H(ejˆω)|on a dB scale and use the 3-dB width,
which is calculated as follows:
10-12 FREQUENCY RESPONSE OF SECOND-ORDER IIR FILTER 469
10.5
(a)
(b)O!O!3dB
†H.ejO!/jH.ejO!/j
10:5p
2
33
33 3
3 33
22
00Figure 10-24 Frequency response (magnitude
and phase) for a second-order IIR ﬁlter. The
poles are at z=0.9e±jπ/ 3and the numerator
has zeros at z=1 andz=−1. (a) Magnitude
response with shaded regions showing the 3-dBbandwidth around the peak at ˆω=π/3.
(b) Phase response which is nonlinear.
Determine the peak value for |H(ejˆω)|and then ﬁnd the nearest frequency on
each side of the peak where the value of the frequency response is1√
2Hpeak.
The 3-dB width is the difference /Delta1ˆωbetween these two frequencies. In
decibels, the term1√
2is approximately −3 dB, so the 3-dB bandwidth /Delta1ˆω
is measured 3 dB below the peak.
In Fig. 10-24, the true peak value is 10.5257 at ˆω=0.334π, so we look for points
where |H(ejˆω)|=1√
2Hpeak=(0.707)(10 .5257) =7.443. These occur at ˆω=0.302π
andˆω=0.369π , so the bandwidth is /Delta1ˆω=0.067π =2π(0.0335) =0.2105 rad.
Alternatively, if we plot 20 log10|H(ejˆω)|instead of |H(ejˆω)|as in Fig. 10-25, the
maximum value is 20.42 dB so the 3-dB bandwidth points are the frequencies where
20 log10|H(ejˆω)|=20 .42−3=17.42 dB, which is 3 dB down from the peak. Note
how 20 log10|H(ejˆω)|approaches −∞ at the frequencies corresponding to the zeros of
H(z) atz=±1 (where |H(ej0)|=0 and |H(ejπ)|=0).
The 3-dB bandwidth calculation can be carried out efﬁciently with a computer
program, but it is also helpful to have an approximate formula that can give quick
O!3dB20log10jH.ejO!/j
20:4
17:4
3 3 3 30Figure 10-25 Log magnitude of frequency
response (in dB) corresponding to
Fig. 10-24(a). The shaded region shows the3-dB bandwidth around the peak at ˆω=π/3.
470 CHAPTER 10 IIR FILTERS
“back-of-the-envelope” calculations. For poles at re±jθ, an excellent approximation for
the second-order case with narrow peaks is given by the formula
/Delta1ˆω≈2|1−r|√r(10.77)
which shows that the distance of the pole from the unit circle |1−r|controls the
bandwidth.12In Fig. 10-24 where r=0.9, the bandwidth estimate (10.77) evaluates to
/Delta1ˆω≈2(1−0.9)√
0.9≈0.2
0.9487≈0.2108 rad
The measured value of /Delta1ˆωwas 0.2105 rad, so we see that the approximation is quite
good in this case, where the pole is rather close to the unit circle (radius = 0.9).
10-12.3 Three-Dimensional Plot of a System Function
Since the frequency response H(ejˆω)is the system function evaluated on the unit circle,
we can illustrate the connection between the zandˆωdomains with a 3-D plot such as the
one shown in Fig. 10-26. The poles and zeros of H(z) provide the connection because
they have a signiﬁcant impact on the 3-D plot, and thus have a predictable inﬂuence on
the frequency response, which is H(z) evaluated on the unit circle.
Figure 10-26 shows a plot of the system function H(z) at points inside, outside, and
on the unit circle. The peaks located at the poles, 0 .85e±jπ/ 2, determine the frequency
response behavior near ˆω=±π/2. If the poles were moved closer to the unit circle, the
frequency response would have higher and narrower peaks. The zeros at z=±1 create
valleys that, in this case, lie on the unit circle at ˆω=0,π.DEMO
Zt oF r e q
Given the intuition derived from the 3-D example in Fig. 10-26, we can estimate any
value of |H(ejˆω)|directly from the poles and zeros. This can be done systematically by
writing H(z) in the following form:
H(z)=G(z−z1)(z−z2)
(z−p1)(z−p2)
where z1andz2are the zeros and p1andp2are the poles of the second-order ﬁlter.
The parameter Gis a gain term that has been factored out. Then the magnitude of the
frequency response is
/vextendsingle/vextendsingleH(ejˆω)/vextendsingle/vextendsingle=G|ejˆω−z1||ejˆω−z2|
|ejˆω−p1||ejˆω−p2|(10.78)
Equation (10.78) has a simple geometric interpretation. Each term |ejˆω−zi|or|ejˆω−pi|
is the vector length from the zero zior the pole pito the position ejˆω, as shown in
Fig. 10-27. The frequency response at a ﬁxed value of ˆωis the product of Gtimes the
12This approximate formula for bandwidth is good only when the poles are isolated from one another.
The approximation breaks down, for example, when a second-order system has two poles with small angles.
10-12 FREQUENCY RESPONSE OF SECOND-ORDER IIR FILTER 471
Figure 10-26 z-transform magnitude evaluated over
a region of the z-plane including the unit circle. The
view is from the ﬁrst quadrant, so the z=1 point is
in the foreground at the left. Values along the unit
circle are the frequency response (magnitude) forthe second-order IIR ﬁlter deﬁned in (10.75). Thepoles are at z=0.85e
±jπ/ 2and the numerator has
zeros at z=±1. The zeros are denoted by orange
dots that can be seen along the real axis.
product of all the lengths of the vectors from the zeros to the point z=ejˆωdivided by
the product of all the lengths of the vectors from the poles to ejˆω.
/vextendsingle/vextendsingleH(ejˆω)/vextendsingle/vextendsingle=GZ1Z·Z2Z
P1Z·P2Z
As we go around the unit circle, these vector lengths change. When we are on top of a
zero, one of the numerator lengths is zero, so |H(ejˆω)|=0 at that frequency. When we
are close to a pole, one of the denominator lengths is very small, so/vextendsingle/vextendsingleH(e jˆω)/vextendsingle/vextendsingleis large at
that frequency.
We can apply this geometric reasoning to estimate the magnitude of H(e jˆω)atˆω=
π/4 which is the conﬁguration shown in Fig. 10-27. The gain Gis assumed to be 1.
Rough estimates for the vector lengths are Z1Z≈1.8 and Z2Z≈0.7 for the zeros, and
P1Z≈0.7 and P2Z≈1.6 for the poles. Thus we obtain the following estimate for the
magnitude of the frequency response at ˆω=π/4:
/vextendsingle/vextendsingleH(e jπ/4)/vextendsingle/vextendsingle=GZ1Z·Z2Z
P1Z·P2Z=(1)(1.8)(0 .7)
(0.7)(1.6)=1.8
1.6=1.125
472 CHAPTER 10 IIR FILTERS
P1Z
P2ZZ1ZZ
2Zp1
p2´1 ´2´DejO!
<f´g=f´g
Figure 10-27 z-transform evaluated on the unit
circle(z=ejˆω)by using a product of vector
lengths from the poles and zeros. PiZdenotes the
vector from the ithpole to (z=ejˆω), and ZjZ
denotes the vector from the jthzero to (z=ejˆω).
The actual value obtained from evaluating the formula (10.75) for H(z) is/vextendsingle/vextendsingleH(ejπ/4)/vextendsingle/vextendsingle=
1.132. See Problems P-10.19 and P-10.23 for application of this method to notch ﬁlters
and all-pass ﬁlters.
EXERCISE 10.13 For the pole-zero plot in Fig. 10-27, apply this geometric reasoning to estimate
the magnitude of H(ejˆω)in Fig. 10-26 at ˆω=π/2, which is close to the pole at
z=j0.85. Assume that the gain Gis equal to 1. In this case, the estimate can be
exact because the vector lengths do not have to be approximated.
10-12.4 Pole-Zero Placing with the PeZGUI
In order to build an intuitive understanding of the relationship between the location ofpoles and zeros in the z-domain, the impulse response h[n] in the n-domain, and the
frequency response H(e
jˆω)in the ˆω-domain, a GUI called PeZwas written in MATLAB
for doing interactive explorations of the three domains. The PeZ GUI is contained in the
DSP-First Toolbox. To run PeZ, typepezdemo at the command prompt and you will see
the GUI shown in Fig. 10-28. PeZ is based primarily on the factored form of the system
function, which represents the rational z-transform in terms of the poles and zeros:
H(z)=B(z)
A(z)=GM/productdisplay
k=1(1−zkz−1)
N/productdisplay
/lscript=1(1−p/lscriptz−1)(10.79)
where Mis the number of zeros and Nis the number of poles.
10-12 FREQUENCY RESPONSE OF SECOND-ORDER IIR FILTER 473
Figure 10-28 Graphical user interface for PeZwhich illustrates the three-domains concept. The user can enter poles
and zeros and see the resulting impulse response and frequency response. In addition, the poles and zeros can be moved
with a mouse pointer and the other plots will be updated in real time. The example shown here is the same as H(z) in
(10.75) and the plots in Fig. 10-24.
ThePeZ GUI is controlled by the Pole-Zero Plot panel in the upper left where
the user can add (or delete) poles and zeros, as well as move them around with the
pointing device. The button denoted ZZis used to add zeros; the button PPis used to
add poles. By default, the Add with Conjugate property is turned on, so poles and
zeros are typically added in pairs to satisfy the complex conjugate property, giving realcoefﬁcients. For more detailed information about the
PeZcontrols and menus, access the
menu item called “Help.”DEMO
PeZ GUI
Here are some of the features of PeZ.I nt h e Pole-Zero Plot panel, you can
selectively place pole pairs or zero pairs in the z-plane, and then observe (in the
other plotting panels) how their placement affects the impulse and frequency responses.
The orange ray in the z-domain window is tied to the orange vertical lines on the
frequency responses, and they move together13. This helps identify frequency domain
features that are caused by pole locations or zero locations, because the angle around
13The orange lines highlight an important feature in PeZ. In MATLAB the Pez display is rendered in
color and these lines are actually red.
474 CHAPTER 10 IIR FILTERS
the unit circle corresponds to frequency ˆω. A single pole (or zero) can be added if the
Add with Conjugate property is turned off.
InPeZ, an individual pole/zero pair can be moved around and the corresponding
H(ejˆω)andh[n] plots will be updated as you drag the pole (or zero) pair. Since exact
placement of poles and zeros with the mouse is difﬁcult, an Edit button is provided
for numerical entry of the real and imaginary parts. Before you can edit a pole or zero,
however, you must ﬁrst select it in the list of Pole Locations orZero Locations .
Next, you will have to make the necessary change in the edit ﬁeld (box above the Edit
button) and then press the Edit button for the change to take effect. Removal of individual
pole pairs or zero pairs can be performed with the Delete button below the edit box.
Note that all poles and/or zeros can be easily cleared by clicking on the -Abutton or by
using the -Por-Zbuttons.
10-13 Example of an IIR Lowpass Filter
First-order and second-order IIR ﬁlters are useful and provide simple examples, but, inmany cases, we use higher-order IIR ﬁlters because they can realize better frequencyresponses with ﬂatter passbands and stopbands and sharper transition regions. The
butter ,cheby1 ,cheby2 , andellip functions in MATLAB’s Signal Processing
Toolbox can be used to design ﬁlters with prescribed frequency-selective characteristics.
As an example, consider the system with system function H(z) given by (10.80a).
H(z)=0.0798(1 +z−1+z−2+z−3)
1−1.556z−1+1.272z−2−0.398z−3(10.80a)
=0.0798(1 +z−1)(1−ejπ/2z−1)(1−e−jπ/ 2z−1)
(1−0.556z−1)(1−0.846ej0.3πz−1)(1−0.846e−j0.3πz−1)(10.80b)
=−1
5+0.62
1−.556z−1+0.17ej0.96π
1−.846ej0.3πz−1+0.17e−j0.96π
1−.846e−j0.3πz−1(10.80c)
This system is an example of a lowpass elliptic ﬁlter whose numerator and
denominator coefﬁcients were obtained using the MATLAB function ellip . The exact
call wasellip(3,1,30,0.3) . Each of the three different forms above is useful:
(10.80a) for identifying the coefﬁcients used in the difference equation implementationof the ﬁlter, (10.80b) for sketching the pole-zero plot and the frequency response, and(10.80c) for ﬁnding the impulse response.
14Figure 10-29 shows the poles and zeros of
this ﬁlter. Note that all the zeros are on the unit circle and that all the poles are strictlyinside the unit circle, as they must be for a stable system.
EXERCISE 10.14 From (10.80a), determine the difference equation (using Direct Form I) for
implementing this system.
14Factoring polynomials and obtaining the partial fraction expansion was done in MATLAB using the
functionsroots andresiduez , respectively.
10-13 EXAMPLE OF AN IIR LOWPASS FILTER 475
<f´g=f´g
Figure 10-29 Pole-zero plot for a third-order IIR ﬁlter (10.80b).
Three zeros lie on the unit circle at z=±jandz=−1.
1
0.891
(a)
(b)O!O!
†H.ejO!/jH.ejO!/j
2
22
24 4 4 4
00
Figure 10-30 Frequency response for a
third-order IIR ﬁlter; (a) magnitude, (b) phase.
The system function was evaluated on the unit circle using the MATLAB function
freqz . A plot of this result is shown in Fig. 10-30. Note that the frequency response is
large in the vicinity of the poles and small around the zeros. In particular, the passband
of the frequency response is |ˆω|≤2π(0.15), which corresponds to the poles with angles
at±0.3π. Also, the frequency response is exactly zero at ˆω=±0.5πandˆω=πsince
the zeros of H(z) are at these angles and lie on the unit circle.
EXERCISE 10.15 From (10.80a) or (10.80b), determine the value of the frequency response at ˆω=0.
Finally, Fig. 10-31 shows the impulse response of the system. It oscillates and dies
out with increasing nbecause the dominant terms come from the two complex conjugate
poles at angles ±0.3πand radius 0.846. The decaying envelope is (0.846)n.
476 CHAPTER 10 IIR FILTERS
0 5 10 1500.10.20.3
0:1
20
Time Index .n/Figure 10-31 Impulse response for a
third-order IIR ﬁlter.
EXERCISE 10.16 Use the partial fraction form (10.80c) to determine an equation for the impulse
response of the ﬁlter.
The elliptic ﬁlter example described in this section is a simple example of a practical
IIR lowpass ﬁlter. Higher-order ﬁlters can exhibit much better frequency-selective ﬁlter
characteristics.
10-14 Summary and Links
The class of IIR ﬁlters was introduced in this chapter, along with new methods for using
thez-transform to deal with poles. The z-transform changes problems about impulse
responses, frequency responses, and system structures into algebraic manipulations ofpolynomials and rational functions. Poles of the system function H(z) turn out to be
the most important elements for IIR ﬁlters because properties such as the shape of thefrequency response or the form of the impulse response can be inferred quickly fromthe pole locations.
IIR ﬁlters can be used for many tasks; frequency-selective ﬁltering is the most
common, but nulling or notch ﬁlters are also very useful for removing narrowbandinterference (e.g., 60 Hz power line signals). The MATLAB GUI called
PeZ (see
Fig. 10-28) is an ideal tool for studying the poles and zeros of IIR ﬁlters, and the connectionbetween the time domain (n), the frequency domain ( ˆω), and the z-transform domain.
Some of the things that can be done with
PeZ are the following:
DEMO
PeZ GUI1.Placing Zeros: When placed on the unit circle, zeros of B(z) force the frequency
response to be zero which can then be used to null out sinusoids at one frequency.
2.Placing Poles: When placed near the unit circle (but inside), roots of A(z) create
peaks in the frequency response which can be used to form BPFs.
3.Designing IIR Notch Filters: By placing conjugate zeros on the unit circle with
poles at the same angle, but just inside the unit circle, a notch or narrow regionwith small gain can be formed. The frequency response of the notch is much sharperthan a nulling ﬁlter which is an FIR ﬁlter formed only from the conjugate zeros onthe unit circle (see Problem P-10.19).
10-15 PROBLEMS 477
4.Designing Allpass Filters: By placing poles inside the unit circle with zeros at
corresponding conjugate reciprocal locations, the frequency response has constant
magnitude for all frequencies. Such systems are called all-pass ﬁlters (see ProblemP-10.23).
We also continued to stress the important concept of “domains of representation.”
Then-domain or time domain, the ˆω-domain or frequency domain, and the z-domain give
us three domains for thinking about the characteristics of an LTI system. We completedthe ties between domains by introducing the inverse z-transform for constructing a signal
from its z-transform. As a result, even difﬁcult problems such as convolution can be
simpliﬁed by working in the most convenient domain (z)and then transforming back to
the original domain (n).LAB
PeZ—the z, n, and ˆω
Domains
In a lab devoted to studying the three domains, the PeZ GUI is used to explore the
properties of IIR ﬁlters. The PeZtool is useful for studying IIR systems because it presents
the user with multiple views of an LTI system: pole-zero domain, frequency response,and impulse response. (See Fig. 10-28.)
The Companion Website also contains the following demonstrations of the
relationship between the z-plane and the frequency domain and time domain:
(a) A set of “three-domain” movies that show how the frequency response and impulse
response of an IIR ﬁlter change as a pole location is varied. Several different ﬁltersare demonstrated.DEMO
Three Domains—IIR
(b) A movie that animates the relationship between the z-plane and the unit circle
where the frequency response lies.
DEMO
Zt oF r e q(c) ThePeZ GUI can be used to construct different IIR and FIR ﬁlters. There is also
a tutorial on how to use PeZ.
10-15 Problems
The problems in this section address the major concepts of this chapter. On the Companion
Website there are many related homework problems which can be used to review and
practice. Most of them have detailed solutions.
NOTE
Problems with SolutionsP-10.1 The Fibonacci sequence is generated by a recursion.
(a) Determine a general formula for the Fibonacci sequence by ﬁnding the impulse
response of the following second-order system:
y[n]=y [n−1]+y [n−2]+x[n]
(b) Determine the two poles of this system. Is this a stable system?
P-10.2 Find the impulse response of the second-order system
y[n]=0 .8(y[n−1]−y [n−2])+x[n−1]
478 CHAPTER 10 IIR FILTERS
Express your answer as separate formulas for the cases where n<1 and n≥1, thus
covering the entire range of n.
P-10.3 Use time invariance to determine the impulse response of the following ﬁrst
order system:
y[n]=0 .4y[n−1]+6x [n−8]
Assume that the system is at rest for n<0. Plot the resulting signal h[n] as a function of
n. Pay careful attention to where the nonzero portion of the impulse response begins.
P-10.4 Find the impulse response of a system having a pole at 0.4 and a zero at 0 and
h[0]=4. Use this h[n] to determine the output due to the input signal
x[n]=⎧
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩0 n<1,n ≥7
2 n=1
−3 n=2
0 n=3
5 n=4
0 n=5
−1.5 n=6
Write the formula as the sum of four terms, each of which is a shifted impulse response.
Assume the initial rest condition. Plot the resulting signal y[n]as a function of nfor
0≤n≤12.
P-10.5 The impulse response of an LTI system is h[n]=8/parenleftBig√
3/parenrightBig−n
u[n]. When the
input signal is x[n]=δ [n]+δ [n−2]+βδ [n−6], determine the value of βso that the
output y[n]=x [n]∗h[n] is zero for n≥6.
P-10.6 For the following feedback ﬁlters, determine the locations of the poles and zeros
and plot the positions in the z-plane:
(a)y[n]=1
2y[n−1]+1
3y[n−2]−x[n]−2 x[n−1]+3x [n−2]
(b)y[n]=1
2y[n−2]−1
3y[n=2]−x[n]+2 x[n−1]+3x [n−2]
In part (b), only the signs on y[n−2]andx[n−1]were changed from those in part (a).
Compare the two results.
P-10.7 In this problem, the degrees of the numerator and denominator polynomials are
different, so there should be zeros (or poles) at z=0o rz=∞ . Determine the poles and
zeros of the following ﬁlters:
10-15 PROBLEMS 479
(a)y[n]=1
2y[n−1]−1
3y[n−2]−x[n]
(b)y[n]=1
2y[n−1]−1
3y[n−2]−x[n−2]
(c)y[n]=1
2y[n−1]−1
3y[n−2]−x[n−5]
Plot the positions of the poles and zeros in the z-plane. Make sure that the number of
poles and zeros is the same, by allowing zeros (or poles) at z=∞ orz=0.
P-10.8 Given an IIR ﬁlter deﬁned by the difference equation
y[n]=−3
4y[n−1]+x [n]
(a) Determine the system function H(z) . What are its poles and zeros?
(b) When the input to the system is three shifted impulses
x[n]=⎧
⎪⎨
⎪⎩+1 n=0,3,5
−2 n=6
0 otherwise
determine the functional form for the output signal y[n]. Assume that the output
signal y[n]is zero for n<0.
P-10.9 An LTI allpass ﬁlter is described by the difference equation
y[n]=2
3y[n−1]−12 x[n]+18x [n−1]
(a) Determine the system function H(z) for this system. Express H(z) as a ratio of
polynomials in z−1(negative powers of z) and also as a ratio of polynomials in
positive powers of z.
(b) Plot the poles and zeros of H(z) in the z-plane.
(c) From H(z) , obtain an expression for H(ejˆω), the frequency response of this system.
(d) Show that |H(ejˆω)|2is constant for all ˆω, and determine the constant value.
P-10.10 Given an IIR ﬁlter deﬁned by the difference equation
y[n]=− 0.6y[n−2]+x[n]
(a) Determine the system function H(z) , and then ﬁnd its poles and zeros.
(b) When the input to the system is
x[n]=6δ [n]+2 δ[n−1]+4 .5δ[n−2]+3δ [n−4]
determine the output signal y[n]. Assume that y[n]is zero for n<0.
480 CHAPTER 10 IIR FILTERS
P-10.11 An IIR ﬁlter has 6 poles at the 6throot of 0.8 and 6 zeros at z =0
(a) Find the z-transform system function of the system. Plot its poles in the z-plane.
(b) Find the difference equation of the system.
(c) When the input signal is x[n]=δ [n]+βδ [n−p], determine values of pfor which
the output signal is zero for n≥6.
P-10.12 Determine the inverse z-transform of the following:
(a)Ha(z)=1−0.8z−1
1+0.7z−1
(b)Hb(z)=z−3
1−0.6z−1
(c)Hc(z)=2−0.5z−1−3z−3+4z−4
(d)Hd(z)=2z−5
z+0.68−z−7+z−2
1−0.4z−1
P-10.13 Determine the inverse z-transform of the following:
(a)Xa(z)=1−z−1
1−1
12z−1−1
12z−2
(b)Xb(z)=1+z−2
1+0.8z−1+0.64z−2
(c)Xc(z)=z2
(z−2)(z−0.25)2
P-10.14 For each of the pole-zero plots (1–6) in Fig. P-10.14, determine which of the
following systems (speciﬁed by either an H(z) or a difference equation) matches the
pole-zero plot:
S1:y[n]= 0.9y[n−1]+1
2x[n]+1
2x[n−1]
S2:y[n]= − 0.9y[n−1]+9x [n]+10 x[n−1]
S3:H(z)=1
2(1−z−1)
1+0.9z−1
S4:y[n]=1
4x[n]+x [n−1]+3
2x[n−2]+x[n−3]+1
4x[n−4]
S5:H(z)=1−z−1+z−2−z−3+z−4
S6:y[n]=/summationtext2
k=0x[n−k]
S7:y[n]= x[n]+x [n−1]+x [n−2]+x[n−3]+x [n−4]+x[n−5]
10-15 PROBLEMS 481
 (5)
Pole-Zero Plot #1
 (3)
Pole-Zero Plot #4Pole-Zero Plot #2
 (4)
Pole-Zero Plot #5Pole-Zero Plot #3
Pole-Zero Plot #6<f´g<f´g
<f´g<f´g
<f´g<f´g
=f´g=f´g
=f´g=f´g
=f´g=f´g
Figure P-10.14
P-10.15 Given an IIR ﬁlter deﬁned by the difference equation
y[n]=1
4y[n−1]+x [n]
(a) When the input to the system is a unit-step sequence, u[n], determine the functional
form for the output signal y[n]. Use the inverse z-transform method. Assume that
the output signal y[n]is zero for n<0.
(b) Find the output when x[n]is a complex exponential that starts at n=0:
x[n]=ej(π/ 6)nu[n]
(c) From (b), identify the steady-state component of the response, and compare its
magnitude and phase to the frequency response at ˆω=π/6.
P-10.16 The system function of an LTI system is given by the formula
H(z)=(1+z−1)(1−ej0.4πz−1)(1−e−j0.4πz−1)
(1−0.7ej0.8πz−1)(1−0.7e−j0.8πz−1)
(a) Write the difference equation that gives the relation between the input x[n]and the
output y[n].
(b) Plot the poles and zeros of H(z) in the complex z-plane.
Hint: Express H(z) as a ratio of factored polynomials in zinstead of z−1.
(c) If the input is of the form x[n]=Aejϕejˆω0n, for what values of −π≤ˆω0≤πis
it true that y[n]=0?
482 CHAPTER 10 IIR FILTERS
P-10.17 For each of the frequency response plots (1–6) in Fig. P-10.17, determine
which of the following systems (speciﬁed by either an H(z) or a difference equation)
matches the frequency response:
S1:y[n]=0 .9y[n−1]+1
2x[n]+1
2x[n−1]
S2:y[n]=− 0.9y[n−1]+9x [n]+10 x[n−1]
S3:H(z)=1
2(1−z−1)
1+0.9z−1
S4:y[n]=1
4x[n]+x [n−1]+3
2x[n−2]+x[n−3]+1
4x[n−4]
S5:H(z)=1−z−1+z−2−z−3+z−4
S6:y[n]=2/summationdisplay
k=0x[n−k]
S7:y[n]=x [n]+x [n−1]+x [n−2]+x[n−3]+x [n−4]+x[n−5]
00510
0024
00500510
00510
0024
Frequenc y.O!/ Frequenc y.O!/Frequenc y.O!/Frequenc y.O!/
Frequenc y.O!/Frequenc y.O!/#1#2
#3 #4
#5 #6
/EM/EM/EM
/EM/EM/EM/EM
2/EM
2/EM
2
/EM
2/EM
2/EM
2
/EM
4/EM
4/EM
4
/EM
4/EM
4/EM
4
3/EM
43/EM
43/EM
4
3/EM
43/EM
43/EM
4
/NUL/EM
2/NUL/EM
2/NUL/EM
2
/NUL/EM
2/NUL/EM
2/NUL/EM
2
/NUL/EM
4/NUL/EM
4/NUL/EM
4
/NUL/EM
4/NUL/EM
4/NUL/EM
4
/NUL3/EM
4/NUL3/EM
4/NUL3/EM
4
/NUL3/EM
4/NUL3/EM
4/NUL3/EM
4
/NUL/EM/NUL/EM/NUL/EM
/NUL/EM/NUL/EM/NUL/EMFigure P-10.17
10-15 PROBLEMS 483
P-10.18 In Fig. P-10.18, match ﬁve of the six pole-zero plots (PZ 1–6) with the correct
one of ﬁve possible frequency responses (J–N). In the pole-zero plots, poles are denoted
byxand zeros by o.
Pole-Zero Plot #1
 (2)
Pole-Zero Plot #3
Pole-Zero Plot #5Pole-Zero Plot #2
Pole-Zero Plot #4
Pole-Zero Plot #600510
00510
00510
00510
00510
Frequency .O!/(A)
(B)
(C)
(D)
(E)
22222
44444
44444
22222
44444
44444
<f´g<f´g<f´g
<f´g<f´g<f´g
=f´g=f´g=f´g
=f´g=f´g=f´g
Figure P-10.18
P-10.19 An IIR notch ﬁlter is deﬁned by the system function
H(z)=(1−ejπ/3z−1)(1−e−jπ/ 3z−1)
(1−rejπ/3z−1)(1−re−jπ/ 3z−1)
(a) Determine the difference equation that relates the input x[n]to the output y[n].
(b) Plot the poles and zeros of H(z) in the z-plane for the case r=0.9.
484 CHAPTER 10 IIR FILTERS
(c) Use the techniques of Section 10-12.3 to sketch the magnitude of the frequency
response of the system for the case r=0.9.
(d) How does the frequency response change as r→1?
(e) How would you change the frequency location of the “notch”?
P-10.20 In Fig. P-10.20, match ﬁve of the six pole-zero plots (PZ 1–6) with the correct
one of ﬁve possible impulse responses (J–N). In the pole-zero plots, poles are denoted
byxand zeros by o.
Pole-Zero Plot #1
 (2)
Pole-Zero Plot #3
Pole-Zero Plot #5Pole-Zero Plot #2
Pole-Zero Plot #4
Pole-Zero Plot #60 5 10 1502
0 5 10 15012
0 5 10 1501
0 5 10 15012
0 5 10 15011
2
55555
Time Index .n/(J)
(K)
(L)
(M)
(N)<f´g<f´g<f´g
<f´g<f´g<f´g
=f´g=f´g=f´g
=f´g=f´g=f´g
Figure P-10.20
P-10.21 The IIR ﬁlter described by the difference equation
y[n]=0 .9y[n−1]−0 .9x[n]+x [n−1]
is an all-pass ﬁlter.
10-15 PROBLEMS 485
(a) Determine the system function H(z) for this system. Express H(z) as a ratio of
polynomials in z−1and as a ratio of polynomials in z.
(b) For this ﬁrst-order system, determine the pole and zero locations. Verify that the
zero and the pole are reciprocals.
(c) For H(z) in part (a), show that |H(ejˆω)|2=1.
(d) If the input to the system is
x[n]=6 +7 cos(0 .3πn) +8 cos(0 .8πn)
Explain why the output as
x[n]=6 +7 cos(0 .3πn+ϕ1)+8 cos(0 .8πn+ϕ2)
(e) Determine the value of the two phase terms ϕ1andϕ2.
P-10.22 The input to the C-to-D converter in Fig. P-10.22 is
x(t)=4+cos(500 πt)−3 cos[(2000 π/3)t]
The system function for the LTI system is
H(z)=(1−z−1)(1−ejπ/2z−1)(1−e−jπ/ 2z−1)
(1−0.9ej2π/3z−1)(1−0.9e−j2π/3z−1)
Iffs=1000 samples/sec, determine an expression for y(t), the output of the D-to-C
converter.
Ideal
C-to-DIdeal
D-to-Cx[n] y[n] y(t) x(t)LTI
System
H(z)
fs =1
Tsfs =1
Ts Figure P-10.22
P-10.23 An IIR system is deﬁned by the system function
H(z)=(1−1.25ejπ/3z−1)(1−1.25e−jπ/ 3z−1)
(1−0.8ejπ/3z−1)(1−0.8e−jπ/ 3z−1)
(a) Plot the poles and zeros of H(z) in the z-plane.
(b) Use the geometric estimation technique of Fig. 10-27 in Section 10-12.3 to sketch
the magnitude of the frequency response of the system.
486 CHAPTER 10 IIR FILTERS
(c) This system is called an all-pass ﬁlter. If the poles were moved to a radius of
r=0.9, how would the zeros have to be moved to maintain the all-pass character
ofH(ejˆω)?
P-10.24 The system function of an IIR system is
H(z)=1+z−2
(1−0.8z−1)(1+0.3z−1)
(a) Determine the difference equation that relates the input x[n]to the output y[n].
(b) Plot the poles and zeros of H(z) in the z-plane. Is the system stable?
(c) At what frequency does |H(ejˆω)|have its maximum value? Estimate that value.
(d) At what frequencies does |H(ejˆω)|=0?
P-10.25 Answer the following questions about the system whose z-transform system
function is
H(z)=1+0.8z−1
1−0.7z−1
(a) Determine the poles and zeros of H(z) .
(b) Derive a simple expression (purely real) for the magnitude squared of the frequency
response |H(ejˆω)|2.
(c) Is this ﬁlter a lowpass ﬁlter or a highpass ﬁlter? Explain your answer in terms of
the poles and zeros of H(z) .
P-10.26 The diagram in Fig. P-10.26 depicts a cascade connection of two LTI systems;
where the output of the ﬁrst system is the input to the second system, and the overall
output is the output of the second system.
LTI 2
H2(z), h2[n]LTI 1
H1(z), h1[n]w[n]
W(z)y[n]
Y(z)x[n]
X(z)Figure P-10.26
(a) If the two systems are given as
H1(z)=3
2+z−1andH2(z)=10+5z−1
1−0.7z−1
determine H(z) , the system function of the overall cascade system. In addition,
verify that H(z) is a ﬁrst-order system by ﬁnding the pole and zero of H(z) .
10-15 PROBLEMS 487
(b) Suppose that the two systems are IIR ﬁlters described below:
y1[n]=1
2y1[n−1]+x [n]+1
2x[n−1] and H2(z)=3z−1
1−5
6z−1+1
6z−2
Determine the system function of the overall cascade system.
(c) For the systems in (b), obtain a single difference equation that relates y[n]tox[n]
in Fig. P-10.26.
(d) For the systems in (b), plot the poles and zeros of H(z) in the complex z-plane.
P-10.27 The diagram in Fig. P-10.26 depicts a cascade connection of two LTI systems.
(a) Use z-transforms to show that the system function for the overall system (from
x[n]toy[n])i sH(z) =H2(z)H 1(z), where Y(z)=H(z)X(z) .
(b) Derive a condition on H(z) that guarantees that the output signal will always be
equal to the input signal.
(c) If System 1 is the difference equation y1[n]=x [n]+5
6x[n−1], ﬁnd a system
function H2(z)so that output of the cascaded system will always be equal to its
input. In other words, ﬁnd H2(z), which will undo the ﬁltering action of H1(z).
This is called deconvolution andH2(z)is the inverse ofH1(z).
(d) Suppose that H1(z)represents a general FIR ﬁlter. What conditions on H1(z)must
hold if H2(z)is to be a stable and causal inverse ﬁlter for H1(z)?
P-10.28 Deﬁne a discrete-time signal using the formula:
y[n]=(0 .99)ncos(2π(0.123)n +φ)
(a) Make a sketch of y[n]versus n, as a “stem” plot. Take the range of nto be 0 ≤
n≤20.
(b) Design an IIR ﬁlter that will synthesize y[n]. Give your answer in the form of
a difference equation with numerical values for the coefﬁcients. Assume that the
synthesis will be accomplished by using an impulse input to “start” the differenceequation (which is at rest; i.e., has zero initial conditions).
P-10.29 In the following cascade of systems, all of the individual system functions,
H
i(z), are known.
x[n]H1(z)
H1(z) = z−1 − z−3H2(z) = 2 + z−1y[n] = a1y[n − 1] + a2y[n − 2] + a3y[n − 3] + b0v2[n]v1[n]H2(z)v2[n] y[n]H3(z)
Figure P-10.29
(a) Determine H3(z), the z-transform of the last system.
488 CHAPTER 10 IIR FILTERS
(b) When a1=a2=1
2,a3=0 and b0=7, determine the system function, H(z) for
the cascaded system.
(c) Consider the impulse response h[n] of the cascaded system (i.e., the output when
the input is x[n]=δ [n]). Determine values for {a1,a2,a3,b0}so that the impulse
response is h[n]=8δ [n−nd]. Also determine the value of the time shift nd.
P-10.30 We have shown several equivalent ways to describe an LTI system. Below is a
list of time-domain descriptions (e.g., impulse response, difference equation, MATLAB
code, or ﬁlter coefﬁcients) of LTI systems. For each one, choose a corresponding systemfunction or frequency response from the list on the right. Note that there are more entrieson the right than needed.
Time-Domain Description
(a)yy=filter([0,0,1,0,1],1,xx);
(b)y[n]=0 .9y[n−1]+0 .8y[n−2]+x[n]−x [n−3]
(c)h[n]=u[n −2]−u[n −5]
(d)y[n]=3/summationdisplay
k=1/parenleftBig√
k−1/parenrightBig
x[n−k]
(e)h[n]=0 .8n−2u[n−2]−0.8n−3u[n−3]System Function/Frequency Response
1H(ejˆω)=2 cos( ˆω) e−j3ˆω
2H(z)=z−2(1−z−1)
1−0.8z−1
3H(ejˆω)=1−e−j3ˆω
1−0.9e−jˆω−0.8e−j2ˆω
4H(ejˆω)=(1+2 cos( ˆω))e−j3ˆω
5H(z)=z−2/parenleftbig
1+0.707z−1/parenrightbig
6H(ejˆω)=1−e−j3ˆω
1+0.9e−jˆω+0.8e−j2ˆω
APPENDIX
A
Complex Numbers
The basic manipulations of complex numbers are reviewed in this appendix. The algebraic
rules for combining complex numbers are reviewed, and then a geometric viewpoint is
taken to visualize these operations by drawing vector diagrams. This geometric view is akey to understanding how complex numbers can be used to represent signals. Speciﬁcally,the following three signiﬁcant ideas about complex numbers are treated in this appendix:
•Simple Algebraic Rules: Operations on complex numbers (z=x+jy)follow
exactly the same rules as real numbers, with j
2replaced everywhere by −1.1
•Elimination of Trigonometry: Euler’s formula, z=rejθ=rcosθ+jrsinθ, for
the complex exponential provides a connection between trigonometric identitiesand simple algebraic operations on complex numbers.
•Representation by Vectors: A vector drawn from the origin to a point (x, y) in
a two-dimensional plane is equivalent to z=x+jy. The algebraic rules for z
are, in effect, the basic rules of vector operations. More important, however, is thevisualization gained from the vector diagrams.
1Mathematicians and physicists use the symbol ifor√−1; electrical engineers prefer to reserve the
symbol ifor current in electric circuits.
489
490 APPENDIX A COMPLEX NUMBERS
The ﬁrst two ideas concern the algebraic nature of z=x+jy, the third its role as
arepresenter of signals. Skill in algebraic manipulations is necessary, but the use of
complex numbers in representation is more important in the long run. Complex numbers
are used as a convenience in signal processing because when they stand for sinusoidalsignals they can simplify manipulations of the signals. Thus, a sinusoidal problem (suchas the solution to a differential equation) is converted into a complex number problemthat can be (1) solved by the simple rules of algebra and (2) visualized through vectorgeometry. The key to all this is the higher order thinking that permits abstraction of theproblem into the world of complex numbers. Ultimately, we are led to the notion of a“transform” such as the discrete Fourier transform or z-transform to reduce many other
sophisticated problems to algebra. Because complex numbers are so crucial to almosteverything we do in the study of signals and systems, a mastery of the concepts reviewedin this appendix is advised.
Once such insight is gained, it still is necessary to return occasionally to the lower level
reality of calculations. When you have to manipulate complex numbers, software suchas MATLAB or a calculator with built-in complex arithmetic functionality is a necessity.It is worthwhile to invest some time to learn how to use this feature on a calculator, or insoftware. However, it is also important to do some calculations by hand, so that you canunderstand and check what your calculator is doing.
Finally, it is too bad that complex numbers are called “complex.” Most students,
therefore, think of them as complicated. However, their elegant mathematical propertiesusually simplify mathematical expressions and calculations quite a bit.
A-1 Introduction
A complex number system is an extension of the real number system. Complex numbers
are necessary to solve equations such as
z2=−1 (A.1)
The symbol jis introduced to stand for√−1, so this equation (A.1) has the two solutions
z=±j. More generally, complex numbers are needed to solve for the two roots of a
quadratic equation
az2+bz+c=0
which, according to the quadratic formula, has the two solutions:
z=−b±√
b2−4ac
2a
Whenever the discriminant (b2−4ac)is negative, the solution must be expressed as a
complex number. For example, the roots of
z2+6z+25=0
A-2 NOTATION FOR COMPLEX NUMBERS 491
arez=−3±j4, because
√
b2−4ac
2a=√36−4(25)
2=√−64
2=±j4
A-2 Notation for Complex Numbers
Several different mathematical notations can be used to represent complex numbers. The
two basic types are polar form and rectangular form. Converting between them quicklyand easily is an important skill.
A-2.1 Rectangular Form
Inrectangular form, all of the following notations deﬁne the same complex number.
z=(x, y)
=x+jy
=/Rfractur {z}+j/Ifractur{z}
The ordered pair (x, y) can be interpreted as a point in the two-dimensional plane.2
A complex number can also be drawn as a vector whose tail is at the origin of the
complex plane and whose head is at the point (x, y), in which case xis the horizontal
coordinate of the vector and ythe vertical coordinate (see Fig. A-1).
Figure A-2 shows some numerical examples. The complex number z=2+j5i s
represented by the point (2,5), which lies in the ﬁrst quadrant of the two-dimensional
plane; likewise, z=4−j3 lies in the fourth quadrant at the location (4,−3). Since the
complex number notation z=x+jyrepresents the point (x, y) in the two-dimensional
plane, the number jrepresents (0,1), which is drawn as a vertical vector from the origin
up to(0,1), as in Fig. A-2. Thus multiplying a real number, such as 5, by jchanges it
from pointing along the horizontal axis to pointing vertically (i.e., j(5+j0)=0+j5).
Rectangular form is also referred to as Cartesian form. The horizontal coordinate
xis called the real part , and the vertical coordinate ytheimaginary part . The
0z = x + j y
r = Length
θ = Direction
TailHead
Real Axis/Ifractur{z}
/Rfractur{z}Imaginary Axis
Figure A-1 Complex number represented as
a vector from the origin to (x, y).
2This is also the notation used on some calculators when entering complex numbers.
492 APPENDIX A COMPLEX NUMBERS
j
Real AxisImaginary Axis/Ifractur{z}2 + j 5
4 − j 3 −3 − j 3−5 + j 0/Rfractur{z}
Figure A-2 Complex numbers plotted as vectors in the
two-dimensional “complex plane.” Each z=x+jyis
represented by a vector from the origin to the point
with coordinates (x, y) in the complex plane.
operators /Rfractur{z}and/Ifractur{z}are provided to extract the real and imaginary parts of
z=x+jy:
x=/Rfractur {z} (A.2a)
y=/Ifractur {z} (A.2b)
A-2.2 Polar Form
Inpolar form, the vector is deﬁned by its length (r)and its direction (θ)as in Fig. A-1.
Therefore, we use the following descriptive notation sometimes: r∠θ. Three examples
are shown in Fig. A-3, where the direction θis given in degrees. The angle is always
measured from the positive x-axis and may be either positive (counterclockwise) or
negative (clockwise). However, we generally specify the principal value of the angle so
that−180◦<θ≤180◦. This requires that integer multiples of 360◦be subtracted from
or added to the angle until the result is between −180◦and+180◦. Thus, the vector
3∠−80◦is the principal value of 3∠280◦.
A-2.3 Conversion: Rectangular and Polar
Both the polar and rectangular forms are commonly used to represent complex numbers.
The prevalence of the polar form, for sinusoidal signal representation, makes it necessary
to convert quickly and accurately between the two representations.
DEMO
ZdrillFrom Fig. A-4, we see that the xandycoordinates of the vector are given by
x=rcosθ (A.3a)
y=rsinθ (A.3b)
Therefore, a valid formula for zis
z=rcosθ+jrsinθ (A.4)
A-2 NOTATION FOR COMPLEX NUMBERS 493
Real AxisImaginary Axis/Ifractur{z}
/Rfractur{z}
3∠ − 80°3∠ 150°2∠ 45°
Figure A-3 Three complex numbers plotted in terms of
length (r)and direction (θ)of their vector representation.
The angle is always measured with respect to the positive
real axis; its units are usually radians, but are shown as
degrees in this case.
0
xy/Ifractur{z}
/Rfractur{z}r = Length
θ = Directionz = x + j y
Figure A-4 Basic layout for relating Cartesian
coordinates (x, y) to polar coordinates randθ.
EXAMPLE A-1 Polar to Rectangular
In Fig. A-3, the three complex numbers are
r∠θ Cartesian Form
2∠45◦z=√
2+j√
2
3∠150◦z=−3√
3
2+j3
2
3∠−80◦z=0.521−j2.954
The conversion from polar to rectangular was done via (A.4).
The conversion from (x, y) tor∠θis a bit trickier. From Fig. A-4, the formulas are
r=/radicalbig
x2+y2 (Length) (A.5a)
θ=arctan(y/x) (Direction) (A.5b)
494 APPENDIX A COMPLEX NUMBERS
The arctangent must give a four-quadrant answer, and the direction θis usually given in
radians rather than degrees.
EXERCISE A.1 At this point, the reader should convert to polar form the ﬁve complex numbers shown
in Fig. A-2. The answers, in a random order, are 1∠90◦,5∠−36.87◦,4.243∠ −135◦,
5.385∠68.2◦, and 5∠180◦.
In Section A-3, we will introduce two other polar notations:
z=rejθ
=|z|ejargz
where |z|=r=/radicalbig
x2+y2is called the magnitude of the vector and arg z=θis its
phase in radians (not degrees). This exponential notation, which relies on Euler’s formula,
has the advantage that when it is used in algebraic expressions, the standard laws of
exponents apply.
A-2.4 Difﬁculty in Second or Third Quadrant
The formula for the angle, θ=argz, is the arctan (y/x) as in (A.5b). It must be used with
care, especially when the real part is negative (see Fig. A-5). For example, the complexnumber z=−3+j2 would require that we evaluate arctan (−2/3)to get the angle; the
same calculation would be needed if z=3−j2. The arctangent of −2/3i s−0 .588 rad,
or about −33.7
◦, which is the correct angle for z=3−j2. However, for z=−3+j2, the
vector lies in the second quadrant and the angle must satisfy 90◦≤θ≤180◦. We get the
correct angle by adding 180◦. In this case, the correct angle is −33.7◦+180◦=146.3◦,
and if we prefer radians, the angle is π−0.588=2.55 rad. The general method for
getting the angle of zin polar form (in radians) is
θ=/braceleftBigg
arctan(y/x) ifx≥0
±π+arctan(y/x) ifx< 0(A.6)
Since πand−πare effectively the same direction, when x< 0 we should pick the
appropriate one to make the ﬁnal answer satisfy |θ|≤π .
0xy/Ifractur{z}
/Rfractur{z}θ = Directionr = Lengthz = x + j y
ϕFigure A-5 In the second quadrant, the interior
angleϕis easily calculated from xandy, but is
not the correct angle for the polar form, which
requires the exterior angle θwith respect to the
positive real axis.
A-3 EULER’S FORMULA 495
A-3 Euler’s Formula
The conversion from polar to rectangular form (A.3) suggests the following formula:
Euler’s Formula
ejθ=cosθ+jsinθ(A.7)
Equation (A.7) deﬁnes the complex exponential ejθ, which is equivalent to 1∠θ (i.e., a
vector of length 1 at angle θ). A proof of Euler’s formula based on power series is outlined
in Problem P-2.4 of Chapter 2.
The amazing property of (A.7) is that the laws of exponents apply to ejθ. Euler’s
formula (A.7) is so important that it must be instantly recalled; likewise, the inverse Euler
formulas (A.8) and (A.9) should also be committed to memory.
EXAMPLE A-2 Euler’s Formula
Here are some examples:
(90◦):1∠π/ 2 ejπ/2=cos(π/2 )+jsin(π/2)
=0+j1=j
(180◦):1∠πejπ=cos(π) +jsin(π)
=−1+j0=−1
(45◦):1∠π/ 4 ejπ/4=cos(π/4 )+jsin(π/4)
=√
2
2+j√
2
2
(60◦):1∠π/ 3 ejπ/3=cos(π/3) +jsin(π/3)
=1
2+j√
3
2
EXAMPLE A-3 Degrees to Radians
Referring back to Fig. A-3, the three complex numbers can be rewritten as follows:
2∠45◦converts to z=2ejπ/4
3∠150◦converts to z=3ej5π/6
3∠−80◦converts to z=3e−j4π/9=3e−j1.396
Numbers like −1.396 rad are difﬁcult to visualize, because we are more used to
thinking of angles in degrees. It may be helpful to express the angles used in the exponents
496 APPENDIX A COMPLEX NUMBERS
as a fraction of πrad (i.e., −1.396 =−(1.396/π)π =−0.444πrad). This is a good habit
to adopt, because it simpliﬁes the conversion between degrees and radians. If θis given
in radians, the conversion is
θ/parenleftbigg180
π/parenrightbigg
=direction in degrees
A-3.1 Inverse Euler Formulas
Euler’s formula (A.7) can be solved separately for the cosine and sine parts. The results
are called the inverse Euler relations
cosθ=ejθ+e−jθ
2(A.8)
sinθ=ejθ−e−jθ
2j(A.9)
Recalling that cos(−θ) =cosθand sin (−θ)=− sinθ, the proof of the sin θversion
(A.9) is as follows:
e−jθ=cos(−θ) +jsin(−θ)
=cosθ−jsinθ
e+jθ=cosθ+jsinθ
=⇒ejθ−e−jθ=2jsinθ
=⇒ sinθ=ejθ−e−jθ
2j
A-4 Algebraic Rules for Complex Numbers
The basic arithmetic operators for complex numbers follow the usual rules of algebra as
long as the symbol jis treated as a special token that satisﬁes j2=−1. In rectangular
form, all of these rules are relatively straightforward. The ﬁve fundamental rules are thefollowing:
Addition: z
1+z2=(x1+jy1)+(x2+jy2)
=(x1+x2)+j(y 1+y2)
Subtraction: z1−z2=(x1+jy1)−(x2+jy2)
=(x1−x2)+j(y 1−y2)
Multiplication: z1×z2=(x1+jy1)×(x2+jy2)
z1z2=x1x2+j2y1y2+jx1y2+jx2y1
=(x1x2−y1y2)+j(x 1y2+x2y1)
A-4 ALGEBRAIC RULES FOR COMPLEX NUMBERS 497
Division: z1÷z2=(x1+jy1)/(x 2+jy2)
z1
z2=z1z∗
2
z2z∗
2=z1z∗
2
|z2|2
=(x1+jy1)(x2−jy2)
x2
2+y2
2
=(x1x2+y1y2)+j(x 2y1−x1y2)
x2
2+y2
2
Conjugate: z∗
1=(x1+jy1)∗
=x1−jy1
Addition and subtraction are straightforward because we need only add or subtract the
real and imaginary parts. On the other hand, addition (or subtraction) in polar form cannot
be carried out directly on randθ; instead, an intermediate conversion to rectangular
form is required. In contrast, the operations of multiplication and division, which arerather messy in rectangular form, reduce to simple manipulations in polar form. Formultiplication, multiply the magnitudes and add the angles; for division, divide themagnitudes and subtract the angles. The conjugate in polar form requires only a changeof sign of the angle.
Multiplication: (z
1)(z2)=/parenleftbig
r1ejθ1/parenrightbig/parenleftbig
r2ejθ2/parenrightbig
=(r1r2)ej(θ1+θ2)
Division: z1÷z2=r1ejθ1
r2ejθ2
=r1
r2ej(θ1−θ2)
Conjugate: z∗
1=(r1ejθ1)∗
=r1e−jθ 1
EXERCISE A.2 The inverse or reciprocal of a complex number zis the number z−1such that
z−1z=1.
A common mistake with the inverse is to invert z=x+jyby taking the inverse of x
andyseparately. To show that this is wrong, take the speciﬁc case where z=4+j3
andw=1
4+j1
3. Show that wis not the inverse of z, because wz/negationslash=1. Determine
the correct inverse of z.
Polar form presents difﬁculties when adding (or subtracting) two complex numbers
and expressing the ﬁnal answer in polar form. An intermediate conversion to rectangularform must be done. The recipe for adding or subtracting complex numbers in polar form is:
498 APPENDIX A COMPLEX NUMBERS
1. Starting in polar form, we have
z3=z1±z2=r1ejθ1±r2ejθ2
2. Convert both z1andz2to Cartesian form:
z3=(r1cosθ1+jr1sinθ1)±(r2cosθ2+jr2sinθ2)
3. Perform the addition in Cartesian form:
z3=(r1cosθ1±r2cosθ2)+j( r 1sinθ1±r2sinθ2)
4. Identify the real and imaginary parts of z3:
x3=/Rfractur {z3}=r 1cosθ1±r2cosθ2
y3=/Ifractur {z3}=r 1sinθ1±r2sinθ2
5. Convert back to polar form using (A.5a) and (A.5b):
z3=x3+jy3⇐⇒ z3=r3ejθ3
If you have a calculator that converts between polar and rectangular form, learning how
to use it will save much hand calculation and also be more accurate. Most scientiﬁccalculators even have the capability to use both notations, so the conversion into and outof Cartesian form is transparent to the user.
EXAMPLE A-4 Adding Polar Forms
Here is a numerical example of adding two complex numbers given in polar form:
z3=7ej4π/7+5e−j5π/11
z3=(−1.558 +j6.824)+(0.712−j4.949)
z3=−0.846+j1.875
z3=2.057ej1.995=2.057ej0.635π=2.057∠114 .3◦
Remember: When the angle appears in the exponent, its units must be in radians.
A-4.1 Complex Number Exercises
To practice computations for complex numbers, try the following exercises.
A-4 ALGEBRAIC RULES FOR COMPLEX NUMBERS 499
EXERCISE A.3 Add and multiply the following, then plot the results in the complex plane:
z4=5ej4π/5+7e−j5π/7
z5=/parenleftbig
5ej4π/5/parenrightbig/parenleftbig
7e−j5π/7/parenrightbig
The answers are z4=−8.41−j2.534=8.783e−j0.907πandz5=35ej3π/35.
EXERCISE A.4 For the conjugate the simple rule is to change the sign of all the jterms. Work the
following:
(3−j4)∗=?
(j(1−j))∗=?
(ejπ/2)∗=?
More drill problems can be generated by using the MATLAB program zdrill , which
presents a GUI (graphical user interface) that asks questions for each of the complex
operations, and also plots the vectors that represent the solutions. The zdrill GUI has
both a novice and an advanced level. A screen shot of the GUI is shown in Fig. A-6. DEMO
zdrill
Figure A-6 The MATLAB
GUIzdrill for practicing
complex number
operations. Addition of thecomplex numbers z
1=1
andz2=ej0.25πis
illustrated with vectors inthe panel at the lower right.
The user’s guess of z=j
is the vertical vector in thatsame panel.
500 APPENDIX A COMPLEX NUMBERS
EXERCISE A.5 Prove that the following three identities are true:
/Rfractur{z}=(z +z∗)/2
/Ifractur{z}=(z −z∗)/(2j)
|z|2=zz∗
A-5 Geometric Views of Complex Operations
It is important to develop an ability to visualize complex number operations. This is done
by plotting the vectors that represent the numbers in the (x, y) plane, where x=/Rfractur {z}and
y=/Ifractur {z}. The key is to recall that, as shown in Fig. A-1, the complex number z=x+jy
is a vector whose tail is at the origin and whose head is at (x, y).
A-5.1 Geometric View of Addition
For complex addition, z3=z1+z2, both z1andz2are viewed as vectors with their tails
at the origin. The sum z3is the result of vector addition, and is constructed as follows
(see Fig. A-7):
1. Draw a copy of z1with its tail at the head of z2. Call this displaced vector ˆz1.
2. Draw the vector from the origin to the head of ˆz1. This vector is the sum z3.
This method of addition can be generalized to many vectors. Figure A-8 shows the
result of adding the four complex numbers
(1+j)+(−1+j)+(−1−j)+(1−j)
where the answer happens to be zero.
Real AxisImaginary Axis/Ifractur{z}
/Rfractur{z}Displaced
Version of z1z2 = 2 + j 5
z3 = 6 + j 2
z1 = 4 − j 3 Figure A-7 Graphical construction of
complex number addition z3=z1+z2.
A-5 GEOMETRIC VIEWS OF COMPLEX OPERATIONS 501
(a) (b)´1 ´2
´3 ´4´1Sum of 2
Sum of3
Sum of 4<f´g<f´g=f´g =f´g
Figure A-8 Result of adding the four vectors
{1+j,−1+j,−1−j,1−j}shown in (a) is
zero. The “head-to-tail” graphical method is
illustrated in (b). Note that (a) also shows thatz
1+z3=0 andz2+z4=0.
A-5.2 Geometric View of Subtraction
The visualization of subtraction requires that we interpret the operation as addition:
z3=z2−z1=z2+(−z 1)
Thus we must ﬂip z1to−z1(by adding πradians to its angle) and then add the result to
z2. This method is shown in Fig. A-9 and is equivalent to the visualization of addition, as
in Fig. A-7. There are two additional comments to be made about subtraction:
1. Since z2=z1+z3, a displaced version of the difference vector could be drawn
with its tail at the head of z1and its head at the head of z2.
2. The triangle with vertices at the three points 0, z1, andz2has sides equal to z1,z2,
andz2−z1.
EXERCISE A.6 Deﬁne a vector wto have its tail at z1and its head at z2. Prove that whas the same
length and direction as z2−z1.
Real AxisImaginary AxisDisplaced
Version of −z1/Ifractur{z}
z3 = 4 + j 5
z2 = 5 + j 2
z1 = 1 − j 3−z1
/Rfractur{z}
Figure A-9 Geometric view of subtraction.
The vector z1is ﬂipped to make (−z 1)and then
a displaced version is added to z2to obtain
z3=z2+(−z 1).
502 APPENDIX A COMPLEX NUMBERS
EXERCISE A.7 Prove the triangle inequality:
|z2−z1|≤|z1|+|z2|
Use either an algebraic method by squaring both sides, or a geometric argument based
on the intuitive idea that “the shortest distance between two points is a straight line.”
A-5.3 Geometric View of Multiplication
It is best to view multiplication in terms of polar form where we multiply the magnitudes,and add the angles. In order to draw the product vector z
3, we must decide whether or
not|z1|and/or |z2|are greater than 1. In Fig. A-10, it is assumed that only |z1|is larger
than 1.
A special case occurs when |z2|=1, because then there is no scaling of the vector
length, and the multiplication by z2=ejθ2becomes a rotation. Figure A-11 shows the
case where z2=j, which gives a rotation by π/2o r9 0◦, because j=ejπ/2.
A-5.4 Geometric View of Division
Division is very similar to the visualization of multiplication, except that we must nowsubtract the angles and divide the magnitudes (Fig. A-12).
z
3=z1
z2=r1
r2ej(θ1−θ2)
(a) (b)´1
´2´1
´2´3
12 3
<f´g <f´g=f´g =f´g
Figure A-10 (a) Two complex numbers to
be multiplied shown as vectors.
(b) Geometric view of complexmultiplication z
3=z1z2=(r1r2)ej(θ1+θ2).
Since|z2|<1, the length of z3is less than
the length of z1.
(a) (b)´1´2Dj
´1´3Dj´1
<f´g <f´g=f´g =f´g
Figure A-11 (a) Two complex numbers to
be multiplied shown as vectors. (b) Complexmultiplication becomes a rotation when|z
2|=1. The case where z2=jgives a
rotation by 90◦, and the length of z3equals
the length of z1.
A-5 GEOMETRIC VIEWS OF COMPLEX OPERATIONS 503
Real AxisImaginary Axis/Ifractur{z}
/Rfractur{z}z1
z2θ3θ1
θ2z3 = z1/z2
z4 = z2(2e−jπ/2)Figure A-12 Graphical visualization of
complex number division z3=z1/z2. Notice
that the angles subtract (i.e., θ3=θ1−θ2).
Since|z2|>1, the vector z3is shorter than z1.
EXERCISE A.8 Given two complex numbers z4andz2, as in Fig. A-12, where the angle between them
is 90◦and the magnitude of z4is twice that of z2. Evaluate z4/z2.
A-5.5 Geometric View of the Inverse, z−1
This is a special case of division where z1=1, so we simply negate the angle and take
the reciprocal of the magnitude.
z−1=1
z=1
re−jθ
Refer to Fig. A-13 for examples of the inverse.
A-5.6 Geometric View of the Conjugate, z∗
In this case, we negate the angle, which has the effect of ﬂipping the vector about the
horizontal axis. The length of the vector remains the same.
z∗=x−jy=re−jθ
Figure A-14 shows two examples of the geometric interpretation of complex conjugation.
EXERCISE A.9 Prove the following fact:
1
z∗=1
rejθ
Plot an example for z=1+j; also plot 1/z andz∗.
504 APPENDIX A COMPLEX NUMBERS
Real AxisImaginary Axis/Ifractur{z}
/Rfractur{z}z1
z3θ1
θ3θ2θ4z4 = 1/z3
z2 = 1/z1Figure A-13 Graphical construction of
complex number inverse 1/z . For the vectors
shown, |z1|>1 and|z3|<1. Since the angle is
negated when taking the inverse, θ2=−θ1and
θ4=−θ3.
Real AxisImaginary Axis/Ifractur{z}
/Rfractur{z}z1
y1
−y1−y3
y3
z3θ1
θ3θ2θ4
z2 = z1*z4 = z3*
Figure A-14 Graphical construction of the
complex conjugate z∗; only the imaginary part
changes sign. The vectors ﬂip about the real
axis:z1ﬂips down, and z3ﬂips up. Since the
angle is negated when doing the conjugate,θ
2=−θ1andθ4=−θ3; the magnitudes are
unchanged, |z2|=|z1|and|z4|=|z3|.
A-6 Powers and Roots
Integer powers of a complex number can be deﬁned in the following manner:
zN=/parenleftbig
rejθ/parenrightbigN=rNejNθ
In other words, the rules of exponents still apply, so the angle θis multiplied by Nand
the magnitude is raised to the Nthpower. Figure A-15 shows a sequence of these:
{z/lscript}={z0,z1,z2,z3,...}
A-6 POWERS AND ROOTS 505
/Ifractur{z}
/Rfractur{z}θθ
θ
θ
z10 z7z5z4z3z2
z1
z0 = 1
Figure A-15 Vectors representing a sequence of
powers z/lscriptfor/lscript=0,1,2,...,10. Since |z|=0.9<1,
the vectors spiral in toward the origin. The angular
change between successive powers is constant:θ=argz=π/6.
where the angle steps by a constant amount; in this case, exactly π/6 rad. The magnitude
ofzis less than one, so the successive powers spiral in toward the origin. If |z|>1, the
points would spiral outward; if |z|=1, all the powers zNwould lie on the unit circle (a
circle of radius 1). One famous identity is DeMoivre’s formula:
(cosθ+jsinθ)N=cosNθ+jsinNθ
The proof of this seemingly difﬁcult trigonometric identity is actually trivial if we invoke
Euler’s formula (A.7) for ejNθ.
EXERCISE A.10 LetzN−1,zN, andzN+1be three consecutive members of a sequence such as shown
in Fig. A-15. If z=0.98e−jπ/ 6andN=11, plot the three numbers.
A-6.1 Roots of Unity
In a surprising number of cases, the following equation must be solved:
zN=1 (A.10)
In this equation, Nis an integer. One solution is z=1, but there are many others, because
(A.10) is equivalent to ﬁnding all the roots of the Nth-degree polynomial zN−1, which
must have Nroots. It turns out that all the solutions are given by
z=ej2π/lscript/Nfor/lscript=0,1,2,...,N −1
which are called the Nthroots of unity. As shown in Fig. A-16, these Nsolutions are
complex numbers equally spaced around the unit circle. The angular spacing between
them is 2 π/N .
506 APPENDIX A COMPLEX NUMBERS
/Ifractur{z}
/Rfractur{z}θθ
θ
−θej0 = 1ej2π/Nej4π/N
ej2π(N−1)/ Nθ = 2π/N
Figure A-16 Graphical display of the Nthroots of
unity (N =12). These are the solutions of zN=1.
Notice that there are only Ndistinct roots.
A-6.1.1 Procedure for Finding Multiple Roots
Once we know that the solutions to (A.10) are the Nthroots of unity, we can describe
a structured approach to solving equations with multiple roots. In order to get a general
result, we consider a slightly more general situation
zN=c
where cis a complex constant, c=|c|ejϕ. The procedure involves the following six
steps:
1. Write zNasrNejNθ.
2. Write cas|c|ejϕej2π/lscript, where /lscriptis an integer. Note that when c=1, we would write
the number 1 as
1=ej2π/lscriptfor/lscript=0,±1,±2,...
3. Equate the two sides and solve for the magnitudes and angles separately.
rNejNθ=|c|ejϕej2π/lscript
4. The magnitude is the positive Nthroot of a positive number |c|:
r=|c|1/N
A-6 POWERS AND ROOTS 507
5. The angle contains the interesting information, because there are Ndifferent
solutions:
Nθ=ϕ+2π/lscript /lscript =0,1,...,N −1
=⇒ θ=ϕ+2π/lscript
N
θ=ϕ
N+2π/lscript
N
6. Thus, the Ndifferent solutions all have the same magnitude, but their angles are
equally spaced with a difference of 2 π/N between each adjacent pair.
EXAMPLE A-5 7th Roots of Unity
Solve z7=1, using the procedure above.
r7ej7θ=ej2π/lscript
=⇒r=1
=⇒ 7θ=2π/lscript
θ=2π
7/lscript/lscript =0,1,2,3,4,5,6
Therefore, these solutions are equally spaced around the unit circle, as shown in Fig.A-17.
In this case, the solutions are called the 7throots of unity.
/Ifractur{z}
/Rfractur{z}−θθ
ej0ej2π/7ej4π/7
ej6π/7
ej8π/7
ej10π/7ej12π/7 = e−j2π/7θ = 2π/7
θ = 2π/7
Figure A-17 Graphical display of the 7th roots of
unity. Notice that the sequence ej2π/lscript/7repeats
with a period equal to 7.
508 APPENDIX A COMPLEX NUMBERS
EXERCISE A.11 Solve the following equation:
z5=−1
Use the fact that −1=ejπ. Plot all the solutions as vectors. In this case, the resulting
values would be called the ﬁfth roots of minus one.
A-7 Summary and Links
This appendix has presented a concise review of complex numbers and their visualization
as vectors in the two-dimensional complex plane.Although this material should have been
seen previously by most students during high school algebra, our intense use of complexnotation demands much greater familiarity. The labs in Chapter 2 deal with various aspectsof complex numbers, and also introduce MATLAB. These labs also introduce some newMATLAB functions for plotting vectors from complex numbers (
zvect, zcat ) and
for changing between Cartesian and polar forms ( zprint ). The complex numbers via
MATLAB demo is a quick reference to these routines.LAB
Introduction to Complex
Exponentials
DEMO
Complex Numbers viaM
ATLABIn addition to the labs, we have written a MATLAB GUI that will generate
drill problems for each of the complex operations studied here: addition, subtraction,
multiplication, division, inverse, and conjugate. A screen shot of the zdrill GUI is
shown in Fig. A-6.
DEMO
zdrillA-8 Problems
The problems in this section provide a review of the major concepts of complex numbers
and complex exponentials. The MATLAB GUI zdrill on the Companion Website can
be used to generate additional problems for practice.
P-A.1 Convert the following to polar form:
(a)z=0+j2
(b)z=−3−j4(c)z=(−1, 1)
(d)z=(0,−1)
P-A.2 Convert the following to rectangular form:
(a)√
2ej(3π/4)
(b) 3e−j(π/ 2)(c) 1.6 ∠(π/6)
(d) 7∠(7π)
P-A.3 Evaluate the following by reducing the answer to rectangular form:
(a)j3
(b)j2n(nan integer)(c)ej(π+2πm)(man integer)
(d)j1/2(ﬁnd two answers)
A-8 PROBLEMS 509
P-A.4 Simplify the following complex-valued expressions into both Cartesian and polar
form:
(a)(√
2−j2)8
(b)(√
2−j2)−1
(c)(√
2−j2)1/2(d) 3ej2π/3−4e−jπ/ 6
(e)/Ifractur/braceleftbig
je−jπ/ 3/bracerightbig
P-A.5 Evaluate each expression and give the answer in both rectangular and polar form.
In all cases, assume that z1=−4+j3 andz2=1−j.
(a)z∗
1
(b)z2
2
(c)z1+z∗
2(d)jz2
(e)z−1
1=1/z 1
(f)z1/z2(g)ez2
(h)z1z∗
1
(i)z1z2
P-A.6 Simplify the following complex-valued sum:
z=ej9π/3+e−j5π/8+ej13π/ 8
Give the numerical answer for zin polar form. Draw a vector diagram for the three vectors
and their sum (z).
P-A.7 Simplify the following complex-valued expressions. Give your answers in polar
form. Reduce the answers to a simple numerical form.
(a) For z=−3+j4, evaluate 1/z .
(b) For z=−2+j2, evaluate z5.
(c) For z=−5+j13, evaluate |z|2.
(d) For z=−2+j5, evaluate /Rfractur{ze−jπ/ 2}
P-A.8 Solve the following equation for z:
z4=j
Be sure to ﬁnd all possible answers, and express your answer(s) in polar form.
P-A.9 Letz0=ej2π/N. Prove that zN−1
0=1/z 0.
P-A.10 Evaluate (−j)1/2and plot the result(s).
P-A.11 For each of the following complex numbers, simplify the number into the
standard polar form (i.e., z=rejθwithr≥0 and−π<θ≤ π):
z1=/parenleftbigg3+5j
8−2j/parenrightbigg∗
z2=−1
4jz3=jejπ/3
510 APPENDIX A COMPLEX NUMBERS
P-A.12 One of the special properties of the roots of unity is the following fact:
N−1/summationdisplay
k=0ej2πk/N=0
Determine the value of zwhenz=−N−2/summationdisplay
k=0ej2πk/N, andN=56. Express the answer in
polar form.
P-A.13 Find the realnumbers pandqsuch that the following equation is true:
p
200+jq=0.08e−jπ/ 3
P-A.14 Evaluate the following deﬁnite integral, and express the answer in polar form
as indicated:
1.5/integraldisplay
1ejπtdt=rejθ
APPENDIX
B
Programming
in MATLAB
MATLAB is used extensively in the laboratory exercises provided on the Companion
Website and listed in Appendix D. This appendix provides an overview of MATLAB and
some of its capabilities. We focus on programming issues since a wealth of information is
already available on syntax and basic commands.1MATLAB has an extensive online help
system, which can be used to answer any questions not addressed in this brief presentation.In fact, an ideal way to read this appendix would be to have MATLAB running so that
helpwin can be used whenever necessary, and the examples can be run and modiﬁed.
MATLAB (short for Matrix Laboratory) is an environment for numerical analysis and
computing. It originated as an interface to the collections of numerical routines from theLINPACK and EISPACK projects, and it is now a widely used product of The Mathworks,Inc. MATLAB has evolved into a powerful programming environment containing manybuilt-in functions for doing signal processing, linear algebra, and other mathematical
1One very useful reference is MATLAB Tutorials and Learning Resources at the Mathworks website:
http://www.mathworks.com/academia/student center/tutorials/launchpad.html.
511
512 APPENDIX B PROGRAMMING IN MATLAB
calculations. The language has also been extended by means of toolboxes containing
additional functions for MATLAB. For example, the Companion Website contains atoolbox of functions needed for the laboratory exercises and demo GUIs. The toolboxesare installed as separate directories within the MATLAB directory. Follow the instructionson the Companion Website to install the DSP First toolbox before doing the laboratory
exercises.
NOTE
DSP First Toolbox
Since MATLAB is extensible, users ﬁnd it convenient to write new functions whenever
the built-in functions fail to do a vital task. The programming necessary to create newfunctions and scripts is not too difﬁcult if the user has some experience with a high-levelcomputer language. This appendix gives a brief overview of MATLAB for the purposeof programming in the context of signal processing.
B-1 MATLAB Help
MATLAB provides an online help system accessible by using the helpwin command.
For example, to get information about the function filter , enter the following at the
command prompt:
>> helpwin filter
The command prompt is indicated by »in the command window. The helpwin command
opens a new window and displays help information. Help is also available for categories;for example,
helpwin punct summarizes punctuation as used in MATLAB’s syntax.
The help system can also show the full documentation of any function in the help window
via the command doc.
Users new to MATLAB should get started with the command intro , which covers the
basic concepts in the MATLAB language. There are many demonstration programs thatillustrate the various capabilities of MATLAB; these can be started with the command
demo. Finally, if you are searching for other tutorials, some are freely available on
the Web.
When unsure about a command, use helpwin .
B-2 Matrix Operations and Variables
The basic variable type in MATLAB is a matrix.2To declare a variable, simply assign it
a value at the MATLAB prompt. For example,
> >A=[ 126835 ;527770 ;437779 ]
A=
126835
527770437779
2Recent versions of MATLAB offer many other data types such as structures found in conventional
programming languages. This appendix will only discuss matrices which are two-dimensional arrays.
B-2 MATRIX OPERATIONS AND V ARIABLES 513
When the deﬁnition of a matrix involves a long formula or many entries, then a very
long MATLAB command can be broken onto two (or more) lines by placing an ellipsis
(...) at the end of the line to be continued. For example,
P=[1 ,2 ,4 ,6 ,8]+[p i ,4 ,exp(1), 0, -1]+. . .
[ cos(0.1*pi), sin(pi/3), tan(3), atan(2), sqrt(pi) ];
If an expression is followed by a semicolon ( ;), then the result is not echoed to the
command window. This is very useful when dealing with large matrices. Also note that ;
is used to separate rows in a matrix deﬁnition. Likewise, spaces or commas ( ,) are used
to separate column entries.
The dimensions of a matrix can always be extracted with the size operator:
>> Asize = size(A)
Asize =
36
Therefore, it becomes unnecessary to assign separate variables to track the number of rows
and number of columns. Two special types of matrix variables are worthy of mention:scalars andvectors. A scalar is a matrix with only one element; its size is 1 ×1. A
vector is a matrix that has only one row or one column. In the laboratory exercises on theCompanion Website, signals are often stored as vectors.
Individual elements of a matrix variable may be accessed by giving the row index
and the column index, for example:
>> A26 = A(2,6)
A26 =
0
Submatrices may be accessed in a similar manner by using the colon operator as explainedin Section B-2.1.
B-2.1 The Colon Operator
The colon operator (:) is useful for creating index arrays, creating vectors of evenly
spaced values, and accessing submatrices. Use helpwin colon for a detailed
description of its capabilities.
The colon notation is based on the idea that an index range can be generated by
giving a start, a skip, and then the end. Therefore, a regularly spaced vector of numbersis obtained by means of
iii = start:skip:end
Without the skip parameter, the default increment is 1. MATLAB exploits this sort of
counting when doing matrix indexing. For example, a 2 ×3 submatrix can be extracted
from the larger matrix AwithA(2:3,3:5) , and the result would be a matrix of all sevens
forAdeﬁned above. This is a generalization of A(2,6) which is the scalar element located
at the 2ndrow and 6thcolumn of A. The colon can also serve as a wild card—that is, A(2,:)
514 APPENDIX B PROGRAMMING IN MATLAB
is a row vector consisting of the entire 2ndrow of the matrix A. Indexing backward ﬂips
a vector. For example, A(3,6:-1:1) reverses the order of the elements in a length-6
vector, which is the third row of A. A more convenient form is A(3,end:-1:1) in which
end determines the last index in the vector. Finally, it is sometimes necessary to work
with a list of all the values in a matrix, so A(:) g i v e sa n1 8 ×1 column vector that is
merely the columns of Aconcatenated together into one long column. This is an example
ofreshaping the matrix. More general reshaping of the matrix Acan be accomplished
with thereshape(A,M,N) function. For example, the 3 ×6 matrixAcan be reshaped
into a 9 ×2 matrix with: Anew = reshape(A,9,2) .
B-2.2 Matrix and Array Operations
The default operations in MATLAB are matrix operations. Thus A*B means matrix
multiplication, which is deﬁned and reviewed next.
B-2.2.1 A Review of Matrix Multiplication
The operation of matrix multiplication ABcan be carried out only if the two matrices
have compatible dimensions (i.e., the number of columns in Amust equal the number of
rows in B). For example, a 5 ×8 matrix can multiply an 8 ×3 matrix to give a result AB
that is 5 ×3. In general, if Aism×n, then Bmust be n×p, and the product ABwould
bem×p. Usually matrix multiplication is notcommutative (i.e., AB/negationslash=BA). Ifp/negationslash=m,
then the product BAcannot be deﬁned, but even when BAis deﬁned, we ﬁnd that the
commutative property applies only in special cases.
Each element in the product matrix is calculated with an inner product. To generate the
ﬁrst element in the product matrix, C=AB, simply take the ﬁrst row of Aand multiply
element-by-element with the ﬁrst column of B, and then sum. For example, if
A=⎡
⎣a1,1a1,2
a2,1a2,2
a3,1a3,2⎤⎦ andB=/bracketleftbiggb
1,1b1,2
b2,1b2,2/bracketrightbigg
then the ﬁrst element of C=ABis
c1,1=a1,1b1,1+a1,2b2,1
which is, in fact, the inner product between the ﬁrst row of Aand the ﬁrst column of B.
Likewise, c2,1is found by taking the inner product between the second row of Aand the
ﬁrstcolumn of B, and so on for c1,2andc2,2. The ﬁnal result would be
C=⎡⎣c
1,1c1,2
c2,1c2,2
c3,1c3,2⎤⎦=⎡⎣a
1,1b1,1+a1,2b2,1a1,1b1,2+a1,2b2,2
a2,1b1,1+a2,2b2,1a2,1b1,2+a2,2b2,2
a3,1b1,1+a3,2b2,1a3,1b1,2+a3,2b2,2⎤⎦ (B.1)
B-2 MATRIX OPERATIONS AND V ARIABLES 515
Some special cases of matrix multiplication are the outer product and the inner
product .I nt h eouter product , a column vector multiplies a row vector to give a matrix.
If we let one of the vectors be all 1s, then we can get a repeating result:
⎡
⎣a1
a2
a3⎤⎦/bracketleftbig
1111/bracketrightbig
=⎡⎣a
1a1a1a1
a2a2a2a2
a3a3a3a3⎤⎦
With all 1s in the row vector, we end up repeating the column vector four times.
For the inner product , a row vector multiplies a column vector, so the result is a
scalar. If we let one of the vectors be all 1s, then we will sum the elements in the other
vector:
/bracketleftbig
a
1a2a3a4/bracketrightbig⎡
⎢⎢⎣1
111⎤
⎥⎥⎦=a
1+a2+a3+a4
If the vectors are identical, then the inner product sums the squares of all elements in the
vector:
/bracketleftbig
a1a2a3/bracketrightbig⎡
⎣a1
a2
a3⎤⎦=a
2
1+a2
2+a2
3
All these operations are done in MATLAB with A*B as long as AandBhave compatible
dimensions.
B-2.2.2 Pointwise Array Operations
If we want to do a pointwise multiplication between two arrays, some confusion can arise.
In the pointwise case, we want to multiply the matrices together element-by-element, sothey must have exactly the same size in both dimensions. For example, two 5 ×8 matrices
can be multiplied pointwise, although we cannot do matrix multiplication between two5×8 matrices. To obtain pointwise multiplication in MATLAB, we use the “point-star”
operator
A.*B . For example, if AandBare both 3 ×2, then
D=A.*B =⎡
⎣d1,1d1,2
d2,1d2,2
d3,1d3,2⎤⎦=⎡⎣a
1,1b1,1a1,2b1,2
a2,1b2,1a2,2b2,2
a3,1b3,1a3,2b3,2⎤⎦
where d
i,j=ai,jbi,j. We will refer to this type of multiplication as array multiplication.
Notice that array multiplication is commutative because we would get the same result if
we computed D = B.*A .
A general rule in MATLAB is that when “point” is used with another arithmetic
operator, it modiﬁes that operator’s usual matrix deﬁnition to a pointwise one. Thus wehave
./for pointwise division and .ˆfor pointwise exponentiation. For example,
xx = (0.9) .ˆ (0:49)
generates a vector whose values are equal to (0.9)n, forn=0,1,2,...,49.
516 APPENDIX B PROGRAMMING IN MATLAB
0 0.5 1 1.5 2 2.5 3 3.5 401
(b)0 0.5 1 1.5 2 2.5 3 3.5 401
(a)1
1Example of plot( tt, xx )
Example of stem( tt, xx )Figure B-1 Two MATLAB plotting formats,
(a)plot and (b)stem . In both cases, the
horizontal axis is deﬁned by the vector
tt=0:0.4:4 , and the signal values are
xx = sin(0.7*pi*tt + 0.1*pi) .
B-3 Plots and Graphics
MATLAB is capable of producing two-dimensional x-yplots and three-dimensional
plots, displaying images, as well as creating and playing movies. The two most common
plotting functions that are used in signal processing applications are plot andstem .
The calling syntax for both plot andstem takes two vectors, one for the x-axis points,
and the other for the y-axis.3The statement plot(x,y) produces a connected plot with
straight lines between the data points
{(x(1),y(1)),(x(2),y(2)),...,(x(N),y(N)) }
as shown in Fig. B-1(a). The same call with stem(x,y) produces the “lollipop”
presentation of the same data in Fig. B-1(b). MATLAB has numerous plotting options thatcan be studied by using
helpwin stem ,helpwin plotedit , or by using helpwin
zoom ,helpwin plot3d ,o rhelpwin spectrogram .
B-3.1 Figure Windows
Whenever MATLAB makes a plot, it displays the graphics in a ﬁgure window. You can
have multiple ﬁgure windows open, but only one of them is considered the active window.
Any plot command executed in the command window will direct its graphical output to
the active window. The command figure(n) will pop up a new ﬁgure window that can
be referred to by the number n, or makes it active if it already exists. Control over many
of the window attributes (size, location, color, etc.) is also possible with the figure
command, which does initialization of the plot window.
3If only one argument is given, plot(y) uses the single argument as the y-axis, and uses [1:length(y)]
for the x-axis. These functions also have optional arguments. To learn about them type helpwin plot .
B-4 PROGRAMMING CONSTRUCTS 517
B-3.2 Multiple Plots
Multiple plots per window can be done with the subplot function. This function
does not do the actual plotting; it merely divides the ﬁgure window into tiles. To
set up a 3 ×2 tiling of the ﬁgure window, use subplot(3,2,tile number) .F o r
example,subplot(3,2,3) will direct the next plot to the third tile, which is in the
second row, left side. The graphs in Fig. B-1 were done with subplot(2,1,1) and
subplot(2,1,2) . The program that creates Fig. B-1 is given in Section B-5.
B-3.3 Printing and Saving Graphics
Plots and graphics may be printed to a printer or saved to a ﬁle using the print command.
To send the current ﬁgure window to the default printer, simply type print without
arguments. To save the plot to a ﬁle, a device format and ﬁlename must be speciﬁed. Thedevice format speciﬁes which language will be used to store the graphics commands. Forexample, a useful format for including the ﬁle in a document is to make a PNG (PortableNetwork Graphics) image, which can be produced as follows:
>> print -dpng myplot
Postscript and PDF formats are also convenient when the plots are kept for printing ata later time. For a complete list of available ﬁle formats, supported printers, and otheroptions, see
helpwin print .
B-4 Programming Constructs
MATLAB supports the paradigm of “functional programming” in which it is possibleto nest a sequence of function calls. Consider the following equation, which can beimplemented with one line of MATLAB code.
L/summationdisplay
n=1log(|xn|)
Here is the MATLAB equivalent:
sum( log( abs(x) ) )
wherexis a vector containing the elements xn. This example illustrates MATLAB in its
most efﬁcient form, where individual functions are combined to get the output. Writingefﬁcient MATLAB code requires a programming style that generates small functions thatare vectorized. Loops should be avoided. The primary way to avoid loops is to use callsto built-in functions and toolbox functions as much as possible.
518 APPENDIX B PROGRAMMING IN MATLAB
B-4.1 MATLAB Built-In Functions
Many MATLAB functions operate on arrays just as easily as they operate on scalars. For
example, if xis an array, then cos(x) returns an array of the same size as xcontaining
the cosine of each element of x.
cos(x) =⎡
⎢⎢⎢⎣cos(x
1,1)cos(x 1,2)···cos(x 1,n)
cos(x 2,1)cos(x 2,2)···cos(x 2,n)
............
cos(x
m,1)cos(x m,2)···cos(x m,n)⎤
⎥⎥⎥⎦
Notice that no loop is needed, even thoughcos(x) does apply the cosine function to
every array element. Most transcendental functions follow this pointwise rule. In some
cases, it is crucial to make this distinction, such as the matrix exponential (expm) versus
the pointwise exponential (exp) :
exp(A) =⎡
⎢⎢⎢⎣exp(a
1,1)exp(a1,2)···exp(a1,n)
exp(a2,1)exp(a2,2)···exp(a2,n)
............
exp(a
m,1)exp(am,2)···exp(am,n)⎤
⎥⎥⎥⎦
B-4.2 Program Flow
Program ﬂow can be controlled in MATLAB using ifstatements, while loops, and for
loops. There is also a switch statement for cases. These are similar to any high-level
language. Descriptions and examples for each of these program constructs can be viewed
by using the MATLAB helpwin command.
B-5 MATLAB Scripts
Any expression that can be entered at the MATLAB prompt can also be stored in a text
ﬁle and executed as a script. The text ﬁle is usually created with the built-in MATLABeditor. The ﬁle extension must be
.m, and the script is executed in MATLAB simply by
typing the ﬁlename (without the extension). These programs are usually called M-ﬁles.
Here is an example:
tt = 0:0.4:4;
xx = sin(0.7*pi*tt);subplot(2,1,1)plot( tt, xx )title(’Example of plot( tt, xx)’)subplot(2,1,2)stem( tt, xx )title(’Example of stem( tt, xx)’)
B-6 WRITING A MATLAB FUNCTION 519
If these commands are saved in a ﬁle named plotstem.m that is on MATLAB’s path or
in the current directory,4then typing plotstem at the command prompt will run the ﬁle,
and all eight commands will be executed as if they had been typed in at the command
prompt. The result is the two plots that were shown in Fig. B-1.
B-6 Writing a MATLAB Function
You can write your own functions and add them to the MATLAB environment. These
functions are another type of M-ﬁle, and are created as an ASCII ﬁle with a text editor.
The ﬁrst word in the M-ﬁle must be the keyword function to tell MATLAB that this
ﬁle is to be treated as a function with arguments. On the same line as the word function
is the calling template that speciﬁes the input and output arguments of the function.
The ﬁlename for the M-ﬁle must end in .m, and the ﬁlename will become the name
of the new command for MATLAB. For example, consider the following ﬁle, whichextracts the last Lelements from a vector:
function y = foo( x, L )
%FOO get last L points of x% usage:% y = foo( x, L )
% where:%% x = input vector% L = number of points to get% y = output vectorN = length(x);i f (L>N)
error(’input vector too short’)
endy = x((N-L+1):N);
If this ﬁle is called foo.m , the operation may be invoked from the MATLAB command
line by typing
aa = foo( (1:2:37), 7 );
The output will be the last seven elements of the vector (1:2:37) , i.e.,
a a=[2 52 72 93 13 33 53 7]
B-6.1 Creating a Clip Function
Most functions can be written according to a standard format. Consider a clip function
M-ﬁle that takes two input arguments (a signal vector and a scalar threshold) and returns
an output signal vector. You can use an editor to create an ASCII ﬁle clipper.m that
contains the statements in Fig. B-2. We can break down the M-ﬁle clipper.m into
four elements:
4Typehelpwin path to learn how to set the MATLAB path and current directory.
520 APPENDIX B PROGRAMMING IN MATLAB
1function y = clipper( x, Limit )
2%CLIPPER saturate mag of x[n] at Limit
3% when |x[n]| > Limit, make |x[n]| = Limit
4% keeping the sign of x[n]
5% usage: y = clipper( x, Limit )
6%
7% x = input signal vector
8% Limit = limiting value
9% y = output vector after clipping
10
11[nrows, ncols] = size(x);
1213
if( ncols ˜= 1 & nrows ˜= 1 ) %-- NEITHER
14 error(’CLIPPER: input not a vector’)
15end
16Lx = max([nrows ncols]);
17
18forn=1:Lx %-- Loop over entire vector
19 if(abs(x(n)) > Limit )
20 x(n) = sign(x(n)) *Limit; %-- saturate
21 end
22end
23
24y=x ; %-- copy to output vectorLines 2–9 are comments
that start with percent (%)
Determine matrix dimensions of x
Check that x is a rowor a column vector
Length of x, which will
also be the length of y
Since x is local, we can change
it value without affecting the
value in the calling workspace
y is the name of the vector passed back to the callerFigure B-2 Illustration of a MATLAB
function called clipper.m .
Deﬁnition of Input–Output: Function M-ﬁles must have the word function as
the very ﬁrst item in the ﬁle. The information that follows function on the
same line is a declaration of how the function is to be called and what arguments
are to be passed. The name of the function should match the name of the M-ﬁle; ifthere is a conﬂict, it is the name of the M-ﬁle stored on the disk that is known tothe MATLAB command environment.
Input arguments are listed inside the parentheses following the function name.
Each input is a matrix. The output argument (also a matrix) is on the left side of theequals sign. Multiple output arguments are also possible if square brackets surroundthe list of output arguments. For example, notice how the
size(x) function in
line 11 returns the number of rows and number of columns into separate outputvariables. Finally, observe that there is no explicit command for returning theoutputs; instead, MATLAB returns whatever value is contained in the output matrix
ywhen the function completes. For clipper the last line of the function assigns
the clipped vector to y, so that the clipped vector is returned. MATLAB does
have a command called return , but it just exits the function, it does not take an
argument.
The essential difference between the function M-ﬁle and the script M-ﬁle is dummy
variables versus permanent variables. MATLAB uses call by value so that the
B-6 WRITING A MATLAB FUNCTION 521
function makes local copies of its arguments. These local variables disappear after
the function completes. For example, the following statement creates a clippedvector
wwclipped from the input vector ww.
>> wwclipped = clipper(ww, 0.9999);
The arrays wwandwwclipped are permanent variables in the MATLAB
workspace. The temporary arrays created inside clipper (i.e.,y,nrows ,ncols ,
Lx, andn) exist only while clipper runs; then they are deleted. Furthermore,
these variable names are local to clipper.m , so the name xmay also be used
in the workspace as a permanent name. These ideas should be familiar to anyoneexperienced with a high-level computer language.
Self-Documentation: A line beginning with the
%sign is a comment line. The ﬁrst
group of these in a function is used by MATLAB’s help facility to make M-ﬁlesautomatically self-documenting. That is, you can now type
helpwin clipper
and the comment lines immediately following the function declaration line in your
M-ﬁle will appear on the screen as help information. The format suggested in
clipper.m (lines 2–9) follows the convention of giving the function name, its
calling sequence, a brief explanation, and then the deﬁnitions of the input andoutput arguments.
Size and Error Checking: The function should determine the size of each vector or
matrix that it will operate on. This information does not have to be passed as aseparate input argument, but can be extracted with the
size function (line 11). In
the case of the clipper function, we want to restrict the function to operating on
vectors, but we would like to permit either a row (1×L)or a column (L×1).
Therefore, one of the variables nrows orncols must be equal to 1; if not, we
terminate the function with the bail-out function error , which prints a message
to the command line and quits the function (lines 13–15).
Actual Function Operations: In the case of the clipper function, the actual clipping
is done by a forloop (lines 18–22), which examines each element of the xvector
for its value compared to the threshold Limit . In the case of negative numbers, the
clipped value must be set to -Limit , hence the multiplication by sign(x(n)) .
This assumes that Limit is passed in as a positive number, a fact that might also
be tested in the error-checking phase.
This particular implementation of clipper is very inefﬁcient owing to the for
loop. In Section B-7.1, we will show how to vectorize this program for speed.
B-6.2 Debugging a MATLAB M-ﬁle
Since MATLAB is an interactive environment, debugging can be done by examiningvariables in the workspace. MATLAB contains a symbolic debugger that is integratedwith the text editor. Since different functions can use the same variable names, it is
522 APPENDIX B PROGRAMMING IN MATLAB
important to keep track of the local context when setting breakpoints and examining
variables. Several useful debugging commands are listed here, others can be found with
helpwin debug . Within the visual editor, these commands are accessed with menu
items or function keys.5
dbstop is used to set a breakpoint in an M-ﬁle. It can also be used to give you a
prompt when an error occurs by typing dbstop if error before executing the
M-ﬁle. This allows you to examine variables within functions and also the callingworkspace (by typing
dbup ).
dbstep incrementally steps through your M-ﬁle, returning you to a prompt after each
line is executed.
dbcont causes normal program execution to resume, or, if there was an error, returns
you to the MATLAB command prompt.
dbquit quits the debug mode and returns you to the MATLAB command prompt.
keyboard can be inserted into the M-ﬁle to cause program execution to pause, giving
you a MATLAB prompt of the form K>to indicate that it is not the command-line
prompt. When stopped at a breakpoint, the values of variables can be displayed byusing the
K>prompt, or by hovering over the variable name in the visual editor.
B-7 Programming Tips
This section presents a few programming tips that should improve the speed of your
MATLAB programs. For more ideas and tips, examine some of the function M-ﬁles inthe toolboxes of MATLAB by using the
edit command. For example,
edit angle
edit convedit trapz
Copying the style of other (good) programmers is always an efﬁcient way to improve
your own knowledge of a computer language. In the following hints, we discuss someof the most important points involved in writing good MATLAB code. These commentswill become increasingly useful as you develop more experience in MATLAB.
B-7.1 Avoiding Loops
Since MATLAB is an interpreted language, certain common programming habits areintrinsically inefﬁcient. The primary one is the use of
for loops to perform simple
operations over an entire matrix or vector. Whenever possible, you should try to ﬁnd a
vector function (or the nested composition of a few vector functions) that will accomplish
5More details about the MATLAB debugger can be found at:
http://www.mathworks.com/help/matlab/matlab_prog/debugging-process-and-features.html
B-7 PROGRAMMING TIPS 523
1function ss = mysum1(xx)
2%
3[Nrows,Ncols] = size(xx);
4s s=0 ;
5forjj=1:Nrows
6 forkk=1:Ncols
7ss = ss + xx(jj,kk);
8 end
9end
(a)Determine matrix
dimensions of xx
Two for loops needed to index all rows
and columns when xx is a matrix
1function ss = mysum2(xx)
2%
3ss = sum( sum(xx) );
(b)Sum down the columnsto produce a vector
Sum elements of the vectorto produce the scalar sum ss
1
function ss = mysum3(xx)
2%
3ss = sum(xx(:));
(c)Colon turns the matrix xx
into a column vector
Sum elements of the vectorto produce the scalar sum ssFigure B-3 Three ways to add all of the elements of
a matrix. (a) Index all the array elements
individually and add them one at a time, (b) call thesum function twice which will be the fastest method,and (c) call the sum function once which is theeasiest code to understand and almost as fast as (b).
the desired result, rather than writing a loop. For example, if the operation is summing
all the elements in a matrix, the difference between calling sum and writing a loop can
be dramatic; the loop is slow owing to the interpreted nature of MATLAB6. Consider
the three methods for summing all the elements in a matrix, shown in Fig. B-3. The ﬁrstmethod in Fig. B-3(a) is the MATLAB equivalent of conventional programming. Thelast two methods rely on the built-in function
sum, which has different characteristics
depending on whether its argument is a matrix or a vector (called “operator overloading”).
When acting on a matrix as in Fig. B-3(b), the inner sumreturns a row vector containing
the column sums; when acting on a row (or column) vector as in Fig. B-3(c), the sum isa scalar. To get the third method, the matrix
xxis converted to a column vector with the
colon operator. Then one call to sum will sufﬁce.
B-7.2 Repeating Rows or Columns
Often it is necessary to form a matrix from a vector by replicating the vector in the rowsor columns of the matrix.
7If the matrix is to have all the same values, then functions
such asones(M,N) andzeros(M,N) can be used. But to replicate a column vector x
6In recent versions of MATLAB, optimizations have been introduced which improve the running time
of for loops signiﬁcantly.
7The function repmat is a very general operator for repeating matrices and vectors in MATLAB.
524 APPENDIX B PROGRAMMING IN MATLAB
to create a matrix that has identical columns, a loop can be avoided by using the outer-
product matrix multiply operation discussed in Section B-2.2. The following MATLABcode fragment will do the job for 11 columns:
x = (12:-2:0).’;
% dot prime indicates transpose; prime alone is conjugate transposeX=x*ones(1,11)
Ifxis a length Lcolumn vector, then the matrix Xformed by the outer product is L×11.
In this example, L=7. Note that MATLAB is case-sensitive, so the variables xandXare
different. We have used capital Xto indicate a matrix, as would be done in mathematics.
B-7.3 Vectorizing Logical Operations
It is also possible to vectorize programs that contain if,else conditionals. The
clipper function (Fig. B-2) offers an excellent opportunity to demonstrate this type
of vectorization. The forloop in that function contains a logical test and might not seem
like a candidate for vector operations. However, the relational and logical operators in
MATLAB, such as greater than, apply to matrices. For example, a greater than test appliedt oa3×3 matrix returns a 3 ×3 matrix of ones and zeros.
>> %-- create a test matrix
> >X=[1 2- 3 ;3- 2 1 ;4 0 - 1 ]
X=[1 2- 3
3- 2 14 0 -1 ]
>> %-- check the greater than condition to create a mask> >M a s k=X>0
Mask = [ 1 1 0
101100 ]
>> %-- pointwise multiply by mask>> Y = Mask .* X
Y=[1 2 0
301400 ]
The zeros mark where the condition was false; the ones denote where the condition was
true. Thus, when we do the pointwise multiply of Xby the masking matrix Mask we
get a result that has all negative elements set to zero. Note that these last two statements
process the entire matrix without ever using a for loop.
Since the saturation done in clipper.m requires that we change the large values in
X, we can implement the entire for loop with three array multiplications. This leads to
a vectorized saturation operator that works for matrices as well as vectors:
B-7 PROGRAMMING TIPS 525
y = Limit*(X > Limit) - Limit*(X < -Limit) + X.*(abs(X) <= Limit);
Three different masking matrices are needed to represent the three cases of positive
saturation, negative saturation, and no action. The additions correspond to the logical OR
of these cases. The number of arithmetic operations needed to carry out this statement is3Nmultiplications and 2 Nadditions, where Nis the total number of elements in
X. This is
actually more work than the loop in clipper.m if we counted only arithmetic operations.
However, the cost of code interpretation is high. This vectorized statement is interpretedonly once, whereas the three statements inside the
for loop must be reinterpreted N
times. If the two implementations are timed with etime , the vectorized version will be
faster for long vectors.
B-7.4 Creating an Impulse
Another simple example of use of logical operators is given by the following trick for
creating an impulse signal vector:
nn = [-10:25];
impulse = (nn==0);
This result may be plotted with stem(nn, impulse) . In a sense, this code fragment
is perfect because it captures the essence of the mathematical formula that deﬁnes the
impulse as existing only when n=0.
δ[n]=/braceleftBigg
1n=0
0n/negationslash=0
B-7.5 The Find Function
An alternative to masking is to use the find function. This is not necessarily more
efﬁcient; it just gives a different approach. The find function will determine the list of
indices in a vector where a condition is true. For example, find( y > Limit ) will
return the list of indices where the vector yis greater than the Limit value.8Thus we
can do saturation as follows:
y=x ;
yAbove = find(y > Limit);y( yAbove ) = Limit;yBelow = find(y < -Limit);y( yBelow ) = -Limit;
8When applied to matrix, the statement find( y > Limit ) treatsyas the vector y(:) , so the example
code works for matrices as well as vectors.
526 APPENDIX B PROGRAMMING IN MATLAB
B-7.6 Seek to Vectorize
The dictum to “avoid forloops” is not always easy to obey, because it means the algorithm
must be cast in a vector form. If matrix-vector notation is incorporated into MATLAB
programs, the resulting code will run much faster. Thus, a reasonable goal is the following:
Eliminate all for loops.
Even loops with logical tests can be vectorized if masks are created for all possible
conditions. The MATLAB function profile measures various statistics about the
execution time of a program which provides useful information for modifying the codeto make it run faster.
B-7.7 Programming Style
If there were a proverb to summarize good programming style, it would probably readsomething like
May your functions be short
and your variable names long.
–Anon
This is certainly true for MATLAB. Each function should have a single purpose. This
will lead to short, simple modules that can be linked together by functional compositionto produce more complex operations. Avoid the temptation to build super functions withmany options and a plethora of outputs.
MATLAB supports long variable names, so you can take advantage of this feature
to give variables descriptive names. In this way, the number of comments needed todocument the code can be drastically reduced. Comments should be limited to
helpwin
information and the documentation of tricks used in the code.
APPENDIX
C
Fourier Series
In this appendix, we describe the mathematical theory of Fourier series. This will extend
the presentation in Chapter 3 which stated the main result that any periodic signal can be
synthesized with a sum of harmonically related sinusoids, even when the synthesis sum
needs an inﬁnite number of terms.1We use speciﬁc examples of pulse waves, triangular
waves, and rectiﬁed sinusoids to show how the Fourier series representation is obtained
and how each signal’s spectrum is deﬁned by the Fourier series. Finally, we focus ongeneral properties of the Fourier series which not only extend the understanding of thefrequency domain, but also make the job of signal analysis easier in practice.
As stated in Chapter 3, the two aspects of the Fourier theory are analysis and synthesis.
Starting from x(t)and calculating {a
k}is called Fourier analysis.As we will show, Fourier
analysis of a continuous-time periodic signal is achieved by evaluating the followingintegral:
Fourier Analysis Integral
ak=1
T0T0/integraldisplay
0x(t)e−jω 0ktdt(C.1)
1There are some exceptions, but none of these would ever arise in the practice of engineering when
processing actual signals.
527
528 APPENDIX C FOURIER SERIES
where ω0=2π/T 0=2πF 0is the fundamental radian frequency2andT0=1/F 0is the
fundamental period of the periodic signal x(t)=x(t+T0)for all t.
The reverse process of starting from {ak}and generating a periodic signal identical
to the signal x(t) in (C.1) is called Fourier synthesis. It is achieved with the following
general formula for synthesis of periodic signals:
Fourier Synthesis Summation
x(t)=∞/summationdisplay
k=−∞akejω0kt (C.2)
When taken together, equations (C.1) and (C.2) comprise the Fourier series representation
of the periodic signal x(t). When the signal x(t) is real, the complex amplitudes are
conjugate-symmetric with respect to the index k(i.e.,a−k=a∗
k), and the synthesis formula
becomes a sum of real sinusoids of the form
x(t)=A0+∞/summationdisplay
k=1Akcos(ω 0kt+ϕk) (C.3)
where A0=a0, and the amplitude and phase of the kthterm come from the polar form,
ak=1
2Akejϕk. In other words, the condition a−k=a∗
kis sufﬁcient for the synthesized
waveform to be a realfunction of time.
C-1 Fourier Series Derivation
In Chapter 3, we gave several demonstrations that a sum of complex exponentials as in
(C.2) can represent a wide range of interesting periodic signals, such as vowel-like signals,and we carried out the details of evaluating a Fourier integral for the periodic full-waverectiﬁed sine (FWRS) wave. However, we did not explain why the Fourier integral in(C.1) ﬁnds the spectrum for any periodic signal. In this section, we show how to derivethe coefﬁcients for the harmonic sum in (C.2)—that is, we show how to go from the timewaveform x(t) to the Fourier coefﬁcients a
kby using the Fourier series integral of (C.1)
to perform Fourier analysis. This Fourier integral requires that we have a mathematicalformula that deﬁnes x(t) over one period. Several examples will be presented later to
illustrate this point. On the other hand, if x(t) is known only as a digital recording, then
numerical methods such as those discussed in Chapter 8 will be applicable.
C-1.1 Fourier Integral Derivation
The derivation of the Fourier series integral formula (C.1) relies on a simple property of
the complex exponential signal—the integral of a complex exponential over any numberof complete periods is zero. In equation form,
2The fundamental frequency in hertz is F0, so that we can use fk=kF0to refer to the kthharmonic
frequency. As a result, f1=F0andf0=0.
C-1 FOURIER SERIES DERIV ATION 529
T0/integraldisplay
0ej(2π/T 0)ktdt=0 (k/negationslash=0) (C.4)
where kis anonzero integer. The integrand in (C.4) is a complex exponential whose
frequency is (2π/T 0)k, so its period is T0/kand the integral is taken over kperiods. After
substituting ω0for 2π/T 0, here is the integration:
T0/integraldisplay
0ejω0ktdt=ejω0kt
jω0k/vextendsingle/vextendsingle/vextendsingle/vextendsingleT0
0=ej(ω 0T0)k−1
jω0k=0 (k/negationslash=0)
The numerator is zero because ω0T0=2πandej2πk=1 for any integer k.
A key ingredient in the inﬁnite series representation (C.2) is the form of the complex
exponentials, all of which must repeat with the same period as the period of the signal
x(t), which is T0. If we deﬁne vk(t)to be the complex exponential having frequency ω0k,
then
vk(t)=ejω0kt(C.5)
Even though the minimum duration period of vk(t)would be T0/k, the following shows
thatvk(t)repeats also with a period of T0:
vk(t+T0)=ejω0k(t+T0)=ejω0ktej(ω 0T0)k
=ejω0kt *1
ej2πk=ejω0kt=vk(t)
where again we have used ej2πk=1 for any integer k(positive or negative).
Next we can generalize the zero-integral property (C.4) of the complex exponential
to involve two signals:
Orthogonality Property
T0/integraldisplay
0vk(t)v∗
/lscript(t) dt =/braceleftBigg
0i f k/negationslash=/lscript
T0ifk=/lscript(C.6)
where the * superscript in v∗
/lscript(t)denotes the complex conjugate. Proving the orthogonality
property is straightforward. We begin with
T0/integraldisplay
0vk(t)v∗
/lscript(t) dt =T0/integraldisplay
0ejω0kte−jω 0/lscripttdt=T0/integraldisplay
0ejω0(k−/lscript)tdt
530 APPENDIX C FOURIER SERIES
There are two cases to consider for the last integral: when k=/lscriptthe exponent becomes
zero, so the integral is
T0/integraldisplay
0ejω0(k−/lscript)tdt=T0/integraldisplay
0ej0tdt=T0/integraldisplay
01dt=T0
Otherwise, when k/negationslash=/lscriptthe exponent is nonzero and we can invoke the zero-integral
property in (C.4) to get
T0/integraldisplay
0ejω0(k−/lscript)tdt=T0/integraldisplay
0ejω0mtdt=0
where m=k−/lscript/negationslash=0.
The orthogonality property of complex exponentials (C.6) simpliﬁes the rest of the
Fourier series derivation. If we assume that the synthesis summation (C.2) is a valid
representation of x(t), then
x(t)=∞/summationdisplay
k=−∞akejω0kt(C.7)
and we can multiply both sides of (C.7) by the complex exponential v∗
/lscript(t)and integrate
over the period T0.
T0/integraldisplay
0x(t)e−jω 0/lscripttdt=T0/integraldisplay
0/parenleftBigg∞/summationdisplay
k=−∞akejω0kt/parenrightBigg
e−jω 0/lscripttdt (C.8a)
=∞/summationdisplay
k=−∞ak⎛
⎝T0/integraldisplay
0ejω0(k−/lscript)tdt⎞⎠
/bracehtipupleft
/bracehtipdownright/bracehtipdownleft /bracehtipupright
nonzero only when k=/lscript=a/lscriptT0 (C.8b)
Notice that we are able to isolate one of the complex amplitudes (a/lscript)in (C.8b) by applying
the orthogonality property (C.6). The ﬁnal analysis formula is obtained by dividing the
left-hand side of (C.8a) and right-hand side of (C.8b) by T0, giving an equation for a/lscript.
Since /lscriptis an arbitrarily chosen index, we can replace /lscriptwithkto obtain the Fourier
analysis integral previously asserted in (C.1)
A delicate step in the derivation occurs when going from (C.8a) to (C.8b) where
the order of the inﬁnite summation and the integration is interchanged. The validity ofthis manipulation depends on convergence properties of the inﬁnite sum. If the sumis ﬁnite, there is no problem because the integral of a sum is the sum of the integralsof the individual terms in the sum. However, if the sum is inﬁnite, as in the generaltheory of Fourier series, then special care must be taken. A sufﬁcient condition can be
C-2 EXAMPLES OF FOURIER ANALYSIS 531
stated: If x(t) is a smooth function that is bounded and has only a ﬁnite number of
discontinuities and zero crossings within one period, then the interchange is permissible
and the Fourier coefﬁcients are obtained by evaluating the Fourier integral as we haveasserted.
The fact that every periodic signal, even a discontinuous wave, can be represented as
the sum of an inﬁnite number of sinusoids was one of the amazing claims in Fourier’sfamous thesis of 1807. Many years passed before mathematicians were able to developa rigorous convergence proof based on mean-square convergence to support Fourier’sclaim. In this appendix, we will give more examples of Fourier series representations ofperiodic signals and discuss some of the important aspects of the mathematical theoryunderlying these representations.
EXERCISE C.1 Show that since x(t)=x(t+T0), the range of integration for (C.1) can be any
convenient interval of length T0. For example, break the integral into two integrals
over[−T 0/2,0]and[0,T0/2]and then use a change of dummy variable of integration
on the one over [−T 0/2,0]prior to combining back into the form (C.1) to show that
ak=1
T0T0/2/integraldisplay
−T0/2x(t)e−jω 0ktdt (C.9)
EXERCISE C.2 Use (C.9) to show that if x(t) is real and even, x(−t)=x(t), then the Fourier series
coefﬁcients are real and a−k=ak.
Hint: Use Euler’s relation to write e−jω 0kt=cos(ω 0kt)−jsin(ω0kt)in (C.9) and
use the facts that cos(·) is an even function and sin (·)is an odd function. Also, the
product of two even functions is even, and the product of an even function times anodd function is odd.
C-2 Examples of Fourier Analysis
We can represent any periodic signal by using a sum of complex exponential signals, if
we constrain the frequencies to be harmonics as in (C.2). Wave shapes that do not look
at all sinusoidal, such as pulse waves, triangular waves, and rectiﬁed sinusoids have aFourier representation as a sum of complex exponentials, but with an inﬁnite number ofterms. In this section, the general formulas for their Fourier coefﬁcients a
kare derived
and shown to be relatively compact.
There are four concepts to keep in mind: (1) the analysis integral that extracts complex
amplitudes {ak}from the signal x(t), (2) the spectrum plot of akversus f, which is (3)
the frequency-domain representation of the signal x(t) as an inﬁnite sum of harmonic
sinusoids (complex exponentials), and (4) approximate synthesis ofx(t) with a ﬁnite
532 APPENDIX C FOURIER SERIES
number of sinusoids by truncating the inﬁnite representation. These essential features of
Fourier analysis and synthesis are depicted in Fig. C-1. We start with the signal deﬁnedin the time domain by a mathematical function x(t) that is known to be periodic with
period T
0. In order to determine the Fourier series coefﬁcients, we need to know x(t)over
one period as a function that can be used in the Fourier analysis integral. If the Fourierintegral can be evaluated to give a formula for the coefﬁcients a
k, then, as depicted in
the upper part of Fig. C-1, we have all the information required to plot the spectrumof the periodic signal x(t) (i.e., we have obtained the frequency-domain representation
of the signal).
One very important point about the spectrum is illustrated in Fig. C-1: All periodic
signals with fundamental period T
0have a spectrum that looks similar to the one in
Fig. C-1. The only difference is the values of the coefﬁcients ak. Thus, whenever we have
a spectrum that consists of harmonics, we know immediately that it is the spectrum of aperiodic signal.
In Fig. C-1, we illustrate the four Fourier concepts enumerated above beginning
with a full-wave rectiﬁed sine (FWRS) wave plotted at the bottom left of the ﬁgure. Itsspectrum is depicted schematically at the top of the ﬁgure. The details of the Fourieranalysis for the FWRS signal were presented in Section 3-5.2, but we might ask at thispoint, why do we need to determine the Fourier series since it would be very easy towrite an equation that would deﬁne x(t) over one period? In fact, we must write such an
equation in order to begin the Fourier analysis calculation. The short answer is that the
0  f (Hz)
1
01
0Fourier Analysis
Extract Sinusoids
akD1
T0T0Z
0x.t/e/NULj2 /EM. k F0/tdtFourier Synthesis
Approximate the Signal
xN.t /DNX
kD/NULNakej2 /EM. k F0/tSpectrum Plot
.ak;k F0/versus f
F0D1
T0HzT0= Period N= Number of Coefﬁcients
fakgakD2
/EM.1/NUL4k2/
fkF0gxN.t /
xN.t / x.t/x.t/
t tT0T0 2T02T0 /NULT0/NULT0a1
a2 a3 a4 a5 a6 a7a/NUL1
a/NUL2a/NUL3 a/NUL4 a/NUL5 a/NUL6 a/NUL7a0
F0 /NULF0 3F0 /NUL3F0 5F0 /NUL5F0 7F0 /NUL7F0 2F0 4F0 6F0
Figure C-1 Major components of Fourier analysis and synthesis showing the relationship between the original periodic
signal x(t), its spectrum, and the synthesized signal xN(t)that approximates the original.
C-2 EXAMPLES OF FOURIER ANALYSIS 533
frequency-domain representation of the signal as a sum of complex exponentials gives
us different information that is not evident from either the equation deﬁning one periodor the plot of the waveform shown in Fig. C-1.
This brings to the fore an important point about the concept of Fourier synthesis. In
general, the Fourier synthesis formula requires inﬁnite limits as in (C.2), and we think ofsynthesis from the spectrum as a mathematical representation of the periodic signal x(t).
From this point of view, it is sufﬁcient to know that the Fourier series for a signal exists,and we then use it to develop an understanding of the signal based on the spectrum andits properties, rather than the details of the time waveform.
LAB
Synthesis of Sinusoidal
SignalsFigure C-1 has a fourth component illustrated in the lower right-hand part of the ﬁgure.
This part of the diagram suggests synthesizing a signal from the spectrum representation
of the signal. In particular, an approximate signal can be synthesized according to the
ﬁnite Fourier synthesis summation formula3
Finite Fourier Synthesis
xN(t)=N/summationdisplay
k=−Nakejω0kt (C.10)
DEMO
Fourier Series
Finite SynthesisWhen we regard the Fourier synthesis equation as a computational formula as in
(C.10), we sum a (necessarily) ﬁnite number of the complex exponential terms evaluated
for a range of values of t. We might want to do this simply to verify that the Fourier series
does indeed sum up to a function that closely approximates the original function deﬁnitionused to compute the coefﬁcients a
k. We could also study the rate of convergence as we
increase Ntoward inﬁnity. From a more practical point of view, we may want to explore
the effect of limited bandwidth on the detailed nature of the signal. This is suggested inFig. C-1 by the shaded region superimposed on the spectrum. In the lower right corner ofthe ﬁgure, we see the waveform that results when all frequencies above 4 F
0are eliminated
from the original input signal. Thus, the resulting x4(t)might be thought of as the output
of a ﬁltering or absorption process that removes the high-frequency signal componentsthat are present in the original signal. Figure C-1 shows the relationship between Fourier
analysis and Fourier synthesis using representative plots for the FWRS wave case wherethe ﬁnite synthesis result with N=4 (in the lower right corner) is an approximation to
the original FWRS wave shown (in the lower left corner).
We shall now illustrate the various aspects of Fig. C-1 by considering several
commonly used periodic signals. These examples will show that inﬁnite limits are oftenrequired to represent signals that occur in practical applications.
3If you have access to MATLAB, it is straightforward to write a Fourier Synthesis Program that
implements (C.10). This MATLAB programming exercise is described in more detail in the lab projects
devoted to music synthesis available on the Companion Website.
534 APPENDIX C FOURIER SERIES
C-2.1 The Pulse Wave
A simple, but very common, example is the periodic pulse wave, which is deﬁned for one
period by
x(t)=/braceleftBigg
1 for 0 ≤|t|<τ / 2
0 for τ/2≤|t|≤T 0/2(C.11)
Figure C-2 shows a plot of this signal with the basic period being inﬁnitely repeated with
period T0. It is called a pulse wave because it switches between one for τseconds (the pulse
width) and zero for the remainder of the period. Pulse signals are to be found throughoutevery digital hardware device, where one and zero signify on(or true), and off(or
false), respectively. In many applications where pulse waves occur, τmay be much
less than the period T
0, which in turn may be very small (implying a high fundamental
frequency). When τ=T0/2, the pulse signal is commonly called a square wave because
it is onfor exactly half (50%) of its period. Often the terminology is extended to “50%
duty cycle square wave.”
To obtain the Fourier series representation of the pulse wave, we must derive a formula
for the complex amplitudes akby using the Fourier analysis integral (C.1). First note
thatx(t) is most conveniently deﬁned over the interval −T 0/2≤t≤T0/2 rather than
0≤t≤T0. Thus, it is easiest to use the form of the Fourier analysis integral (C.9)
of Exercise C.1. After substituting x(t) deﬁned in (C.11) into the integral (C.9), we
immediately recognize that the integral must be broken into three integrals to handle allthe cases in the deﬁnition of x(t), that is,
a
k=1
T0−τ/2/integraldisplay
−T0/2(0)e−jω 0ktdt+1
T0τ/2/integraldisplay
−τ/2(1)e−jω 0ktdt+1
T0T0/2/integraldisplay
τ/2(0)e−jω 0ktdt (C.12)
but the ﬁrst and third integrals drop out because the signal x(t) is zero for τ/2≤
|t|≤T 0/2. Thus, we need only evaluate and simplify the integral from −τ/2t oτ/2a s
follows:
ak=/parenleftbigg1
T0/parenrightbigge−jω 0kt
−jω 0k/vextendsingle/vextendsingle/vextendsingle/vextendsingleτ/2
−τ/2
=/parenleftbigg1
T0/parenrightbigge−j(2π/T 0)k(τ/2 )−e−j(2π/T 0)k(−τ/ 2)
−(j2π/T 0)k=sin(πkτ/T 0)
πk(C.13)
1
0x.t/
t T0 2T0T0
22T0 2T0T0
22Figure C-2 Plot of a pulse wave signal with
fundamental frequency F0=1/T 0and pulse width τ.
C-2 EXAMPLES OF FOURIER ANALYSIS 535
The formula in (C.13) is a valid expression for the Fourier coefﬁcients of the pulse
wave for all kexcept k=0, where the formula gives an indeterminate form (0/0). Thus,
we must determine the DC component directly by computing the average of x(t) over
one period. In order to do this, we return to (C.12) and set k=0 before doing the integral,
and we obtain
a0=1
T0τ/2/integraldisplay
−τ/2(1)e−j0tdt=1
T0τ/2/integraldisplay
−τ/2(1)dt
=1
T0/parenleftBigτ
2−/parenleftBig
−τ
2/parenrightBig/parenrightBig
=τ
T0
If we put this result together with (C.13), we obtain
ak=⎧
⎪⎨
⎪⎩sin(πkτ/T 0)
πkk=±1,±2,±3,...
τ/T 0 k=0(C.14)
Note that as deﬁned in (C.11), the pulse wave is an even function of t. Therefore, as noted
in Exercise C.2, the Fourier series coefﬁcients akare real and they are an even function
ofk(i.e.,a−k=ak).
EXAMPLE C-1 Square Wave
Thesquare wave is the special case of the pulse wave, where τ=T0/2. In this case, the
formula for the Fourier coefﬁcients akbecomes relatively simple: all the even-indexed
coefﬁcients (except for a0) become zero.
ak=sin(πk(T 0/2)/T 0)
πk=sin(πk/2 )
πk
⇒a0=1
2,a±1=1
π,a±2=0,a±3=−1
3π,a±4=0,a±5=1
5π,...
EXERCISE C.3 Show that the Fourier series synthesis summation for the pulse wave can be written
as
x(t)=a0+∞/summationdisplay
k=12akcos(ω 0kt)
where the akcoefﬁcients are given by (C.14).
536 APPENDIX C FOURIER SERIES
C-2.1.1 Spectrum of a Pulse Wave
Figure C-3 shows the spectrum for three cases of the pulse wave whose Fourier coefﬁcients
are given by (C.14). For added clarity, the envelope of the Fourier coefﬁcients,
a(f)=sin(πf τ)
πf T 0(C.15)
is plotted with a thin line as if a(f) is a continuous function of frequency. However, the
Fourier series coefﬁcients of the pulse wave are the values of a(f) at discrete frequencies
kF0(i.e.,ak=a(kF 0)).As shown in the plots of Fig. C-3, the envelope a(f) in (C.15) has
a “main lobe” centered at f=0, where the function is relatively large compared to the
“sidelobes” that surround the main lobe. The main lobe occupies the frequency intervalbetween the lowest frequency zeros as in Fig. C-3, which occur when πf τ=±π,o r
equivalently f=±1/τ. When τis equal to T
0divided by an integer as in the examples
of Fig. C-3, the envelope of the Fourier coefﬁcients has zeros at frequencies such that kF0
is an integer multiple of 1/τ . For example, in Fig. C-3(a) where τ=T0/2, the Fourier
coefﬁcients are zero when kF0is an integer multiple of 1/τ =2/T0=2F0. Likewise,
whenτ=T0/4 the coefﬁcients are zero for integer multiples of 4 F0, and so on.
The three examples in Fig. C-3 show that the magnitude of these akcoefﬁcients
drops off as 1/k , so they eventually become small as kincreases. Even so, as deﬁned in
Section 3-2.5, the bandwidth of any pulse wave signal is inﬁnite because akin (C.14)
can be nonzero for large indices as kranges over all the integers from −∞ to+∞.I n
0
(a)
0
(b)
0
(c)fff
akakak
1
2
1
4
1
162F0 –2F 0
4F04F0
–4F 0–4F 0
8F0 –8F 0/FSDT0=2
/FSDT0=4
/FSDT0=16Figure C-3 Spectrum of a pulse wave for
different pulse widths (holding T0ﬁxed).
(a)τ=T0/2 (square wave case) where the
mainlobe extends from −2F0to+2F0=1/τ.
(b)τ=T0/4 where the mainlobe extends from
−4F0to+4F0=1/τ. (c)τ=T0/16 where the
mainlobe extends from −16F 0to+16F 0=1/τ
and no sidelobes are visible. Only the range from
k=−9t o+9 is shown, but the akcoefﬁcients
range over −∞<k<∞.
C-2 EXAMPLES OF FOURIER ANALYSIS 537
Fig. C-3, we see that as the pulse width τbecomes smaller, the spectrum spreads out
to higher frequencies (i.e., the relative size of higher frequency coefﬁcients becomes
larger). If we make the pulse width even narrower, the DC value decreases while thehigher frequency coefﬁcients become larger relative to the low frequency coefﬁcients.In the limit of very narrow pulses, all the coefﬁcients are equal but they have very smallamplitude. This is illustrated in Fig. C-3(c) where the ﬁrst zero coefﬁcient would occurat 16F
0, which is outside of the limits of the frequency scale shown.
C-2.1.2 Finite Synthesis of a Pulse Wave
Strictly speaking, the bandwidth of the pulse wave is inﬁnite, but in a practical situationthe signal might be transmitted through a communication channel or modiﬁed by a systemthat would remove frequencies above a certain limit, thereby reducing the bandwidth to aﬁnite value. For example, suppose that the signal bandwidth is reduced to 5F
0so that all
the frequencies above 5F 0have zero amplitude. The spectrum plots of Fig. C-3 show that
for the case τ=T0/2, the omitted coefﬁcients would have relatively small amplitudes.
On the other hand, in the case τ=T0/16, the discarded coefﬁcients (above 5F 0) are about
the same size as the low frequency coefﬁcients. The effect of this sort of truncation onthe time-domain signal is seen in Fig. C-4, which shows plots of
x
N(t)=N/summationdisplay
k=−Nakejω0kt
forN=5 and akin (C.14). Instead of showing the effect of increasing N, Fig. C-4
shows the effect of shortening the pulse duration when the bandwidth is restricted to 5F 0.
For the widest pulse (Fig. C-4(a) with τ=T0/2), ﬁve harmonics of the fundamental are
sufﬁcient to produce a noticeably “ﬂat” region where the pulse is “on.” However, thetime waveform in Fig. C-4(c) shows that the bandlimited signal for τ=T
0/16 does not
even reach the full pulse height. In all cases, we see oscillations during the on and offregions, and the sharp corners of the pulse are rounded off. Both of these features aredue to the ﬁnite bandwidth of 5F
0Hz. In digital electronics, the oscillations are called
“overshoot” and “undershoot,” and the time to switch from off to on is called the “risetime.” By increasing the bandwidth (increasing N), we can reduce the rise time, but the
maximum overshoot will remain at about 0.09 for a unit amplitude pulse wave.
4DEMO
Fourier Series
Finite Synthesis
In Fig. C-4(b), the pulse duration is shorter so that the pulse is rounded off; and in
the case of τ=T0/16 in Fig. C-4(c), the original pulse shape is hard to discern. Indeed,
in this case the bandlimited signal is broader than the ideal pulse and it fails to reach
the desired pulse height. Again, increasing the bandwidth will lead to a signal that morefaithfully reproduces the pulse signal—the rise time will be shorter but the oscillationswill still be present. In general, we can conclude from these examples that very narrow,rapidly repeating pulses require very wide bandwidth for accurate reproduction.
4This overshoot is called the Gibbs phenomenon, and will be discussed in more detail in Section C-4.2.
538 APPENDIX C FOURIER SERIES
001
Time t (s)001001
1
2
1
2
1
2x5.t/
x5.t/
x5.t/(a) Pulse Width: /FSDT0=2
(b) Pulse Width: /FSDT0=4
(c) Pulse Width: /FSDT0=16/NULT0
/NULT0
/NULT0T0
T0
T02T0
2T0
2T0DC Level
DC Level
DC LevelFigure C-4 Finite Fourier synthesis (N=5)
for different pulse widths. (a) τ=T0/2 (square
wave case); DC level = 1/2. (b) τ=T0/4, DC
l e v e l=1 /4. (c) τ=T0/16, DC level = 1/16.
EXERCISE C.4 Describe how the waveform x5(t)would look in the case of the pulse wave when
τ=T0/8. If you have difﬁculty, you can synthesize x5(t)using (C.14) with this value
ofτ.
EXERCISE C.5 Use MATLAB to see how the plots of Fig. C-4 would look if Nin the ﬁnite Fourier
synthesis (C.10) was 21.
C-2.2 Triangular Wave
Another case that is also relatively simple to analyze is the triangular wave shown in
Fig. C-5. The mathematical formula for the triangular wave consists of two segments.
To set up the Fourier analysis integral, we choose the period from −T 0/2t o+T 0/2. The
deﬁnition of the waveform over that period requires two line segments:
x(t)=/braceleftBigg
−2t/T 0for−T 0/2≤t<0
2t/T 0 for 0≤t<T 0/2(C.16)
The ﬁrst line segment has a slope of −2/T0, the second, +2/T0. Unlike the pulse wave,
the triangular wave is a continuous signal.
Now we invoke the Fourier integral (C.1) to derive a formula for the {ak}coefﬁcients of
the triangular wave. We might suspect from our earlier experience that the DC coefﬁcient
C-2 EXAMPLES OF FOURIER ANALYSIS 539
1
0x.t/
t T0 2T01
2T0T01
2T0 Figure C-5 Triangular wave with period T0s.
has to be found separately, so we address that case ﬁrst. Using the Fourier analysis integral
(C.1) and setting k=0, we obtain
a0=1
T0T0/integraldisplay
0x(t)dt
If we recognize that the integral over one period is, in fact, the area under the trianglefrom 0 to T
0in Fig. C-5, we get
a0=1
T0(area) =1
T0/parenleftbiggT0
2/parenrightbigg
=1
2(C.17)
For the general case where k/negationslash=0, we must break the Fourier series analysis integral into
two sections because the signal deﬁnition consists of two formulas:
ak=1
T00/integraldisplay
−T0/2(−2t/T 0)e−jω 0ktdt+1
T0T0/2/integraldisplay
0(2t/T 0)e−jω 0ktdt (C.18)
The integrals are identical except for a minus sign and the limits of integration. However,
integration by parts, or an integral table, or an on-line computer algebra system such as
Wolfram|Alphac/circlecopyrtwould be needed to carry out the actual integrals. After integration by
parts and some tedious algebraic steps, the integral for akcan be written as
ak=e−jkπ−1
π2k2(C.19)
Since e−jkπ=(−1)k, the numerator in (C.19) equals either 0 or −2, and we can write
the following cases for ak:
ak=⎧
⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩−2
π2k2k=±1,±3,±5,...
0 k=±2,±4,±6,...
1
2k=0(C.20)
Note that in this case the coefﬁcients are purely real and a−k=ak. This is true because
the signal is real and also an even function of t. Also observe that, as in the case of the
square wave, we cannot evaluate (C.19) for k=0 to obtain the DC coefﬁcient.
540 APPENDIX C FOURIER SERIES
0 50 150 250 350 450  f/NUL2
/EM2
/NUL2
4/EM2/NUL2
9/EM2/NUL2
16/EM2/NUL2
25/EM21
2
Figure C-6 One-sided spectrum of a triangular
wave up to and including the 9thharmonic. The
even harmonics at f=100,200, 300, and
400 Hz are zero. For negative frequencies,
conjugate symmetry a−k=a∗
kholds.
EXERCISE C.6 Use integration by parts to show that
/integraldisplay
te−jω 0ktdt=e−jω 0kt/parenleftbiggjω0kt+1
ω2
0k2/parenrightbigg
Then, starting from (C.18), derive the formula (C.20) for the Fourier series coefﬁcients
of the triangular wave.
C-2.2.1 Spectrum of a Triangular Wave
A plot of the spectrum5for the triangular wave is shown in Fig. C-6 for F0=50 Hz.
The complex amplitudes given in (C.20) fall off very rapidly, and only the odd-index
harmonics are present for k>0. From the spectrum in Fig. C-6 it is easy to write down
a formula for the Fourier series representation of the triangular wave which is a time-
domain signal. For each odd index k, there are two spectrum lines, one at f=50kand
the other at f=−50k, which can be combined.
−2
k2π2ej2π(50k)t+−2
k2π2e−j2π(50k)t=−4
k2π2cos(2π(50k)t) (C.21)
The set of odd indices can be generated via k=2/lscript−1a s/lscript =1,2,..., so we can write
x(t)=1
2+∞/summationdisplay
/lscript=1−4
(2/lscript−1)2π2cos(2π(50)(2/lscript−1)t)
DEMO
Fourier Series
Finite SynthesisC-2.2.2 Finite Synthesis of a Triangular Wave
The ideal triangular wave in Fig. C-5 is a continuous signal, unlike the square wave which
is discontinuous. Therefore, it is easier to approximate the triangular wave with a ﬁnite
Fourier synthesis sum (C.10). Two cases are shown in Fig. C-7, for N=3 and 9. The
fundamental frequency is equal to F0=50 Hz. In the N=9 case, the approximation is
nearly indistinguishable from the true triangularly shaped waveform but there is slightrounding at the top and bottom of the waveform. Adding harmonics for N> 9 will
5The plot of Fig. C-6 shows only the positive-frequency half of the spectrum plot. This is a simpler, yet
sufﬁcient, way to plot the spectrum of a real signal since the negative-frequency part can be constructed if
needed by using the conjugate symmetry of the coefﬁcients (i.e., a−k=a∗
k).
C-2 EXAMPLES OF FOURIER ANALYSIS 541
0 0.01 0.02 0.03 0.04 0.0501
Time t (s)0 0.01 0.02 0.03 0.04 0.0501(a) Sum of DC, 1stand3rdHarmonics
(b) Sum of DC, 1st,3rd,5th,7th, and 9thHarmonics1
2
1
2x3.t/
x9.t/DC Level
DC LevelFigure C-7 Summing harmonic components
for a 50 Hz triangular wave via ﬁnite Fourier
synthesis (C.10). (a) N=3. (b) Up to and
including the 9thharmonic (i.e., N=9). The
constant DC level of 1/2 is indicated.
improve the synthesis near those points. Even the N=3 case is a reasonably good
approximation, despite using only DC and two sinusoidal terms. We can see the reason
for this by examining the plot of the spectrum in Fig. C-6, which shows that the high-frequency components decrease in size very quickly for k>3. This implies that the
triangular wave can be transmitted more accurately through a bandlimiting system thancan a pulse wave of the same fundamental frequency.
C-2.3 Half-Wave Rectiﬁed Sine
A rectiﬁed sine wave is easy to produce from a pure sinusoid using a simple electronic
circuit. As discussed in Chapter 3, Section 3-5.2, the full wave rectiﬁed sine (FWRS)ﬁnds application in AC-to-DC power converters. A related case is the half-wave rectiﬁedsine (HWRS) signal shown in Fig. C-8 (i.e., the negative lobes of a sine wave have beenclipped off). In electronics it is easy to do such clipping with a diode. The mathematicalformula for the HWRS consists of two cases when deﬁned over one period, 0 ≤t≤T
0:
x(t)=/braceleftBigg
sin((2π/T 0)t) for 0≤t<T 0/2
0 forT0/2≤t<T 0(C.22)
The HWRS is a continuous signal, but its ﬁrst derivative is discontinuous, because the
slope changes abruptly at t=0,±T 0/2,±T 0,..., as shown in Fig. C-8.
1
0x.t/
t T0 2T01
2T0T01
2T0Figure C-8 Periodic half-wave rectiﬁed sine
signal.
542 APPENDIX C FOURIER SERIES
When x(t) from (C.22) is used in the Fourier series analysis integral with
ω0=(2π/T 0), we must break the integral into two sections because the signal deﬁnition
consists of two pieces:
ak=1
T0T0/2/integraldisplay
0sin(ω0t)e−jω 0ktdt+
 *0
1
T0T0/integraldisplay
T0/2(0)e−j(2πT0)ktdt (C.23)
As in the FWRS case, we can use the inverse Euler relation for sine to write the remaining
integral as the sum of two integrals
ak=1
2jT0T0/2/integraldisplay
0ejω0(1−k)tdt+−1
2jT0T0/2/integraldisplay
0e−jω 0(1+k)tdt (C.24)
In (C.24) the special cases of k=±1 must be handled separately by substituting k=±1
before the integration is carried out. For example, when k=1, we get
a1=1
2jT0T0/2/integraldisplay
01dt+
 *0
−1
2jT0T0/2/integraldisplay
0e−jω 0(2)tdt=1
4j=−j1
4(C.25)
The second integral is zero because the period of the complex exponential e−jω 0(2)t
isT0/2 and (C.4) applies.
After integrating the complex exponentials in (C.24) and simplifying numerous
complex-valued expressions, the ﬁnal result for akcan be written as
ak=⎧
⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩1
π(1−k2)forkeven
∓j1
4fork=±1
0 for k=±3,±5,...(C.26)
Note that the DC component is a0=1/π≈0.3183, which is exactly half the DC
component of the FWRS. This is because the HWRS signal is zero over the last half
of its period.
C-2 EXAMPLES OF FOURIER ANALYSIS 543
EXERCISE C.7 Starting from the integrals in (C.24), derive the formula in (C.26) where kis
even for the Fourier series coefﬁcients of the HWRS. Exploit complex exponential
simpliﬁcations such as ej2πk=1,ejπ=−1, and so on.
C-2.3.1 Finite Synthesis of a Half-Wave Rectiﬁed Sine
Since the ideal HWRS signal in Fig. C-8 is a continuous signal, a ﬁnite Fourier sumapproximation (C.10) can be expected to be better for a given number of coefﬁcients thanfor the discontinuous square wave. Two cases are shown in Fig. C-9, for N=2 and 8.
In the N=8 case, the approximation is very close to the original waveform, but small
ripples are visible. Adding harmonics for N> 8 will improve the synthesis just a little
bit by reducing the ripples. The N=2 case exhibits noticeable ripples because it is only
using DC and two sinusoidal terms.DEMO
Fourier Series
Finite Synthesis
It is possible to explain these differences by examining the spectrum, which will
show that the relative magnitudes of the higher frequency components being dropped for
k>2 are quite small. A plot of the spectrum for the HWRS is shown in Fig. C-10 for
F0=50 Hz. The complex amplitudes given in (C.26) fall off very rapidly, and only the
even-index harmonics are present for k>1.
From the spectrum in Fig. C-10 it is easy to write down a formula for the Fourier
series representation of HWRS waveform. For each index k, there are two spectrum lines,
one at f=50kand the other at f=−50k, which can be combined. For example, when
kis even and k>0
1
π(1−k2)ej2π(50k)t+1
π(1−k2)e−j2π(50k)t=2
π(1−k2)cos(2π(50k)t) (C.27)
The set of even indices can be generated via k=2/lscriptas/lscript=1,2,..., so we can write
x(t)=1
π+1
2sin(2π(50)t)+∞/summationdisplay
/lscript=12
π(1−(2/lscript)2)cos(2π(50)(2/lscript)t)
0 0.01 0.02 0.03 0.04 0.0501
Time t (s)0 0.01 0.02 0.03 0.04 0.0501(a) Sum of DC, 1stand2ndHarmonics
(b) Sum of DC, 1st,2nd,4th,6th, and 8thHarmonics1
2
1
2x2.t/
x8.t/DC Level
DC LevelFigure C-9 Summing harmonic components for
the half-wave rectiﬁed sine signal using ﬁnite
Fourier synthesis (C.10). (a) N=2. (b) Up to and
including the 8thharmonic (i.e., N=8). The
fundamental frequency is F0=50 Hz. The
constant DC level of 0.3183 is indicated in bothplots.
544 APPENDIX C FOURIER SERIES
0 50 100 200 300 400 500  f/NULj
4
/NUL1
3/EM/NUL1
15/EM/NUL1
35/EM/NUL1
63/EM/NUL1
99/EM1
/EMFigure C-10 One-sided spectrum of a half-wave
rectiﬁed sine signal up to and including the 10th
harmonic. The fundamental frequency is F0=50 Hz.
The odd harmonics at f=150,250,350, and 450 Hz
are zero. For negative frequencies, conjugate
symmetry a−k=a∗
kholds.
It can be seen from the above analysis that half-wave rectiﬁcation is another way to
obtain a signal with a nonzero DC level from the sinusoidal signal that is available from
the power company. The major difference from the FWRS signal is that the fundamentalfrequency of the HWRS output is half that of the FWRS fundamental. For the DC powersupply application, this makes it somewhat more difﬁcult to smooth out the ripples andachieve a constant output.
C-3 Operations on Fourier Series
In signal processing, when we manipulate signals we need to predict how the signal willchange. One of the great advantages of the Fourier series representation of periodic signalsis that operations on the signal x(t) often have very simple corresponding operations on
the Fourier coefﬁcients. These relationships are often referred to as properties of the
Fourier series representation. In Chapter 3, Section 3-3, we presented several propertiesof the spectrum of a sum of sinusoids. Since the Fourier series representation is thespectrum of a periodic signal, most of these properties must hold for the Fourier series.
This spectrum must have harmonic spectrum lines, so the only complication that might
arise is whether the operation would affect the harmonic nature of the spectrum lines, orequivalently, the periodicity of the signal. This section revisits these properties and givesseveral examples.
C-3.1 Scaling or Adding a Constant
A quick look at Section 3-3.1 reminds us that scaling is a simple property because
multiplying a periodic signal by a scale factor (i.e., γx(t)), will multiply all its Fourier
series coefﬁcients by the same scale factor (γ)
γx(t) =∞/summationdisplay
k=−∞(γak)ejω0kt
Likewise, we recall that when adding a constant only the DC component of the spectrumwill change
x(t)+c=(a
0+c)/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
new DC value+/summationdisplay
k/negationslash=0akejω0kt
Neither of these operations will change the period of the signal, so the properties inSection 3-3.1 are true for the Fourier series.
C-3 OPERATIONS ON FOURIER SERIES 545
EXAMPLE C-2 New Square Wave
Deﬁne a bipolar square wave as follows:
y(t)=/braceleftBigg
+1 for 0 ≤t<T 0/2
−1 for T0/2≤t<T 0
This square wave can be related to the zero-one square wave of Example C-1 via y(t)=
2(x(t)−1/2). Subtracting 1/2 from x(t)will change only the DC value, then multiplying
by two will double the size of all the Fourier coefﬁcients. Since the Fourier coefﬁcients
of the zero-one square wave are
ak=⎧
⎪⎪⎨
⎪⎪⎩1/2 for k=0
−j
kπforkodd
0 for k=±2,±4,...
the Fourier coefﬁcients {bk}fory(t) are
bk=⎧
⎪⎪⎪⎨
⎪⎪⎪⎩2(a
0−1/2)=0 for k=0
2ak=2/parenleftbigg−j
kπ/parenrightbigg
forkodd
0 fork=±2,±4,...
C-3.2 Adding Signals
Another simple operation is addition, but there are two cases: If the two periodic signals
have the same fundamental frequency, then the Fourier coefﬁcients are summed
x(t)+y(t)=∞/summationdisplay
k=−∞(ak+bk)ejω0kt
where the Fourier coefﬁcients of x(t) andy(t) are{ak}and{bk}, respectively. There are
special situations where ω0could change after the addition (see Problem P-C.11).
If the fundamental frequencies are different, the situation is more complicated because
the sum signal might not even be periodic. If the sum signal is periodic, ﬁnding the new
fundamental frequency for the sum involves a gcd (greatest common divisor) operation.
Then using the new fundamental frequency, all the Fourier coefﬁcients must be re-indexed
prior to adding the Fourier coefﬁcients.
546 APPENDIX C FOURIER SERIES
C-3.3 Time-Scaling Property
A basic property of the Fourier series is that the Fourier coefﬁcients are determined
by the wave shape over one period, while the fundamental frequency is determined
by the duration of the fundamental period. The operation of time-scaling, which isdeﬁned by the equation y(t)=x(αt) , will change the length of each period but
leave the wave shape the same. If x(t) is a periodic signal with period T
0and the
scaling constant is 0 <α<∞, then the period of y(t) isT0/α. In this case, we can
determine the Fourier series coefﬁcients of y(t) by applying the time-scale operation
to the Fourier series representation of x(t). Thus, the following two expressions are
equivalent:
x(αt) =∞/summationdisplay
k=−∞akej(2π/T 0)k(αt)(C.28a)
y(t)=∞/summationdisplay
k=−∞akej(2π/(T0/α))kt(C.28b)
We recognize (C.28b) as the Fourier series for a periodic function with period T0/α,
or fundamental frequency αF0. Thus, if α< 1, the period is greater than T0and
the fundamental frequency is lower than F0. When α> 1, the opposite is true. The
key observation is that the Fourier series coefﬁcients of the time-scaled signal x(αt)
are identical to those of the original signal x(t), only the fundamental frequency
changes.
EXERCISE C.8 Verify that the sum in (C.28b) produces a signal that satisﬁes y(t+T0/α)=y(t),
and, therefore, the period of y(t)=x(αt) isT0/αif the period of x(t) isT0.
EXAMPLE C-3 Time-Scaling Pulse Waves
For pulse waves, we have already derived a formula (C.14) for the Fourier coefﬁcients,a
k, and we can easily show that the time-scaling property is true for all pulse signals
with the same ratio between pulse duration and period, τ/T 0. The formula (C.14) for the
Fourier coefﬁcients of a pulse wave is repeated below
ak=⎧
⎨
⎩sin(πk(τ/T 0))
πkk=±1,±2,±3,...
τ/T 0 k=0
SinceτandT0always appear together as the ratio τ/T 0, theakcoefﬁcients depend only
on the ratio.
For example, when the period is 50 ms and the pulse width is 10 ms, the ratio
τ/T 0=0.2. Thus, we can determine the Fourier coefﬁcients for all cases where
C-3 OPERATIONS ON FOURIER SERIES 547
τ/T 0=0.2 by using the Fourier analysis integral for a 0.2 s pulse repeated with a period
of 1 s. The following integral is for a pulse length of τ/primewith a period of 1 s
ak=τ/prime/2/integraldisplay
−τ/prime/2e−j2πktdt
so the limits on the integral are ±τ/prime/2=±(τ/T 0)/2=±0.1 for this case. This integral
has fewer symbols to complicate the integration and subsequent algebraic manipulations.
It would be ideal for use with symbolic analysis programs such as Wolfram|Alpha.
EXERCISE C.9 Type in the following code to Wolfram|Alpha and interpret the result:
int_(-tau/2)ˆ(tau/2) eˆ(-i 2 pi k t) dt
C-3.4 Time-Shifting Property
In Section 3-3.3, the time-shifting property of the spectrum was derived. Since the Fourierseries deﬁnes a harmonic spectrum, it must obey the same property. If we form a newperiodic signal y(t) by time shifting x(t), then there is a simple change in the Fourier
coefﬁcients {a
k}, which are the spectrum of x(t). If the Fourier coefﬁcients of y(t) are
{bk}, then the time-shifting property of the spectrum implies
Time Shifting Property
y(t)=x(t−τd)←→ bk=ake−jω 0kτd
Thus, time-shifting x(t) will multiply its Fourier coefﬁcients akby a complex
exponential.
EXAMPLE C-4 Delayed Triangular Wave
Consider a triangular wave x(t) with period T0=0.04 s, as depicted in the
top plot of Fig. C-11. The Fourier series coefﬁcients akfor the triangular
wave x(t) are given by (C.20) and the period is T0=0.04 s, so ω0=50π.
Therefore, the Fourier series coefﬁcients of the delayed signal y(t)=x(t−0.01)
arebk=ake−j(50π)k( 0.01)=ake−jπk/ 2=(−j)kakor
bk=(−j)kak=⎧
⎪⎪⎨
⎪⎪⎩j2(−1) k+1
π2k2k=±1,±3,±5,...
0 k=±2,±4,±6,...
1/2 k=0(C.29)
548 APPENDIX C FOURIER SERIES
0 0.02 0.04 0.06 0.08 0.101(a) Triangular Wave
0 0.02 0.04 0.06 0.08 0.101(b) Triangular Wave Delayed by 0.01 s
Time t (s)1
21
2
y.t/x.t/
Figure C-11 Illustration of time delay. (a) Triangular
wave with period T0=0.04 s. (b) Triangular wave
delayed by 0.01 s.
For convenience in making the plot, the waveforms of Fig. C-11 were created with
the ﬁnite sum in (C.10) using N=35 and akfrom (C.20) and bkfrom (C.29). The errors
at the slope discontinuities are so small as to be unnoticeable on the scale of plotting.
Thus, the ﬁgure gives further evidence that the Fourier series approximation converges
uniformly with large Nif the signal is continuous.
C-3.5 Differentiation Property
In Section 3-3.4, if we form a new signal y(t)by taking the derivative of x(t), theny(t)is
also periodic with the same period and its Fourier coefﬁcients can be obtained as follows:
Differentiation Property
y(t)=d
dtx(t) ←→ bk=(jω 0k)ak
Assuming that the derivative operator can be applied to each term in the Fourier series
forx(t),w eg e t
y(t)=d
dtx(t)=∞/summationdisplay
k=−∞akd
dtejω0kt=∞/summationdisplay
k=−∞(jω 0k)ak/bracehtipupleft/bracehtipdownright/bracehtipdownleft/bracehtipupright
bkejω0kt
Thus, differentiating x(t) will multiply its Fourier coefﬁcients akby(jω 0k).
EXAMPLE C-5 Differentiated Triangular Wave
Consider a triangular wave x(t) as depicted in the plot of Fig. C-12(a). The derivative is
the slope of the linear segments, but is discontinuous at t=0,0.02,0.04,...; hence,
the derivative is a square wave as shown in Fig. C-12(b). In general, the Fourier
series coefﬁcients akfor the triangular wave x(t) are given by (C.20). When the
period is T0=0.04 s,ω0=2π/(0.04)=50π, so the Fourier series coefﬁcients of the
C-3 OPERATIONS ON FOURIER SERIES 549
0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.101
0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1050
0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1050
Time t (s)(a) Triangular Wav ex.t/
(b) D erivativ eo f Triangular Wav ey.t/Dd
dtx.t/
(c) Approximate Deriva tivefromSum of 71 terms1
2
5050Figure C-12 Illustration of time differentiation.
(a) Triangular wave. (b) Derivative of the triangular
wave. (c) Finite Fourier sum approximation using bk
for−35≤k≤35.
differentiated signal y(t) arebk=(j50πk)a k,o r
bk=(j50πk)a k=⎧
⎪⎪⎪⎨
⎪⎪⎪⎩50(−2j)
πkk=±1,±3,±5,...
0 k=±2,±4,±6,...
0 k=0(C.30)
These are the Fourier series coefﬁcients for a square wave that varies between +50
and−50. The DC value is zero because the multiplier (j50πk) is zero for k=0. The
plot in Fig. C-12(c) was constructed using (C.30) and the ﬁnite synthesis sum (C.10)
withN=35. Like the pulse waveform synthesis in Fig. C-3, we see ripples near the
discontinuities.Away from the points of discontinuous slope, however, the approximationconverges to +50 and −50, which are the slopes of the triangular wave in the ﬁrst and
last half of the period, respectively.
C-3.6 Frequency-Shifting Property and Multiplying by a Sinusoid
If you multiply a periodic signal by a complex exponential, the Fourier series componentswill move in frequency, but their values will be unchanged. From Section 3-3.5 we expectfrequency shifting of the spectrum lines (up or down). When multiplying by a sinusoid,which is the sum of two complex exponentials, the spectrum will be the sum of twofrequency-shifted spectra, one shifted up and the other down. Figure C-13 presents anexample of multiplying a periodic pulse wave x(t) by a sinusoid at twelve times the
550 APPENDIX C FOURIER SERIES
1
(a)0
1
(b)x.t/
x.t/cos.2 12=T 0/t/
tt T0 2T0T0
8
T0
8T0Figure C-13 Illustration of sinusoidal
multiplication. (a) Pulse wave with τ=T0/4.
(b) After multiplication by a cosine wave whose
frequency, 12 F0, is 12 times the fundamental
frequency of the pulse wave.
fundamental frequency of x(t). The pulse wave has Fourier series representation using
the coefﬁcients {ak},
x(t)=∞/summationdisplay
k=−∞akejω0kt(C.31a)
and the cosine wave can be written as the sum of two complex exponentials
cos(12 ω0t)=1
2ej12ω0t+1
2e−j12ω0t(C.31b)
Using the Fourier representation, the product is
y(t)=x(t)cos(12 ω0t)=/parenleftBigg∞/summationdisplay
k=−∞akejω0kt/parenrightBigg/parenleftbigg1
2ej12ω0t+1
2e−j12ω0t/parenrightbigg
(C.31c)
The product signal, y(t), will be periodic since T0is a period of the cosine wave. Thus,
the fundamental frequency of y(t) will also be F0, andy(t) has a Fourier series with
coefﬁcients that will be denoted as {bk}.
y(t)=∞/summationdisplay
k=−∞bkejω0kt(C.31d)
After we expand (C.31c) into two summations, we can identify the frequency shifting of
the spectrum of the pulse wave Fourier series, which is shown in Fig. C-14(a). This is
illustrated by (C.31e) and Figs. C-14(b) and (c). The ﬁrst sum in (C.31e) is the spectrumin Fig. C-14(b); the second sum is Fig. C-14(c).
∞/summationdisplay
k=−∞bkejω0kt=1
2∞/summationdisplay
k=−∞akejω0(k+12)t+1
2∞/summationdisplay
k=−∞akejω0(k−12)t(C.31e)
In order to combine the sums, we must change the index of summation so the complexexponential is the same in both, which gives
∞/summationdisplay
k=−∞bkejω0kt=1
2/parenleftBigg∞/summationdisplay
/lscript=−∞a/lscript−12ejω0(/lscript)t+∞/summationdisplay
/lscript=−∞a/lscript+12ejω0(/lscript)t/parenrightBigg
(C.31f)
C-4 A VERAGE POWER, CONVERGENCE, AND OPTIMALITY 551
0
(a)
0
(b)
0
(c)
0
(d)ffff
bkak
a.k12/
a.k C12/
1
81
81
41
41
4
4F0 –4F0
12F 012F 012F 0
–12F 0–12F 0–12F 0Shifted Up
ShiftedD own
SumDT0=4
Figure C-14 Frequency shifting for a periodic
pulse wave. (a) Spectrum of a pulse wave with
τ=T0/4. (b) Spectrum for the pulse wave
multiplied by e+j12ω0twhich shifts the spectrum
in (a) up to be centered at 12 ω0=2π(12F0).
(c) Spectrum for the pulse wave multiplied bye
−j12ω0twhich shifts the spectrum down.
(d) Spectrum for the pulse wave multiplied bycos(12 ω
0t).
Finally, we see that the Fourier series coefﬁcients {bk}fory(t) are
bk=ak−12+ak+12
2for all k (C.32)
This spectrum for (C.32) is shown in Fig. C-14(d), where the two shifted copies in
Figs. C-14(b) and (c) have been added together after scaling by 1 /2. In general, the
addition of the two shifted spectra involves a complex phasor addition, but this case is
simple because the cosine has zero phase and the {ak}coefﬁcients of the pulse wave are
real.
C-4 Average Power, Convergence, and Optimality
Parseval’s Theorem for the Fourier series establishes an equivalence between the sum ofthe squares of the Fourier coefﬁcients and the signal power. In effect, a spectrum plot of thecoefﬁcients {|a
k|2}can be interpreted as the distribution of signal power versus frequency.
552 APPENDIX C FOURIER SERIES
Therefore, when the Fourier series of a signal has only a few large coefﬁcients, we can
determine what fraction of the signal power is contained in those frequency components.
Likewise, when we truncate the Fourier series and synthesize a signal from a ﬁniteFourier sum like (C.10), we can estimate the approximation error by summing |a
k|2for
the coefﬁcients being dropped. This concept underlies audio compression methods suchas MP3, and also JPEG image compression, which achieve low bit rates by operating ona frequency domain representation of the signal.
Theaverage power of the periodic signal x(t) is the total energy
6of one period of
x(t) divided by the period.
P=1
T0T0/integraldisplay
0|x(t)|2dt. (C.33)
The average power is a convenient measure of the size (or strength) of the periodic signal.
EXAMPLE C-6 Average Power of a Sinusoid
For the case where x(t)=Acos(ω0t+ϕ), the average power integral
Ps=1
T0T0/integraldisplay
0|Acos(ω0t+ϕ)|2dt
can be evaluated directly, by using the trigonometric identity |cosθ|2=cos2θ=
1
2(1+cos 2θ)to simplify the integrand
Ps=1
T0T0/integraldisplay
01
2A2dt+1
T0T0/integraldisplay
01
2A2cos(2ω0t+2ϕ)dt
/bracehtipupleft /bracehtipdownright/bracehtipdownleft /bracehtipupright
integral over two periods is zero=1
2A2
Note that the average power depends only on the amplitude of the sinusoidal signal.
The result in Example C-6 can be related to the Fourier series coefﬁcients if we recall
that Euler’s formula leads directly to the Fourier series of one sinusoid, i.e.,
Acos(ω 0kt+ϕ)=1
2Aejϕejω0kt+1
2Ae−jϕe−jω 0kt(C.34)
6The “total energy” of a signal is deﬁned as
E=∞/integraldisplay
−∞|x(t)|2dt
This terminology comes from physics where if x(t)were a velocity, the kinetic energy would be proportional
to the square of velocity, or x2. The total energy of a periodic function would be inﬁnite, but the average
power, being an integral over 0 to T0, is generally ﬁnite.
C-4 A VERAGE POWER, CONVERGENCE, AND OPTIMALITY 553
The Fourier series has only two nonzero coefﬁcients, ak=1
2Aejϕanda−k=1
2Ae−jϕ.
Now consider a single complex exponential signal xk(t)=akejω0ktas would appear in a
general Fourier series representation. Since |xk(t)|=| ak|, its average power is
Pk=1
T0T0/integraldisplay
0|xk(t)|2dt=1
T0T0/integraldisplay
0|ak|2dt=|ak|2
so the average power of a single complex exponential is its magnitude squared.Adding the
average powers of the two complex exponentials in (C.34) turns out to give an alternateway to obtain the average power of the sinusoid:
P
s=|ak|2+|a−k|2=|1
2Aejϕ|2+|1
2Ae−jϕ|2=1
2A2(C.35)
This is not a coincidence. It is a special case of a more general result that holds when the
Fourier series has more than two coefﬁcients. The general result given below is knownas Parseval’s Theorem, and it applies to any periodic signal x(t) that has a Fourier series:
Parseval’s Theorem
P=1
T0T0/integraldisplay
0|x(t)|2dt=∞/summationdisplay
k=−∞|ak|2 (C.36)
EXERCISE C.10 Use Parseval’s Theorem to determine the average power of the signal
x(t)=2 cos(200 πt)+sin(400πt)
whose period is 10 ms.
EXERCISE C.11 Explain why the average power of the signal x(t)=2 sin(120πt)+cos(240 πt)is
the same as the average power of that of the signal in Exercise C.10.
EXERCISE C.12 Use Parseval’s Theorem to complete the proof of the famous formula:
π2
M=∞/summationdisplay
k=11
k2
by ﬁnding the numerical value of the integer M. In the history of mathematics, this
was known as the Basel problem, which was solved by Euler in 1735.
http://en.wikipedia.org/wiki/Basel_problem
Hint: use Parseval’s Theorem with the square wave and its Fourier series coefﬁcients.
554 APPENDIX C FOURIER SERIES
C-4.1 Derivation of Parseval’s Theorem
It is relatively straightforward to demonstrate the validity of Parseval’s Theorem. The
average power of a periodic signal can be expressed as
P=1
T0T0/integraldisplay
0|x(t)|2dt=1
T0T0/integraldisplay
0x(t)x∗(t)dt (C.37)
Recall that the conjugate of a sum is equal to the sum of the conjugates. If the Fourierseries representation of x(t) exists, then the complex conjugate of the periodic signal can
be represented by the Fourier series
x
∗(t)=/parenleftBigg∞/summationdisplay
k=−∞akejω0kt/parenrightBigg∗
=∞/summationdisplay
k=−∞a∗
ke−jω 0kt(C.38)
Substituting (C.38) into (C.37) and interchanging the order of integration and summationgives the desired result:
P=1
T0T0/integraldisplay
0x(t)/parenleftBigg∞/summationdisplay
k=−∞a∗
ke−jω 0kt/parenrightBigg
dt
=∞/summationdisplay
k=−∞a∗
k⎛
⎝1
T0T0/integraldisplay
0x(t)e−jω 0ktdt⎞⎠
/bracehtipupleft
/bracehtipdownright/bracehtipdownleft /bracehtipupright
=ak=∞/summationdisplay
k=−∞a∗
kak=∞/summationdisplay
k=−∞|ak|2(C.39)
Therefore, we have demonstrated that the average power of a periodic signal is equal to the
sum of the average powers of the individual complex exponential signals that comprise
the Fourier series representation of the periodic signal.7
C-4.2 Convergence of Fourier Synthesis
We can think of the ﬁnite Fourier synthesis sum (C.10) as making an approximation to
the true signal, i.e.,
x(t)≈xN(t)=N/summationdisplay
k=−Nakejω0kt
7It should be noted that implicit in the above demonstration of the validity of the Parseval Theorem, is
that the frequencies are harmonically related so that the term within the large parentheses on the second line
of the derivation of (C.39) is, in fact, the Fourier integral for obtaining akfromx(t). An alternate derivation
would use the Fourier series representation for both x(t) andx∗(t)and then invoke the orthogonality of the
harmonically related complex exponentials to eliminate integrals involving different frequencies.
C-4 A VERAGE POWER, CONVERGENCE, AND OPTIMALITY 555
0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.101
Time t (s)0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.101
1
2
1
2(a)Sum ofDC and1stthrough 7thHarmonics
(b)Sum ofDC and1stthrough 13thHarmonicsx7.t/
x13.t/Figure C-15 Summing harmonic components
via the ﬁnite Fourier synthesis sum (C.10).
(a)N=7. (b)N=13.
In fact, our discussion so far suggests that with enough terms in the sum, the approximation
will be perfect (i.e., xN(t)→x(t),a sN →∞ ). This is illustrated by Fig. C-15, which
shows the square wave approximations for N=7 andN=13.
DEMO
Fourier Series
Finite SynthesisOne way to assess the quality of the approximation is to deﬁne an error signal,
eN(t)=x(t)−xN(t), that measures the difference between the true signal and the signal
that would be synthesized with Nterms. Then we can quantify the error by measuring a
feature of the error. For example, a commonly used feature is the maximum magnitude
of the difference over one period, which is called the worst-case error.
Eworst=max
t∈[0,T0)|x(t)−xN(t)| (C.40)
For the square wave, |eN(t)|, the absolute value of the error, is shown in Fig. C-16
forN=7 and N=13. Figure C-16 was generated with period T0=0.04 s by using
the Fourier coefﬁcients from Example C-1 in a MATLAB script to generate a plot ofthe absolute error. Since the ideal square wave is discontinuous, the worst-case erroris always half the size of the jump in the waveform precisely at the discontinuitypoint. The more interesting feature of the absolute error comes from examining thesize of the “ears” seen in Fig. C-15 on either side of the discontinuity. In Fig. C-16,thisovershoot error is found on either side of the large peaks of the error: in e
7(t)at
t≈0.0025 s, with size 0.092; in e13(t)the overshoot peak occurs at t≈0.00143 s, and
is of height 0.09. In fact, it has been proven that as Nincreases, the overshoot peak
moves closer to the discontinuity, but the peak height remains at about 9% of the sizeof the discontinuity. (For these examples, the size of the discontinuity jump is one.)
The mathematical analysis of this approximation error was ﬁrst published by J. Willard
Gibbs
8in 1898, and is now referred to as the Gibbs phenomenon in the theory of Fourier
series.
If we perform a similar error analysis for the triangular wave, or the rectiﬁed sines, the
worst-case error is well-behaved because these signals are continuous. The worst-case
8Gibbs received the ﬁrst American doctorate awarded in engineering from Yale in 1863.
556 APPENDIX C FOURIER SERIES
0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1  0            
Time t (s)0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1  0            1
2
1
2je7.t/j
je13.t/j(a) Error with 1st through 7th Harmonics
(b) Error with 1st through 13th HarmonicsFigure C-16 Error magnitude when
approximating a square wave with a sum of
harmonic components xN(t)via ﬁnite Fourier
synthesis (C.10). (a) N=7. (b)N=13.
error will converge to zero as N→∞ (i.e., there is no Gibbs phenomenon). For the
N=3 and N=9 approximations of the triangular wave, the worst-case errors can be
measured by making a zoomed version of Fig. C-7. When these errors are measured, the
result is 0.0497 for N=3 and 0.0202 for N=9. Since there is no discontinuity involved,
these worst-case errors get smaller as Nincreases.
EXERCISE C.13 Carry out a measurement of the worst-case error for the full-wave rectiﬁed sine signal
when approximating with Nterms for N=3 andN=9.
C-4.3 Minimum Mean-Square Approximation
Worst-case error only measures point-wise convergence of the approximation to the ideal
signal, but it is not the only way to measure the size of the approximation error difference.In fact, to prove convergence of the Fourier series for all signals including the squarewave, another error measure has been developed. This is the mean-square error, wherethe measurable feature of the approximation error is an averaging integral of the squarederror over the whole period. The mean-square error is the average power in the errorsignal e
N(t)=x(t)−xN(t), which is denoted ENand deﬁned as
EN=1
T0T0/integraldisplay
0|x(t)−xN(t)|2dt
where x(t) is a periodic signal and xN(t)is any ﬁnite Fourier series written as
xN(t)=N/summationdisplay
k=−Nαkejω0kt(C.41)
C-4 A VERAGE POWER, CONVERGENCE, AND OPTIMALITY 557
Here the coefﬁcients αkare not necessarily equal to the coefﬁcients akderived from x(t)
by doing the Fourier series analysis integral. The question then is the following: If we
want to minimize the error EN, how should we choose the ﬁnite set of coefﬁcients αkfor
−N≤k≤Nto best approximate the periodic signal x(t), which we know is represented
exactly by the inﬁnite Fourier series with coefﬁcients ak? To answer this question, we
begin by writing
eN(t)=x(t)−xN(t)
=∞/summationdisplay
k=−∞akejω0kt−N/summationdisplay
k=−Nαkejω0kt=∞/summationdisplay
k=−∞(ak−αk)ejω0kt(C.42)
where, by deﬁnition, αk=0 for|k|>N . Now using Parseval’s Theorem, we can express
the mean-square approximation error as
EN=1
T0T0/integraldisplay
0|x(t)−xN(t)|2dt=∞/summationdisplay
k=−∞|ak−αk|2(C.43)
Sinceαk=0 for|k|>N , the error ENcan be written as
EN=N/summationdisplay
k=−N|ak−αk|2+/summationdisplay
|k|>N|ak|2(C.44)
Equation (C.44) provides the answer to our question. Since all the individual terms in thesums on the right-hand side are positive, it follows that if we choose α
k=akfor−N≤
k≤N, then the ﬁrst sum is zero and the second sum over all the Fourier coefﬁcients,
where |k|>N will be the residual mean-square error of the approximation. Thus, we
can state that the choice αk=akfor|k|≤N minimizes the mean-square approximation
error for a ﬁnite number of terms. Since all the terms in the second sum are positive,we conclude that the mean-square approximation error always decreases as we add moreterms (increase N), because we have fewer terms remaining in (C.44). Thus, the inﬁnite
Fourier series converges in the sense that the mean-square approximation error goes tozero if we include all the terms in the Fourier series. Therefore, by using the mean-squareerror measure, the theory of Fourier series can be made mathematically rigorous even fordiscontinuous signals like the square wave.
Convergence in the mean-square sense may be a somewhat surprising result if we
recall the Gibbs behavior shown in Fig. C-16. However, if we increase Nto a large value,
the plot of the approximation error magnitude will retain the shape of those in Fig. C-16,but the oscillations will be very fast over the entire period and very small except in anarrow vicinity around the discontinuity. We can already see this from a comparison of|e
7(t)|and|e13(t)|. We can say intuitively that in the limit of large N, all of the error
occurs at the single discontinuity point and the integral of the squared error approacheszero. Note, however, that with this interpretation, the worst-case error is still half the sizeof the discontinuity, but it occurs only at one point on each period of the waveform.
558 APPENDIX C FOURIER SERIES
EXERCISE C.14 Make a plot of |e100(t)|over one period of the square wave and compare it to the plots
in Fig. C-16. In order to obtain a plot that shows the behavior of the approximation
around the discontinuity, it will be necessary to evaluate the error signal at thousandsof time instants across one period.
C-5 The Spectrum in Pulsed-Doppler Radar Waveform Design
Radar is a system for using electromagnetic wave propagation to measure the distancefrom a ﬁxed antenna to another (possibly moving) object. The design of signals for use inradar is an example where the spectrum provides mathematical insight about trade-offsin the selection of time-domain parameters of waveforms. The frequency-shifted pulsewave of Fig. C-13 is the basis for the pulsed-Doppler radar waveform used in many radars.
The same waveform is used in the biomedical application of ultrasound to measure blood
ﬂow. This waveform enables simultaneous measurement of range and velocity, and isneeded in systems where a single transducer is used to transmit and receive the signals.
This section describes how the spectrum can be used to understand the radar waveform
design problem.
C-5.1 Measuring Range
The word RADAR is an acronym for RAdio Detection And Ranging. The simplest
radar measurement is range to a target (or reﬂector). The basic principle of rangemeasurement is illustrated by Fig. C-17. A short pulse is transmitted throughthe atmosphere, it reﬂects off of an object, and returns to the receiving antenna.Range is determined by measuring the time elapsed from the beginning of thepulse until the reﬂected pulse arrives back at the sending location. In radarsystems, a single antenna is used both to transmit and to receive the signal.
9
Figure C-18 shows that the transmitted radar signal must be very short if the transmit andreceive antenna is shared, because the signal travels at the speed of light, c=3×10
8m/s,
Range = d
Figure C-17 Illustration of radar system
for tracking rain clouds.
9Ultrasound systems use high-frequency acoustic transducers.
C-5 THE SPECTRUM IN PULSED-DOPPLER RADAR WA VEFORM DESIGN 559
0x.t/
ATransmitted Pulse
Receiv edEcho
t 2d
c2d
cCFigure C-18 Illustration of pulsed radar
signals: transmitted pulse and received echo
delayed by the two-way travel time.
x.t/
ATransmi t Transmit
Echo Echo
t 0 2d
c2d
cC T0 T0C T0C2d
cte2Figure C-19 Pulsed high-frequency radar
transmitted signal r(t)and received echoes.
The pulse repetition interval is T0s. The radar
frequency is FrHz.
and we must be able to distinguish between the transmitted pulse and its echo from the
target. For example, if we want to detect a close reﬂecting target at 1500 m range, thenthe two-way travel time (out to the target and back) is
τ
d=2/parenleftbiggd
c/parenrightbigg
=2/parenleftbigg1500
3×108/parenrightbigg
=1000×10−8=10μs
In order to receive the returned pulse at this time without confusion, the transmitted pulsesignal must be off (zero) as shown in Fig. C-18, so its duration τwould have to be less than
10μs. On the other hand, a more distant target at 120 km would have a two-way travel
time of 800 μs, so the close target distance at 1500 m imposes a much tighter constraint
on the duration of the transmitted pulse.
In Fig. C-18, the transmitted pulse is shown as a simple on–off waveform. However,
practical radar systems transmit periodic pulsed sine wave signals of the form
r(t)=p(t) cos(2πF
rt+ϕ) (C.45)
where p(t) is the on/off periodic pulse signal as in Fig. C-13(a). Such a signal is shown in
Fig. C-19 along with the received echoes from the pulses. As suggested by Fig. C-14(d),the spectrum of the periodic sinusoidal pulse signal r(t)in (C.45) is centered on F
r.B y
adjusting the center frequency Frof the sinusoidal pulses, the radar signal spectrum can
be positioned at frequencies where electromagnetic transmission is most efﬁcient. Eachpulse “samples in range” the environment along a direction determined by the antennaorientation. By sending repeated pulses and rotating the antenna, it is possible to scan asurrounding region of space.As we will see below, the periodic sinusoidal pulse waveformalso allows the tracking of the velocity of targets.
C-5.2 Measuring Velocity from Doppler Shift
The measurement of velocity is based on the Doppler-shift principle, which is experienced
in everyday life, for example, as the changing sound of a horn on a moving train. When
560 APPENDIX C FOURIER SERIES
the train is coming toward the listener the frequency of the sound from the horn goes up;
after the train passes and moves away from the listener, the frequency drops. In radar,the same frequency shift happens when the reﬂecting target is moving toward, or awayfrom, the radar antenna. Doppler shift is the basis of police radar used to catch speederson a highway, and also weather radar which measures wind velocity from reﬂections offof rain drops and other wind-blown particles.
To understand the Doppler phenomenon, it is helpful to begin by assuming that the
transmitted radar signal is the continuous-wave (not pulsed) sinusoid
s(t)=Acos(2πF
rt+ϕ) (C.46)
As depicted in Fig. C-17, the transmitted signal propagates from the radar antenna and
is reﬂected by a target such as a moving rain cloud at nominal range d0and moving
with velocity vrelative to the radar antenna (which is also the receiving antenna). In
other words, the target distance in Fig. C-17 varies with time as d(t)=d0−vt, where
it is assumed for simplicity that vis positive in the radial direction from the target to
the receiving antenna. Assuming that the velocity vis small compared to the speed of
electromagnetic propagation c=3×108m/s, the roundtrip time delay from the antenna
to the target and back to the antenna is τd=2(d0−vt)/c . Therefore, the continuous-wave
signal received back at the antenna is
ˆs(t)=Bcos(2πFr(t−τd)+ϕ)=Bcos(2πFr(1+2v/c)t−4πd0Fr/c+ϕ)
where Bdenotes the (usually much smaller) amplitude of the returned sinusoidal signal.
Thus, the return signal has frequency Fr+Fd=Fr(1+2v/c) and the amount of frequency
shift is seen to depend on the radial velocity of the target relative to the velocity of signal
propagation—that is, the Doppler frequency shift Fdis
Fd=2v
cFrHz (C.47)
where vis the radial velocity of the target, and Fris the radio frequency used by the radar.
Because cis very large compared to velocities of even supersonic aircraft, the Doppler
shift is small compared to the typical radar frequency Fr. For example, for a 1 GHz radar,
wind in a rain storm at 30 m/s (≈ 67 mph) will produce a Doppler shift of
Fd=2(30)
3×108109=200 Hz
The model for the Doppler phenomenon is easy to state in the frequency domain.
If we assume that the radar signal (or train horn) is a pure sinusoid, then its spectrumconsists of two lines at ±F
r. When the Doppler shift is positive, Fd>0, the spectrum
lines are shifted up to ±(F r+Fd); for negative Doppler, Fd<0, the lines at ±(F r+Fd)
are shifted down. The radar receiver must be able to measure the amount of frequencyshift, and then the velocity can be obtained from (C.47) via
v=1
2c
FrFdm/s (C.48)
C-5 THE SPECTRUM IN PULSED-DOPPLER RADAR WA VEFORM DESIGN 561
Because the frequency shift is extremely small compared to Fr, accurate measurement
of target velocity relies on detecting very small movement of a spectrum line from Frto
Fr±Fd.
Although we asserted that the spectrum consists of two lines, this is only true if the
transmitted time signal is an inﬁnitely long sinusoid, Acos(2πFrt+ϕ), which is useless
for measuring range where a short pulse (e.g., τ=10μs) is needed for detecting the
time delay τd. The clever solution to this dilemma is the frequency-shifted periodic pulse
signal shown in Fig. C-19. In radar, this signal is called the pulsed-Doppler waveform.
C-5.3 Pulsed-Doppler Radar Waveform
Recall that the frequency-shifted sinusoidal signal being transmitted is
r(t)=p(t) cos(2πFrt+ϕ) −∞<t<∞ (C.49)
where p(t) is a periodic on/off signal with pulse duration τand pulse repetition period
T0=1/F 0. Although it is not a required condition, it simpliﬁes our discussion here to
assume that Fr=MF 0. Thus, the signal r(t)will be exactly periodic with period T0, and
the spectrum of r(t)will have an inﬁnite set of lines at frequencies kF0withkan integer.
This is similar to the spectrum shown in Fig. C-14(d), and is depicted for the radar case
in Fig. C-20(a), where only the spectrum lines near the peak at f=Frare shown.
At the radar antenna, the transmitted and received signals must not overlap in time.
In order that the returned pulse be distinct from the transmitted pulse in each period,
the two-way travel time to the nearest target must be greater than the pulse width τ.
The period of the pulse wave must also obey a range constraint; the two-way travel time
to the farthest target must be within the time interval as shown in Fig. C-19. Thus, werequire T
0≥τ+2dmax/cwhere τis the pulse length and dmaxis the maximum range. For
example, if we pick T0=1 ms and τ=10μs, then targets between 1500 m and 148 km
will cause echoes within the period as depicted in Fig. C-19.
If we assume that the time duration of r(t)is inﬁnite, then the transmitted radar signal
consists of an inﬁnite number of sinusoidal pulses spaced with period T0. Since r(t)is a
periodic signal with T0=1 ms, it has a Fourier series and its spectrum consists of lines
with a spacing of F0=1000 Hz as depicted in Fig. C-20(a).10When Fr=1 GHz, the
spectrum will have lines at f=Fr±1000/lscriptHz, with the largest amplitude lines being
clustered near the radar’s frequency FrHz. With this spectrum we can detect a limited
range of frequency shifts because a Doppler shift will move the spectrum line at FrHz to
Fr+Fd.As long as the frequency shift up or down does not get too close to the neighboring
harmonic lines at Fr±1000 Hz, there is no ambiguity about the amount of frequency
shift. With a 1000 Hz spacing of harmonics, the maximum unambiguous Doppler shiftis±500 Hz. Converting to velocity, this would be ±75 m/s (or ≈201 mph). Notice that
the period T
0controls both the maximum range and the maximum unambiguous velocity
interval. Making T0smaller increases the unambiguous velocity interval while shortening
the maximum range.
10Incidentally, if Fr=1 GHz, the spectrum line at f=Fris, in this case, the millionth harmonic.
562 APPENDIX C FOURIER SERIES
(a)
(b)ff
FrFr FrCF0 FrF0 FrC2F0 Fr2F0 FrC3F0 Fr3F0
FrCFd
FrCFdCF0
FrCFdF0
FrCFdC2F0
FrCFd2F0
FrCFdC3F0
FrCFd3F0Spectrum ofTransmitted Pulse Train (near fDFrHz)
Spectrum of Rece ived Pulse Train (near fDFrHz)whenFdis Ne gative
Figure C-20 Spectra of (a) periodic pulse wave frequency shifted to f=FrHz (assuming Fr=MF 0) and then
(b) Doppler shifted down by FdHz (i.e., Fdis negative). Only the spectrum lines near f=FrHz are shown. When the
number of pulses is ﬁnite, the lines become Dirichlet shapes with ﬁnite width inversely proportional to the number of
pulses.
C-5.4 Measuring the Doppler Shift
In a practical radar system, the signal length cannot be inﬁnite, so the pulsed-Doppler
waveform would have to be truncated to a ﬁnite number of pulses (Np). As shown in
Chapter 8, this changes the spectrum by broadening the harmonic lines to have a Dirichletshape with nonzero width. The width of the Dirichlet peaks impacts the frequency shiftmeasurement which must detect the movement of the spectrum line from F
rtoFr+Fd;
the narrower the Dirichlet width, the easier the measurement. In Chapter 8, we also showthat the width of the spectrum lines is inversely proportional to the total signal durationN
pT0. Thus, by using more pulses in the ﬁnite pulsed-Doppler waveform we can make the
spectrum lines as narrow as needed. For example, with 50 pulses and a one millisecondpulse repetition interval, the width of the measured spectrum lines would be 20 Hz, andit would be easy to detect frequency shifts of that size. When converted to velocity in a1 GHz radar, a Doppler shift of 20 Hz is 3 m/s, so the measurements would be accurateto within ±1.5 m/s.
The processing done in the radar receiver to compute the frequency shift would
require spectrum analysis with the DFT—a topic that is treated in Chapter 8. Our maingoal here has been to describe how a sufﬁciently complicated waveform can be usedsimultaneously for two different measurements. The spectrum representation has beencentral to our discussion of the many trade-offs that arise in the design of that waveform.
C-6 PROBLEMS 563
C-6 Problems
The problems in this section address the major concepts of Fourier Series presented in
this appendix. On the Companion Website there are many related homework problems
which can be used for review and practice. Some of them have detailed solutions.
NOTE
Problems with Solutions P-C.1 A periodic signal x(t)=x(t+T0)is described over one period −T 0/2≤t≤T0/2
by the equation
x(t)=/braceleftBigg
1 for |t|<tc
0 for tc<|t|≤T 0/2
where tc<T 0/2.
(a) Sketch the periodic function x(t) over the time interval −2T0<t<2 T0for the
casetc=T0/4.
(b) Determine the DC coefﬁcient a0.
(c) Determine a formula for the Fourier series coefﬁcients akin the ﬁnite Fourier
representation (3.37). Your ﬁnal result should depend on tcandT0.
(d) Sketch the spectrum of x(t) for the case ω0=2π(100)andtc=T0/4. Use a
frequency range from −10ω0to+10ω0.
(e) Sketch the spectrum of x(t) for the case ω0=2π(100)andtc=T0/10. Use a
frequency range from −10ω0to+10ω0.
(f) From your results in (d) and (e), what do you conclude about the relationship
between tcand the relative size of the high-frequency components of x(t)? When
tcdecreases, do the high-frequency components get bigger or smaller relative to
the size of a0?
P-C.2 The periodic waveform in Fig. P-C.2 has the property of half-wave symmetry
(i.e., the last half of the period is the negative of the ﬁrst half). More precisely, signalswith half-wave symmetry have the property that
x(t+T
0/2)=−x(t) −∞<t<∞ (C.50)
1
1x.t/
t T01
2T0 T01
2T0
Figure P-C.2
In this problem we will show that this condition has an interesting effect on the Fourierseries coefﬁcients for the signal.
564 APPENDIX C FOURIER SERIES
(a) Suppose that x(t) is a periodic signal with half-wave symmetry and is deﬁned over
half a period by
x(t)=t for 0≤t<T 0/2
where T0is the period of the signal. Plot this periodic signal for −T 0≤t≤T0.
(b) Prove that the DC coefﬁcient a0is zero for any periodic signal having half-wave
symmetry. Hint: Split the integral for a0into two parts.
(c) Prove that all the even indexed Fourier series coefﬁcients are zero for a signal with
half-wave symmetry (i.e., ak=0i fkis an even integer).
P-C.3 A signal x(t) is periodic with period T0=8. Therefore, it can be represented as
a Fourier series of the form
x(t)=∞/summationdisplay
k=−∞akej(2π/8)kt
It is known that the Fourier series coefﬁcients for this representation of a particular signal
x(t) are given by the integral
ak=1
80/integraldisplay
−4(4+t)e−j(2π/8)ktdt
(a) In the integral expression for akabove, the integrand, the period, and the limits
deﬁne the signal x(t). Determine an equation for x(t) that is valid over one period.
(b) Using the result from part (a), draw a plot of x(t) over the range −8≤t≤8s .
Label your plot carefully.
(c) Determine a0, the DC value of x(t).
P-C.4 A periodic signal x(t) with a period T0=10 is deﬁned over one period,
0≤t≤10 as
x(t)=/braceleftBigg
00 ≤t≤5
25 <t≤10
(a) Sketch the periodic function x(t) over the time interval −10≤t≤20.
(b) Determine the DC coefﬁcient of the Fourier series, a0.
(c) Use the Fourier analysis integral (3.27) to ﬁnd a1, theﬁrstFourier series coefﬁcient
(i.e.,akfork=1).
C-6 PROBLEMS 565
(d) If we add a constant value of one to x(t), we obtain the signal y(t)=1+x(t) with
y(t) given over one period by
y(t)=/braceleftBigg
10 ≤t≤5
35 <t≤10
This signal can also be represented by a Fourier series, but with different
coefﬁcients:
y(t)=∞/summationdisplay
k=−∞bkejkω 0t
Explain how b0andb1are related to a0anda1.Note:You should not have to evaluate
any new integrals explicitly to answer this question.
P-C.5 The following signal is the product of a sinusoid and a ﬁnite Fourier series:
x(t)=sin(7t)/parenleftBigg3/summationdisplay
k=−33
2+jkejkt/parenrightBigg
(a) Explain why the term in parentheses is real-valued.
(b) Use the frequency shifting property to make a sketch of the spectrum of the signal
deﬁned above.
(c) Since the signal x(t) is real, verify that the spectrum is conjugate symmetric.
P-C.6 Suppose that a periodic signal is deﬁned as
q(t)=cos(3πt)2/summationdisplay
k=−2/parenleftbiggj5
k+j1.5/parenrightbigg
ej8πkt
(a) Prove that the signal q(t) is real-valued.
(b) Determine the fundamental period of q(t).
(c) Determine the DC value of q(t).
(d) Make a table listing all the nonzero Fourier coefﬁcients of the signal q(t).
(e) Make a spectrum plot of this signal showing only the positive frequency compo-
nents. Label all the complex amplitudes.
P-C.7 Consider the periodic function x(t) plotted in Fig. P-C.7.
(a) Find the DC value a0and the other Fourier coefﬁcients akfork/negationslash=0 in the Fourier
series representation of x(t).
566 APPENDIX C FOURIER SERIES
1
0x.t/
t T0 2T01
4T0T0 2T01
4T0 Figure P-C.7
(b) Deﬁne a new signal as y(t)=2x(t−T0/2), and then sketch the waveform of
y(t). Use the scaling and time shifting properties to write down the Fourier series
coefﬁcients b0andbkfork/negationslash=0 for the periodic signal y(t) without evaluating any
integrals.
P-C.8 Suppose that a periodic signal is deﬁned over one period as:
x(t)=/braceleftBigg
7 for 0 ≤t≤5
3 for 5 <t<8
(a) Assume that the period of x(t) is 8 s. Plot x(t) over the range −10≤t≤10 s.
(b) Determine the DC value of x(t) from areas, or from the Fourier series integral.
(c) Write the Fourier integral expression for the coefﬁcient akin terms of the speciﬁc
signal x(t) deﬁned above. Set up all the speciﬁcs of the integral (i.e., limits of
integration and the integrand).
(d) Determine a general expression for the Fourier series coefﬁcients, {ak},b y
evaluating the Fourier integral expression. Simplify the expression into polar form,
so that the magnitude and phase are explicit.
(e) It might be true that every ﬁfth, or every eighth, coefﬁcient is zero for k>0.
For example, a5=0,a10=0,a15=0, etc.; or, a8=0,a16=0,a24=0, etc.
Determine which speculation is true.
P-C.9 Make plots of the spectra for both the FWRS and HWRS signals. Use the complex
amplitudes from (3.34) and (C.26) and assume that T1=0.02 s for the full-wave signal
andT0=0.02 s for the half-wave signal. The result should be different fundamental
frequencies.
P-C.10 It turns out that the Fourier series coefﬁcients for the signal y(t)=x(αt) , which
has period T0/α, are exactly the same as the Fourier series coefﬁcients for the signal x(t),
which has period T0. This is the time-scaling property of the Fourier series.
(a) For the pulse wave (C.11), the Fourier series coefﬁcients are given by (C.14).
Suppose that p(t) is a periodic pulse wave with τ=0.02 s, where T0=0.1 s is the
period. Make a sketch of q(t)=p(t/5); in the process, determine the period and
pulse width of q(t).
C-6 PROBLEMS 567
(b) From the known Fourier series (C.14) compare the expressions for the Fourier
series coefﬁcients of p(t) andq(t). Manipulate the expressions to show equality.
(c) Prove that the time-scaling property is true. The following Fourier analysis integral
gives the Fourier series coefﬁcients of the time-scaled signal x(αt) :
bk=1
T0/αT0/α/integraldisplay
0x(αt)e−j(2π/(T 0/α))ktdt
By changing the dummy variable of integration to u=αt, show that the right-hand
side is the same as the Fourier analysis integral for x(t) (i.e.,bk=ak).
P-C.11 If a periodic signal has a Fourier series where all the odd-indexed coefﬁcients
are zero, then the fundamental frequency has been chosen incorrectly. Suppose that x(t)
where f0=3 Hz and the Fourier coefﬁcients are
ak=/braceleftBigg
j12/k fork=±1,±2,±4,±6
0 otherwise
(a) Sketch the spectrum for x(t).
(b) Deﬁne y(t)=x(t)+24 sin(6πt) . Sketch the spectrum for y(t).
(c) Explain why the fundamental frequency of y(t) is not 3 Hz.
(d) Determine the correct fundamental frequency for y(t), and also redeﬁne the Fourier
coefﬁcients of y(t) for the new f0.
P-C.12 Suppose that a periodic signal x(t) is deﬁned by the plot in Fig. P-C.12 (only
the section −8≤t≤8 is shown):
0 2 4 6 80123
Time (s)1
2
2 4 6 8x.t/
t
Figure P-C.12
(a) Determine the period T0ofx(t).
(b) Determine the fundamental frequency of x(t) in Hz.
568 APPENDIX C FOURIER SERIES
(c) Determine the DC value of x(t).
(d) Write the Fourier integral expression for the coefﬁcient akin terms of the speciﬁc
signal x(t) deﬁned above. Set up all the speciﬁcs of the integral(s) including
the limits of integration, but do not evaluate any integral. All parameters in the
integral(s) should have numeric values.Note: more than one integral might be needed.
P-C.13 The following MATLAB code deﬁnes vectors
xtandzt, which correspond to
a ﬁnite segment of the periodic signals x(t) andz(t):
tt = -1000:0.1:1000; %- in seconds
xt = zeros(size(tt));for k = [-3,-1,0,1,3] %- loop on k for only these indices
xt = xt + (1 + abs(k) - j*k)*exp(j*0.02*pi*k*tt);
endxt = real(xt); %- x(t) should be real-valuedzt = xt - 3.2 + 8*cos(0.06*pi*tt - pi);
(a) Determine the fundamental period of the signal x(t) deﬁned in the MATLAB code
above.
(b) The signal x(t)has a Fourier series with coefﬁcients {ak}, deﬁned by the MATLAB
code. Determine the numerical values of the {ak}coefﬁcients for |k|≤3i npolar
form.
(c) The new signal deﬁned for z(t)is also periodic with a Fourier series, so it can be
expressed in the following Fourier series with new coefﬁcients {bk}:
z(t)=3/summationdisplay
k=−3bkej0.02πkt
Determine the numerical values of the {bk}coefﬁcients for |k|≤3i npolar form.
P-C.14 Shown in Fig. P-C.14 are spectrograms for two periodic signals, x1(t)andx2(t).
The frequency axis has units of Hz.
(a) The spectrum line at f=2000 Hz is the same N-th harmonic of both signals;
determine N.
(b) The two signals have the same fundamental frequency. Determine the fundamental
period T0of each signal using accurate estimates from the spectrograms.
(c) One of these signals is a 50% duty-cycle square wave; recall the harmonic structure
of its Fourier series. Determine which signal ﬁts this description and explain your
answer.
C-6 PROBLEMS 569
0 0.1 0.2 0.3 0.4 0.505001000150020002500300035004000Spectrogram of x1.t/
Time (s)Frequency (Hz)
0 0.1 0.2 0.3 0.4 0.505001000150020002500300035004000Spectrogram of x2.t/
Time (s)Frequency (Hz)
Figure P-C.14
P-C.15 The properties of the Fourier series can be used to avoid actual integration of
the Fourier integral.
(a) Determine the Fourier series coefﬁcients of a full-wave rectiﬁed cosine (FWRC)
signal x(t)=|cos(2πt)|by using the time-shifting property and the known Fourier
series coefﬁcients for the full-wave rectiﬁed sine, s(t)=|sin(2πt)|, which are
ak=2
π(1−4k2)
(b) Starting from the known Fourier series coefﬁcients of the half-wave rectiﬁed sine
(HWRS) given in (C.26), determine the Fourier series coefﬁcients of a full-wave
rectiﬁed sine (FWRS) signal by using the additive and time shifting properties.
(c) For the pulse wave (C.11), the Fourier series coefﬁcients are given by (C.14).
Suppose that p(t) is a periodic pulse wave with τ=0.02 s, where T0=0.1s i s
the period. If the Fourier series coefﬁcients of p(t) are denoted by ak, deﬁne a new
signal q(t) by changing the sign of every other coefﬁcient, i.e.,
q(t)=∞/summationdisplay
k=−∞(−1)kakejω0kt
Make a plot of q(t). Recall that (−1)kcan be written as a complex exponential.
P-C.16 The Fourier series coefﬁcients of the triangular wave in Fig. P-C.7 can be
obtained without doing integration of the Fourier analysis integral. The key is to usethe differentiation property.
570 APPENDIX C FOURIER SERIES
(a) If the triangular wave is x(t), make a sketch of the derivative signal y(t)=d
dtx(t).
(b) One way to determine the Fourier series coefﬁcients of y(t) is by invoking the
differentiation property assuming that the Fourier coefﬁcients of x(t) areak. If the
Fourier coefﬁcients of y(t) arebk, give an equation for bkin terms of ak.
(c) The result of part (a) should be a scaled square wave with zero DC. Thus, it is
relatively easy to write down the Fourier series coefﬁcients of y(t) from the pulse
wave results.
(d) Equate the results of parts (b) and (c) and solve for akto ﬁnd the Fourier series
coefﬁcients of the triangular wave in Fig. P-C-2.
APPENDIX
D
Laboratory
Projects
This appendix contains a list of the laboratories that are currently available on the
Companion Website. Each of the labs corresponds to material primarily from one chapter,
although some of the lab projects use concepts from several chapters. There are two typesof lab descriptions: lab projects which are longer and lab exercises which are shortenough to be done during a typical 2–3 hour supervised lab session. Tables D-1 and D-2summarize 25 labs available on the Companion Website with a cross reference to theprimary chapter(s) involved in each lab. The structure of the labs is as follows:
Overview: Each lab starts with a brief review of the key concepts to be studied and
implemented.
Pre-Lab: The Pre-Lab section consists of a few exercises that introduce some simple
MATLAB commands that will be needed in the lab. These should be easy enoughthat students can ﬁnish them successfully with little or no outside help.
Warm-up: The warm-up section consists of more simple exercises that introduce the
MATLAB functionality needed for the Exercises or Project of that lab. The warm-up is intended to be completed during a supervised lab time, so that students can ask
questions of an expert. In our own use of these experiments, we have implemented
571
572 APPENDIX D LABORATORY PROJECTS
Table D-1 Laboratory Projects on the Companion Website.
Lab Subject Chapter
P-1 Introduction to MATLAB 2
P-2 Complex Exponentials: Multipath 2
P-3 Complex Exponentials: Direction Finding 2
P-4 AM and FM Sinusoidal Signals 3
P-5 Synthesis of Sinusoidal Signals (Speech or Music) 3
P-6 Shepard Scale Synthesis 3
P-7 FM Synthesis for Musical Instruments 3
P-8 Digital Images: A/D and D/A 4
P-9 Sampling, Convolution, and FIR Filtering 5
P-10 Edge Detection in Images: UPC decoding 5
P-11 Hearing Test via Frequency Response 6
P-12 Frequency Response: Bandpass and Nulling Filters 6
P-13 Encoding and Decoding Touch-Tone Signals 7 and 9
P-14 Octave Band Filtering 9
P-15 Cochlear Implant Filter Bank Simulation 9o r1 0
P-16 PeZ—The z,n, and ˆωDomains 10
Table D-2 Short Laboratory Exercises on the Companion Website.
Lab Subject Chapter
S-1 Complex Exponentials: Source Localization 2
S-2 Complex Exponentials: Direction of Arrival 2
S-3 Complex Exponentials: Beamforming with Phasors 2
S-4 Convolution and FIR Filtering 5
S-5 DLTI GUI and Nulling Filters 6
S-6 FIR Filter Design 7
S-7 Spectrogram: AM and FM Signals 3o r8
S-8 Spectrogram: Harmonic Lines and Chirp Aliasing 4o r8
S-9 PeZ: Remove Interference from EKG Signals 10
a system in which the laboratory instructor must verify the appropriate steps by
initialing an Instructor Veriﬁcation sheet for a few key steps. Examples of this
veriﬁcation sheet are included in the lab writeups on the Companion Website.
APPENDIX D LABORATORY PROJECTS 573
Exercises: The bulk of the work in each lab consists of exercises that require some
MATLAB programming and plotting. All of the exercises are designed to illustrate
theoretical ideas presented in the text. Furthermore, we have included numerousprocessing examples that involve real signals such as speech, music, and images.
The short labs have only Exercises and Homework.
Projects: In some cases, the labs require implementations that are so large and
complicated that it is no longer fair to call them exercises. In labs such as FMSynthesis for Musical Instruments, Synthesis of Sinusoidal Signals (Speech orMusic), Encoding and Decoding Touch-Tone Signals, and others, the problemstatement is more like that of a design project. In these cases, students shouldbe given some ﬂexibility in creating an implementation that satisﬁes a generalobjective. In addition, many individual parts must be completed to make the wholeproject function correctly.
Homework: In the short labs, there are homework assignments that are extensions of
of the exercises. These could be assigned as unsupervised work that complementsthe main body of the lab.
These labs can be done with a recent version of MATLAB. Since a few of the labs
require M-ﬁles that are not part of the standard MATLAB release, we also providea package of DSP First M-ﬁles containing functions developed for this book. The
Companion Website gives a link to instructions for installing the DSP First toolbox.
NOTE
Install DSP First Toolbox
for MATLAB
Index
A-to-D converter, seeAnalog-to-digital (A-to-D) converter
Accumulator system, 438
Adder, 190Adding a constant to a signal, 81–82Advanced signal, 168n1Alias, 127–128
folded, 128principal, 128–130, 135, 138–139
Aliasing, 129, 131–132, 134, 141, 148–149, 152, 154,
244–247, 332
(folding) distortion, 333due to under-sampling, 135–136folding due to under-sampling, 136–138time, 319, 322
AM broadcast system, 81AM radio, 74, 78, 81, 116Amplitude, 29, 32, 34, 43, 215
complex, 45, 48–49function, 235–236and phase plots, 237
Amplitude modulation, 78–81
beat note, 75–78spectrum, 79–80
Analog signals, 122–123, 129, 137, 159, 165, 245Analog-to-digital (A-to-D) converter, 27, 31, 124, 171, 301Angle function, 46, 106–109Angle of complex number, 42Angle function of cosine, 106
Argument of complex number, 42Associative property of convolution, 202–203Audio system, 27–28Autocorrelation function, 278Average value, 98, 169
Bandedges, 290–291Bandlimited interpolation, 147Bandlimited signal, 99, 122, 148, 267–270, 282, 331–332,
537
continuous-time, 331–334ideal, 267–268reconstruction, 122
Bandpass ﬁlter, 283–284, 399–401Band-reject ﬁlter, 284Bandwidth, 80–81, 99
3-dB, 468–470of pulse wave, 533, 536–537of spectrum, 80–81
Beat note, 75–78Beating of tones in music, 77Block-diagram notation, 190Block diagrams, 27
of FIR systems, 190–194, 374–375of IIR systems, 428–432
574
INDEX 575
C-major scale, 103
spectrogram, 104
Carrier
frequency, 78, 81
signal, 78
Cartesian form, 42–43, 49, 491 (See also Rectangular form)
Cascade connection, 202, 232, 381, 383Cascaded LTI systems, 202–204, 232–234, 381–382Causal ﬁlter, 171–172Causality, 171Centralized averager, 207Center frequency, 75Chirp signals, 105–109Colon operator, 513–514Commutative property of convolution, 186–187Complex amplitude, 45, 48–49Complex exponential, 42–44, 495,
orthogonality, 305, 529–530signals, 43–45
Complex numbers, 42–43, 489–510
addition, 49, 496–497conjugate, 497deﬁnition, 490–494division, 496–497multiplication, 496–497notation, 491–494represented as vector, 489
Complex powers, 504–505Complex roots, 383, 459, 504–505Conjugate of complex number, 47–48, 497Conjugate symmetry property, 72, 85–86, 226Continuous-time signals, 23, 25–26, 28–29, 168, 322, 327
bandlimited, 331–332ﬁltering sampled, 244–249Fourier series for, 329sample of, 123–124, 129sinusoidal signals, 125spectrum representation of, 130–131, 136, 148
Continuous-time systems, 167, 245Continuous-to-discrete (C-to-D) converter, 26–27, 124, 148
(See also Sampling)
Convolution, 184
associative property, 202commutative property, 186–187, 200–201computing the output of, 182derivation of, 199–200distributive property, 202identity element, 201of impulses, 201length of, 183and LTI systems, 198–202
in MATLAB, 184MATLAB GUI for, 187sum formula, 199–200and the z-transform, 378–380
Cooley, 309n5Cosine modulation property, 356Cosine signals (waves), 29–30Cubic spline interpolation, 144–145Cutoff frequency of ideal ﬁlter, 280Cyclic frequency, 35
DC, 37
coefﬁcient, 538–539
component, 71, 82–83, 96, 98, 231, 535, 542, 544of Fourier series, 98–99power converters, 95–96term, 78, 120value, 82, 96, 98–100, 241, 537
Deconvolution, 384Deﬁnition of z-transform, 368–370
Delay-compensated running-average ﬁlter, 206Delayed signal, 191, 378Delay system, 226–227Delta function, 178DeMoivre’s formula, 505Derivative, 33, 56
of angle function, 106–107of Fourier series, 528–531of FWRS, 100of HWRS, 541of sine plus DC, 84–85of triangular wave, 548–549
DFT, seeDiscrete Fourier transform
Difference equation, 170Difference frequency, 75, 77–78Digital-to-analog (D-to-A) converter, 27, 132, 135, 141,
143, 146
Direct current, 37n3, 71n3Direct form FIR structure, 191Direct form I structure, 428–429Direct form II structure, 429–431Dirichlet form, 235n5, 235, 236Discrete convolution evaluation of, 378Discrete Fourier Series (DFS), 328–330Discrete Fourier transform, 301–358
of complex exponential, 307–308computation of, 308–309conjugate symmetry of, 312–314convolution property, 324–326
576 INDEX
deﬁnition of, 303
frequency response plotting, 315–316inherent periodicity of, 318–322inverse, 304–305L-point, 314matrix form of, 309–310negative frequencies of, 311–312N-point, 314–315
pairs, 306periodicity of, 318–321properties, 310–314, 321–324of real cosine signal, 316–317of shifted impulse, 306table of pairs, 327table of properties, 328time-dependent, 345–348zero padding, 323z-transform and, 387–389
Discrete-time cosine signal, 125, 129Discrete-time ﬁltering, 48Discrete-time Fourier transform (DTFT), 259–300
bandlimited, 267–270of a complex exponential, 273convolution and, 275–277deﬁnition of, 261existence of, 265forward, 261frequency shift and, 273inverse, 266–267, 270L-point rectangular pulse, 263, 274linearity of, 262, 272periodicity of, 261properties of, 271–279, 294of a pulse, 263of a right-sided exponential sequence, 264of a shifted impulse sequence, 261–262of a sinc function, 268–270spectrum interpretation, 270–271table of pairs, 293table of properties, 293time delay and, 272uniqueness of, 263of windows, 339–340
Discrete-time frequency (ˆω), 125
Discrete-time signal, 123Discrete-time systems, 168–169Discrete-to-continuous (D-to-C) converter, 27, 131–132,
135–136, 138, 140–149, 154, 244, 246–249
Discrete-to-continuous conversion, 141–147
interpolation with pulses, 141–147oversampling in, 145–147Domains, seeThree domains
Doppler radar, 558–563
Dow-Jones industrial average, 204DSP First toolbox, 104n15DTFT, seeDiscrete-time Fourier transform (DTFT)
Dual-tone multi-frequency (DTMF) signals, 110Dummy index of summation, 278, 305, 385Dummy variable of integration, 95, 266
Echo, 559
Effective frequency response, 244–245Elliptic ﬁlter, 474–476Energy spectrum, 277
autocorrelation function and, 277–279
Envelope, 76–77, 307Envelope detector, 79Euler’s formula, 43, 495–496
inverse, 47–48, 496
Factoring z-polynomials, 383
Fast Fourier Transform (FFT), 309, 343, 346, 348, 354–358
derivation of, 354–357operation count of, 357
Feed-forward coefﬁcients, 415–416Feed-forward difference equation, 167, 191Feedback coefﬁcients, 415Feedback systems, 414FFT, seeFast Fourier Transform
Filter design, 285
cutoff frequency, 289practical ﬁlters, 286passband deﬁned 288–289passband ripple, 288passband edge, 288stopband deﬁned 289–290stopband ripple, 290stopband edge, 289transition width, 290windowed sinc, 286–287
Filter length, 175Filters (See also Filtering)
bandpass, 399–401complex bandpass, 399linear-phase, 404–406practical bandpass, 401–404
Filtering, 28, 357
convolution property of, 277discrete-time, 48ﬁlter design and, 284–293FIR, 176–178, 188, 204–207, 284–285ideal bandpass, 283ideal highpass, 282–283
INDEX 577
ideal lowpass, 281–282
IIR, 415interpretation of delay, 246–249inverse, 384running-sum, 234–243of sampled continuous-time signals, 244–249unit-step response, 185–186
Finite Fourier sum, 100, 303Finite impulse response (FIR) system, 167, 414Finite-length signal, 169Finite number of sinusoids, 74FIR ﬁlter, 174–176, 188, 204–207, 284–285
block diagrams for, 190–194and convolution, 181frequency response of, 215–216implementation of, 189–190
FIR ﬁltering, seeFIR ﬁlter
examples of, 176–179, 204–207
First-difference system, 227–229FM signals, 106 (See also Frequency modulation)
Folded aliases, 128Folding frequency, 139Fourier, Jean-Baptiste, 59Fourier analysis, 95
full-wave rectiﬁed sine (FWRS), 95–100half-wave rectiﬁed sine (HWRS), 541–544pulse wave, 534–538triangular wave, 538–541
Fourier analysis integral, 95, 527Fourier series, 94–100, 527–563
approximation error, 100coefﬁcients, 95convergence of, 551–558DC value of, 98–99derivation, 528–531full-wave rectiﬁed sine, 95–100Gibb’s phenomenon, 555–556half-wave rectiﬁed sine (HWRS), 541–544operations on, 544–551orthogonality, 305, 554Parseval’s theorem for, 553pulse wave, 534–538spectrum, 98–100square wave, 535synthesis equation, 270, 533triangular wave, 538–541
Fourier series integral, 103, 327, 528–531Fourier synthesis, 94–95, 99, 528
ﬁnite, 533
Fourier synthesis summation, 528Fourier transform
discrete, seeDiscrete Fourier transform
discrete time, seeDiscrete-time Fourier transform
(DTFT)
fast, seeFast Fourier Transform
short-time discrete, 346
Fourier transform pairs, 292–293, 327
Fourier transforms and LTI systems, 366Frequency
cyclic, 35instantaneous, 105–109radian, 35
Frequency division multiplexing, 81Frequency modulation (FM)
angle function, 106chirp signal, 105–109instantaneous frequency, 106spectrogram of, 109
Frequency resolution, 350–353Frequency response
of cascaded LTI systems, 232–234effective, 244graphical representation of, 226–243formula for, 217of an LTI FIR ﬁlter, 216plotting the, 235–238properties of, 223–226of second-order IIR ﬁlter, 466–470sinusoidal, of FIR systems, 215–217steady-state and transient responses, 221–223superposition and, 218–221
Frequency scaling, 132Frequency selective ﬁlters, 279–284Frequency shifting property, 78, 86
Doppler shift, 560–561property, 273–274, 328, 549–551
Frequency-domain, 59, 71, 259–260Frequency-domain approach, 221Frequency-domain representation, 71, 259–260, 262, 266,
342–343
Full-wave rectiﬁed sine (FWRS), 95–100
ﬁnite synthesis of, 99–100spectrum of, 98–100
Fundamental frequency, 87, 333Fundamental period, 87, 96, 532, 546
of discrete-time sinusoid, 331–332
Gain, 216, 220, 230, 392, 402–403, 473
of LTI system, 216
Geometric series, 234, 263–264
578 INDEX
Gibbs phenomenon, 555
Half-wave rectiﬁed sine (HWRS), 541
ﬁnite synthesis of, 543
Fourier series, 542spectrum of, 544
Hamming, Richard, 285n9Hamming window, 285–289Hann, Julius von, 338n10Hann window, 338–341Harmonic frequency, 87Hertz, Heinrich, 36n2Hertz, unit of frequency, 36Highpass ﬁlter, 227, 282–283
Ideal continuous-to-discrete (C-to-D) converter, 26–27,
124, 131–134, 148, 244, 247
Ideal discrete-to-continuous (D-to-C) converter, 27,
131–132, 140–149, 154, 244
Ideal ﬁlters, 279–284, 402
bandpass, 283–284
band-reject, 284highpass, 282–283lowpass, 280–282
Ideal reconstruction, 131–133IIR digital ﬁlters, 414–476
block diagrams for, 428–432deﬁnition, 415difference equation for, 415–416frequency response of, 440–443impulse response of, 419–421linearity and time invariance of, 418–419poles and zeros for, 432–436response to ﬁnite-length input, 421–422stability of, 436–440system function of, 425–428
Image smoothing example, 240–243Imaginary part, 42Implementation structures, 429Impulse in MATLAB, 475Impulse response, 179–181
ﬁnite, 167ﬁrst-order IIR system, 419–421unit, 178–181
Impulse response sequence, 179–181Initial rest conditions, 417, 419Inner product, 514–515Instantaneous frequency, 106–109Interpolation, 123, 132
cubic spline, 144–145ideal bandlimited, 147linear, 40–41, 143–144with pulses, 141zero-order hold, 142–143
Interpretation of delay, 246–249Inverse z-transform, 369
Inverse discrete Fourier transform (DFT), 304–306, 355Inverse DTFT, 266–267, 270Inverse Euler formulas, 47–48, 70, 75Inverse ﬁltering, 384
L-point rectangular window, 284, 338
L-point running averager, 247L-point running sum ﬁlter, 234L
throot of unity, 397 (See also roots of unity)
Left-sided exponential signal, 292Line spectra, 72Linear combination, 70, 74, 199, 260, 267, 371, 419Linear FM signals, 106Linear interpolation, 40Linear phase ﬁlters, 227, 286–287, 404–406Linear time-invariant (LTI) systems, 180, 194–198Linearity, 167, 194, 196–198
of DFT, 316–317, 328of DTFT, 262, 267, 272, 275, 294and time-invariant IIR ﬁlters, 418–419ofz-transform, 371
Linearly swept frequency, 105–106Local spectrum, 338, 343, 348Lowpass ﬁlter, 229–231, 280–282, 474–476LTI systems, 194–204, 232–234, 277, 373–374
cascade, 202–204, 232–234causal, 437, 439convolution and, 198–200derivation of convolution sum, 199–200properties of, 195–197, 200–202
Magnitude, 42, 216–220, 227–228, 239
of complex number, 42squared spectrum, 278
Main lobe, 237, 286, 340MATLAB, 511–526
array multiplication, 515colon operator, 513–514debugging, 521–522ﬁgure windows, 516functions, 518help command, 512M-ﬁle, 519–522multiple plots, 517
INDEX 579
phasors, demo, 53
plotting, 516–517pointwise array operations, 515printing, 517programming constructs, 517reshape matrix, 467scripts, 518–519spectrogram, 103–104vectorizing, 524–525zvect,zcat,zprint, 508
MATLAB built-in functions, 518MATLAB help, 512MATLAB GUI
con2dis, 140dconvdemo, 188DLTIdemo, 249filterdesign, 291–292fourierseries, 100Sine Drill,3 8zdrill, 43, 499–500
MATLAB programming, 522–526MATLAB scripts, 518–519MATLAB variables, 512–516Matrix multiplication, 514–515MP3 compression, 27Modulating signal, 79Modulo-N arithmetic, 322
Multipath fading, 67–68Multiplier, 189–190Music notation, 101–102Musical scale, 30
Narrowband spectrogram, 415
n-domain, 367–369, 371, 388Negative frequency, 46, 48Newton’s second law, 55Noise, 176Noncausal ﬁlter, 172, 239Nonlinear systems, 197Non-periodic signal, 92–93Normalized radian frequency, 35Nulling, 257Nulling ﬁlters, 392–393Nyquist, Harry, 131n6Nyquist rate, 131
Octave, 102
ˆω-domain, 367, 369
One-dimensional continuous-time system, 25
Orthogonality property, 305, 529–530Outer product, 515Output-signal, 25Over-sampling, 134–135, 145–147
Parseval’s Theorem, 277, 279, 557
Partial fraction expansion, 448Passband, 288Period, 30, 35–37, 87Periodic signal, 74, 87–92Periodicity of H(e
jˆω), 225
PeZ GUI, 472–474Phase, 29, 34Phase change in complex amplitudes of spectrum
delayed cosine, 84derivative of sine plus DC, 84–85
Phase shift, 44, 216Phasor, 45
addition, 48–54MATLAB demo of, 53rotating, 46–47
Physics of tuning fork, 54–57Piano keyboard, 102Pixel, 240Plots and graphics, 516–517Pointwise array operations, 515–516Polar form, 42–43, 228–229, 237
of complex number, 42–43, 492of complex roots, 459
Poles of H(z) , 389–396, 432–433
Pole-zero plot, 390–391Polynomial division, 182n11Polynomial multiplication, 184Positive frequency, 46Principal aliases, 130, 132, 135Principal value, 39, 237Principle of superposition, 196Property of the spectrum representation, 81Properties of z-transform, 378, 388, 448
Pulse Wave, 534
Fourier series, 535spectrum of, 536ﬁnite synthesis of, 537–538time scaling of, 546–547sinusoidal multiplication of, 550
Radian frequency, 29, 35Radix-2, 355Rational function, 367, 373Real part, 42, 151, 226, 491Receiver, 560, 562
580 INDEX
Reconstruction, 122–123, 131, 144–149, 154
cubic spline, 144
GUI, 140–141ideal, 147linear, 143spectrum view of, 132zero-order hold, 143n10
Rectangular form, 42, 51
of complex number, 42, 491–492
Rectangular window, 284–285Recursive ﬁlter, 414 (See also IIR digital ﬁlters)
Reducing modulo 2 π,3 9
Region of convergence, 373, 427Resolution of the spectrogram, 342–343Riemann integral, 271Right-sided exponential signal, 264Roots of unity, 505–506Rotating disk, 153Rotating phasor, 45–47Running-average ﬁlter, 169–173Running-average ﬁltering, 176–178
smoothing an image, 240–243
Running-sum ﬁltering, 234–239
Sample spacing, 39–40
Sampling, 23–24, 26, 39–41, 122–125 (See also C-to-D
conversion)
aliasing and, 129bandlimited periodic signals, 331–334frequency-domain, 314–316oversampling, 134–135, 145–147reconstruction GUI, 140–141sinusoidal signals, 125–127spectrum view, 133–138under-sampling, 135–138
Sampling frequency, seeSampling rate
Sampling period, 23, 39, 123Sampling rate, 124Sampling theorem, 130–131, 148–149, 319Sampler, 26Scale factor, 81Second-order IIR ﬁlters, 455–472Shannon, Claude, 131n6Shannon sampling theorem, 130–131, 142, 148–149Shannon/Nyquist sampling theorem, 131Short-time discrete Fourier transform, 346Sidelobes, 236–237, 340–341, 536Signal, 21–22
continuous-time, 23cosine, 32–34discrete-time, 23, 25
sine, 32–34speech, 21–24two-dimensional, 23–24video, 21–22, 24
Sinc function, 147, 268–270Sinc signal, energy of, 278Sine-cubed signal, 91–92Sine and cosine functions, review of, 32–34Sinusoidal amplitude modulation
AM spectrum, 79–80
amplitude modulation, 74, 78–79beat note waveform, 75–77concept of bandwidth, 80–81multiplication of sinusoids, 74
Sinusoidal response of FIR systems, 215–216Sinusoidal steady-state component, 453Sinusoid-in gives sinusoid-out, 214, 277Sinusoids, 29
period of, 30, 35–37phase and time-shift of, 37–39plotting of, 35, 39–41sampling, 39–41tuning fork experiment, 30–32
Sinusoids, spectrum of sum of, 70–74
analysis vssynthesis, 73–74
graphical plot, 72–73notation change, 72
Smoothing an image, 240–243spectgr, 104n15Specgram, 104Spectral components, 70, 88Spectral line, 72Spectrogram, 101, 342–354
analysis, 103–105, 301display of, 348frequency resolution in, 350–353interpretation of, 348–350of chirp, 105–107, 110, 139of a linear-FM signal, 109MATLAB, 353–354music notation and the, 101–103piano, 110of a sampled periodic signal, 327–337of simple sounds, 75, 110
Spectrum representation, 69–109
adding signals, 82–83bandwidth of, 80–81complex amplitudes of, 84DC component, 71
INDEX 581
deﬁnition, 70n1, 71
of a discrete-time signal, 129–130frequency shifting behavior, 85–86of full-wave rectiﬁed sine (FWRS), 98–100of half-wave rectiﬁed sine (HWRS), 544non-periodic signal, 92–93operations on, 81–87plot of, 72–73of a product, 75of a pulse wave, 536scaling or adding constant, 81–82of sum of sinusoids, 70–74of sum of two equal-amplitude sinusoids, 76time-frequency, 101–105of a triangular wave, 540two-sided, 71
Spectrum analysis of periodic signals, 334–337Spectrum of discrete-time signal, 129–130Square wave, 92, 535
bipolar, 545zero-one, 545
Square-law system, 194–195Squarer system, 25Stability, 423
general deﬁnition of, 423mathematical condition for, 423, 437, 439from pole location, 436region of convergence and, 438–440steady-state response and, 451–453
Stable systems, 436Steady-state part, 222Steady-state response, 451–455Step response, 423
ﬁrst-order IIR system, 422–424
Stepped frequency, 103Stopband, 289Strobe, 149–154
demonstration, 149–154spectrum interpretation, 153–154
Suddenly applied input, 221–222, 417, 419, 452–453, 455Superposition, 378, 448
frequency response, 218–221principle of, 196property of DTFT, 272, 294property of z-transform, 378, 448
Support of a sequence, 169, 174Synthesis procedure, 73–74Synthetic polynomial multiplication, 203, 234Synthetic vowel, 88–90System function H(z)of cascade, 381
of FIR ﬁlter, 376of IIR ﬁlter, 425
Systems
as building blocks, 27–28cascading, 381–383deﬁnition, 21discrete-time, 168–169FIR, 214–217IIR, 436–440, 456–460linear time-invariant, 194–204, 232–234, 277,
373–374
mathematical representation of, 25–26unit-delay, 374
Three Domains
for FIR, 367–368, 384–389for IIR, 445–446movie, 396–397PeZ GUI, 397, 407, 472–474
Time aliasing, 319, 322Time-delay property of z-transforms, 371–372
Time-dependent discrete Fourier transform, 345–348 (See
also Spectrogram)
Time-domain, 221
chirp signal, 107convolution, 378DTFT, 293–294DFT, 324, 327–328operations, 81representation, 71, 73, 76, 95, 260, 369, 374response, 416–418signal, 130, 278of under-sampling, 137
Time-ﬂip system, 195–196Time–frequency spectrum, 101–105 (See also Spectrogram)
analysis, 103–104stepped-frequency waveforms, 103
Time invariance, 195–196Time shift (delay), 37–39
effect on spectrum, 84property of DFT, 321–322property of DTFT, 272property of z-transform, 371–372
Time-windowing, 363Transient response
of FIR ﬁlter, 221–223of IIR ﬁlter, 453–455
Transition region, 222, 403Transmitter, 103
582 INDEX
Transposed form
of FIR ﬁlter, 193
of IIR ﬁlter, 431–432
Triangular wave, 538
ﬁnite synthesis of, 540–541Fourier series, 539spectrum of, 540
Trigonometric identities, 34Tukey, 309n5Tuning fork, 30–32
physics of, 54–57
Two-sided spectrum, 71
Unit circle, 386–387Unit delay, 189, 372, 374
operator, 189, 374property of the z-transform, 372
system, 374
Unit impulse response, 179–181Unit impulse sequence, 178–179Unit impulse signal, seeunit-impulse sequence
Unit-step, 185–186Unstable, 423
system, 436, 438
von Hann, Julius, 338n10
V owel signal, seeSynthetic vowel
Weighted running average, 173Windowing, 284–286, 337–342Writing a MATLAB function, 519
z-domain, 384–386, 388
zdrill GUI, 499
z-plane, 373, 378n4, 386–390z-transform
basic properties, 371–372convolution and the, 378–384deﬁnition, 368–370DFT and, 387–389domains, seeThree Domains
general formula, 372–373inverse, 369–370, 446–451linear systems and, 373–377linearity of, 371of FIR ﬁlter, 375of impulse response, 375–376as an operator, 378pair, 369poles and zeros, 389–397, 432–436polynomial roots, 376–378, 383properties, 388region of convergence, 373of a signal, 370of second-order ﬁlters, 455–466superposition property of, 378, 448table of, 447time-delay property of, 371–372unit circle and, 386–387z
−1operators, 374
Zero-order hold, 142–143
interpolation, 142–143reconstruction, 143n10
Zero padding, 314–316Zeros, 389–391
of FIR linear-phase systems, 405–406ofH(z) , 389–391
